[{"id":0,"href":"/code_snippets/code_snippet_example/","title":"Code Snippet Example","parent":"Code Snippets","content":"If you want to add a new snippet to the page, simply make a code snippet in this folder like this\nGive your snippet a unique name and send the pull request!\nMake sure to fill out the fields in the top, but do not include a weight\nEverything is written in Markdown, but you can add html inside of {{}}\nMake code blocks using highlights\n{{\u0026lt; highlight cpp \u0026#34;linenos=table\u0026#34; \u0026gt;}} // Wow look at this code int a = 1; int b = 1; if (a + b == 11) { LOG(\u0026#34;Success\u0026#34;); } else { LOG(\u0026#34;Failure\u0026#34;); } {{\u0026lt; /highlight \u0026gt;}} becomes 1 2 3 4 5 6 7 8 // Wow look at this code int a = 1; int b = 1; if (a + b == 11) { LOG(\u0026#34;Success\u0026#34;); } else { LOG(\u0026#34;Failure\u0026#34;); } If you don\u0026rsquo;t want the line numbers or highlighting, just use a normal Markdown code block\n```cpp // codeblock ``` becomes\n// codeblock "},{"id":1,"href":"/imgui/color_picker/","title":"Color Picker","parent":"Imgui","content":"You\u0026rsquo;ve got a super cool looking overlay, but you want the user to change the color. Here\u0026rsquo;s some code for a super nice color picker!\nFirst, you need to be rendering something on the canvas. Let\u0026rsquo;s say it\u0026rsquo;s a single chunk of text. Like this example.\nNext, make a cvar for color. This is really simple. The default value can be encoded with hex 1 cvarManager-\u0026gt;registerCvar(\u0026#34;cool_color\u0026#34;, \u0026#34;#FFFFFF\u0026#34;, \u0026#34;color of overlay\u0026#34;); Now in the canvas render, use the new color 1 2 3 4 5 6 7 CVarWrapper textColorVar = cvarManager-\u0026gt;getCvar(\u0026#34;cool_color\u0026#34;); if (!textColorVar) { return; } LinearColor textColor = textColorVar.getColorValue(); canvas.SetColor(textColor); // render text after setting the color This code goes wherever you\u0026rsquo;re rendering your ImGui 1 2 3 4 5 6 7 CVarWrapper textColorVar = cvarManager-\u0026gt;getCvar(\u0026#34;cool_color\u0026#34;); if (!textColorVar) { return; } // converts from 0-255 color to 0.0-1.0 color LinearColor textColor = textColorVar.getColorValue() / 255; if (ImGui::ColorEdit4(\u0026#34;Text Color\u0026#34;, \u0026amp;textColor.R)) { textColorVar.setValue(textColor * 255); } Here\u0026rsquo;s the final result. First when you hover the ColorButton\nAnd here\u0026rsquo;s when the ColorPicker popup is opened by clicking the ColorButton\nThere\u0026rsquo;s multiple flags to change the ColorEdit. If you want a color wheel, or alpha, or just the color button, there\u0026rsquo;s many ImGuiColorEditFlags found on line 1150 of IMGUI/imgui.h\nFor example, I like this combination 1 ImGui::ColorEdit4(\u0026#34;Text Color With Flags\u0026#34;, \u0026amp;textColor.R, ImGuiColorEditFlags_NoInputs | ImGuiColorEditFlags_AlphaBar) With these flags it looks like this\nClick here to see exactly how this code is used in CoolPlugin\u0026rsquo;s source\n"},{"id":2,"href":"/imgui/custom_fonts/","title":"Custom Fonts","parent":"Imgui","content":"Want to add a custom fancy font to your plugin? It\u0026rsquo;s really easy! You can use any .ttf font, although many have copyrights. Check out https://fonts.google.com/ for a bunch of free fonts to use.\nFirst, make a pointer to save your font. Do this in your .h as a variable 1 ImFont* myFont; Next load the font using the GUIManager. This can be done pretty much anywhere, but I recommend using your OnLoad or SetImGuiContext functions. OnLoad happens at startup of the plugin, and SetImGuiContext happens when the plugin\u0026rsquo;s ImGui is initialized. Either will hopefully ensure your font is loaded before you use it (barring any errors) 1 2 3 4 5 6 7 8 9 10 11 12 13 auto gui = gameWrapper-\u0026gt;GetGUIManager(); // This syntax requires c++17 // Pick any name you want for the font here auto [res, font] = gui.LoadFont(\u0026#34;font.tff 40px\u0026#34;, \u0026#34;font.ttf\u0026#34;, 40); if (res == 0) { LOG(\u0026#34;Failed to load the font!\u0026#34;); } else if (res == 1) { LOG(\u0026#34;The font will be loaded\u0026#34;); } else if (res == 2 \u0026amp;\u0026amp; font) { myFont = font; } Finally use the font in your ImGui code. Remember that when you push a font, you have to pop it when you\u0026rsquo;re done. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // First ensure the font is actually loaded if (!myFont) { auto gui = gameWrapper-\u0026gt;GetGUIManager(); myFont = gui.GetFont(\u0026#34;font.tff 40px\u0026#34;); } // Now use the font if (myFont) { ImGui::PushFont(myFont); ImGui::Text(\u0026#34;This is using a custom font\u0026#34;); ImGui::PopFont(); } else { ImGui::Text(\u0026#34;The custom font haven\u0026#39;t been loaded yet\u0026#34;); } Here\u0026rsquo;s an example using the open source Ubuntu font, as compared to the ImGui default The code for this is taken from Martinn\u0026rsquo;s awesome custom font example. I just made this page to get more visibility for it.\n"},{"id":3,"href":"/imgui/draggable_location/","title":"Draggable location","parent":"Imgui","content":"Imagine you have a plugin that renders something on the screen. Users might want to move it to a different location. Dragging\u0026rsquo;s a great way to make it move, and here\u0026rsquo;s how to get it to work!\nFirst, you need to be rendering something on the canvas. Let\u0026rsquo;s say it\u0026rsquo;s a single chunk of text, with its location defined at the top left. Like this example.\nNext we\u0026rsquo;ll add a simple level of customizability with location cvars. X is the left to right axis, and Y is top to bottom. (0, 0) is the top left of the screen 1 2 cvarManager-\u0026gt;registerCvar(\u0026#34;cool_x_location\u0026#34;, \u0026#34;0\u0026#34;, \u0026#34;set x location of the overlay\u0026#34;); cvarManager-\u0026gt;registerCvar(\u0026#34;cool_y_location\u0026#34;, \u0026#34;0\u0026#34;, \u0026#34;set y location of the overlay\u0026#34;); Now in the canvas render, just use those new locations 1 2 3 4 5 6 7 8 9 10 CVarWrapper xLocCvar = cvarManager-\u0026gt;getCvar(\u0026#34;cool_x_location\u0026#34;); if (!xLocCvar) { return; } float xLoc = xLocCvar.getFloatValue(); CVarWrapper yLocCvar = cvarManager-\u0026gt;getCvar(\u0026#34;cool_y_location\u0026#34;); if (!yLocCvar) { return; } float yLoc = yLocCvar.getFloatValue(); canvas.SetPosition(Vector2F{ xLoc, yLoc }); // now render everything else Now the user can change the location of the overlay in the console, but now you can add it to the GUI too. In your RenderSettings() add these lines 1 2 3 4 5 6 7 8 9 10 11 12 CVarWrapper xLocCvar = cvarManager-\u0026gt;getCvar(\u0026#34;cool_x_location\u0026#34;); if (!xLocCvar) { return; } float xLoc = xLocCvar.getFloatValue(); if (ImGui::SliderFloat(\u0026#34;X Location\u0026#34;, \u0026amp;xLoc, 0.0, 5000.0)) { xLocCvar.setValue(xLoc); } CVarWrapper yLocCvar = cvarManager-\u0026gt;getCvar(\u0026#34;cool_y_location\u0026#34;); if (!yLocCvar) { return; } float yLoc = yLocCvar.getFloatValue(); if (ImGui::SliderFloat(\u0026#34;Y Location\u0026#34;, \u0026amp;yLoc, 0.0, 5000.0)) { yLocCvar.setValue(yLoc); } Now you can move the x and y locations with sliders, and finally we can add dragging.\nFirst add a checkbox to enable the dragging mode. Without that check there\u0026rsquo;s some weird interactions on when dragging will happen.\nThen the code is fairly simple. Put it where you\u0026rsquo;re doing your ImGui rendering. It sets the cvar values to the x and y locations of the mouse if left click is held. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 // inDragMode is just a bool declared at the top of the .cpp file ImGui::Checkbox(\u0026#34;Drag Mode\u0026#34;, \u0026amp;inDragMode); if (inDragMode) { if (ImGui::IsAnyWindowHovered() || ImGui::IsAnyItemHovered()) { // doesn\u0026#39;t do anything if any ImGui is hovered over return; } // drag cursor w/ arrows to N, E, S, W ImGui::SetMouseCursor(2); if (ImGui::IsMouseDown(0)) { // if holding left click, move // sets location to current mouse position ImVec2 mousePos = ImGui::GetMousePos(); xLocCvar.setValue(mousePos.x); yLocCvar.setValue(mousePos.y); } } This video shows the code in action! Click here to see exactly how this code is used in CoolPlugin\u0026rsquo;s source\n"},{"id":4,"href":"/imgui/overlays/","title":"Overlays","parent":"Imgui","content":"Want the powerful flexibility of ImGui for a simple text overlay? Here\u0026rsquo;s how.\nFirst make sure you\u0026rsquo;ve uncommented all of the plugin window code in the template\u0026rsquo;s .h file. Then in your GUI file go to the render() function. For a custom overlay, you\u0026rsquo;ll need to prepare flags for it to appear the way you want it to.\nThese are found at line 744 of imgui.h\nSome useful flags for an overlay are:\nImGuiWindowFlags_NoTitleBar removes the title bar\nImGuiWindowFlags_NoScrollbar disables a scroll bar from appearing\nImGuiWindowFlags_AlwaysAutoResize automatically resizes the window to fit the content\nImGuiWindowFlags_NoDecoration removes the scrollbar, title bar, and disables manual resizing\nImGuiWindowFlags_NoFocusOnAppearing prevents the overlay from stealing focus from other ImGui windows\nImGuiWindowFlags_NoInputs makes the mouse pass right through the window to RL\nImGuiWindowFlags_NoBackground disables the background of the window\nHere\u0026rsquo;s an example of starting a window with some flags 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 ImGuiWindowFlags WindowFlags = ImGuiWindowFlags_NoDecoration | ImGuiWindowFlags_AlwaysAutoResize | ImGuiWindowFlags_NoFocusOnAppearing; // If moveOverlay is true, the user can move the overlay // When false the overlay window no longer accepts input // I find this useful to connect to a CVar and checkbox in the plugin\u0026#39;s settings // You can allow a user to move the overlay only when they want if (!moveOverlay) { WindowFlags |= ImGuiWindowFlags_NoInputs; } // creates the window with the given flags if (!ImGui::Begin(menuTitle_.c_str(), \u0026amp;isWindowOpen_, WindowFlags)) { ImGui::End(); return; } // Do your overlay rendering with full ImGui here! If you don\u0026rsquo;t want the overlay to close when a user presses esc, change this function to return false 1 2 3 bool PluginName::IsActiveOverlay() { return false; } "},{"id":5,"href":"/plugin_tutorial/getting_started/","title":"Setup your installs","parent":"Plugin Tutorial","content":"Trying to get into making plugins for the first time? There\u0026rsquo;s some super useful tools out there! These steps should get you started on the path towards development.\nNote these instructions are designed for Windows 10 (and presumably 11). Rocket League is Windows exclusive, so this is the easiest way to develop for it. If you really want to use linux, it will be harder but may still be possible\nMake sure you have bakkesmod installed and run it at least once https://bakkesmod.com/ Download Visual Studio 2022. Note that this is not the same as Visual Studio Code. https://visualstudio.microsoft.com/ During Visual Studio\u0026rsquo;s install, make sure you select and download Desktop development with C++\nTo add it to an existing install open Visual Studio, hit Tools, then Get Tools and Features...\nEither through the installer or with an existing install you\u0026rsquo;ll eventually get to this menu. Ensure Desktop development with C++ is checked. It may appear in a different location in different Visual Studio versions\nIf it\u0026rsquo;s not checked, check it and then hit Install in the bottom right Get Martinn\u0026rsquo;s template set up. Either add the template to your Visual Studio or make a new repo using the GitHub template Start coding! When you build, your plugin will automatically be moved into your plugins folder, and it will load in Rocket League. If you\u0026rsquo;re having trouble understanding how to start the code, try looking at Starting A Plugin and the code snippets for some examples on how Bakkesmod SDK is used "},{"id":6,"href":"/functions/using_function_hooks/","title":"Using Function Hooks","parent":"Functions","content":"Function hooks are a powerful part of BakkesMod. After a function is hooked, any time it is called by Rocket League, your code is called as well. Many useful ones are documented in Commonly Hooked Functions. If you want to better understand them or hook a function that\u0026rsquo;s undocumented, hopefully this page will help.\nThere are multiple types of hooks. First are the two simpler ones. gameWrapper is a GameWrapper and will be accessible from any point in your code. 1 2 3 4 5 6 7 8 9 10 gameWrapper-\u0026gt;HookEvent(\u0026#34;Function TAGame.Car_TA.SetVehicleInput\u0026#34;, [this](std::string eventName) { // Your Code here // Call another function or just do your things here }); gameWrapper-\u0026gt;HookEventPost(\u0026#34;Function TAGame.Car_TA.SetVehicleInput\u0026#34;, [this](std::string eventName) { // Your Code here }); HookEvent runs your code as the function is called HookEventPost runs your code as the function is returned from They return a std::string which is the name of the calling function. This is useful to differentiate what your caller is if you have multiple hooks calling the same code.\n1 2 3 4 5 6 7 8 9 gameWrapper-\u0026gt;HookEventWithCaller\u0026lt;CarWrapper\u0026gt;(\u0026#34;Function TAGame.Car_TA.SetVehicleInput\u0026#34;, [this](CarWrapper caller, void* params, std::string eventname) { // Your Code here }); gameWrapper-\u0026gt;HookEventWithCallerPost\u0026lt;CarWrapper\u0026gt;(\u0026#34;Function TAGame.Car_TA.SetVehicleInput\u0026#34;, [this](CarWrapper caller, void* params, std::string eventname) { // Your Code here }); The two WithCaller variants do the same thing, but let you know a bit more about what is using the function\nThey provide a caller value which is obtained from the function\u0026rsquo;s name. After Function TAGame there will be a class name ending in _TA. If the name matches a wrapper name, you can hook it as that wrapper. Car_TA becomes CarWrapper for example. The image below breaks up a function call into parts. The class is GameEvent_TA, which can be cast to a ServerWrapper.\nThe hook also provides a void * pointer. This points at the location of any parameters provided to the function. These aren\u0026rsquo;t well documented, and are hard to guess, so feel free to ask about them if you think you need them. A couple useful functions and parameters can be found in Commonly Hooked Functions\nFor example Function TAGame.Car_TA.OnHitBall has a BallWrapper parameter. To access it, cast the void * pointer to a struct including the parameters\n1 2 3 4 5 6 7 8 9 10 11 12 13 struct CarHitBallParams { // This is a pointer to the ball\u0026#39;s address // but needs to be constructed into a BallWrapper before use uintptr_t ball; }; gameWrapper-\u0026gt;HookEventWithCallerPost\u0026lt;CarWrapper\u0026gt;(\u0026#34;Function TAGame.Car_TA.OnHitBall\u0026#34;, [this](CarWrapper caller, void* params, std::string eventname) { // This cast is only safe if you\u0026#39;re 100% sure the params are correct CarHitBallParams* params = (CarHitBallParams*) params; BallWrapper ballHit = BallWrapper(params-\u0026gt;ball); // Now you know what ball was hit! }); Find functions with the function scanner\n"},{"id":7,"href":"/bakkesmod_api/Classes/Wrappers/Engine/ActorWrapper/","title":"ActorWrapper","parent":"Engine","content":" View Implementation Vector GetLocation() void SetLocation(const Vector location) Parameter Type Description location Vector \u0026mdash; Vector GetVelocity() void SetVelocity(const Vector velocity) Parameter Type Description velocity Vector \u0026mdash; void AddVelocity(const Vector velocity) Parameter Type Description velocity Vector \u0026mdash; Rotator GetRotation() void SetRotation(const Rotator rotation) Parameter Type Description rotation Rotator \u0026mdash; void SetTorque(const Vector torq) Parameter Type Description torq Vector \u0026mdash; void Stop() Vector GetAngularVelocity() void SetAngularVelocity(const Vector v, bool addToCurrent) Parameter Type Description v Vector \u0026mdash; addToCurrent bool \u0026mdash; bool IsNull() const operator bool() const WorldInfoWrapper GetWorldInfo() float GetDrawScale() void SetDrawScale(float newDrawScale) Parameter Type Description newDrawScale float \u0026mdash; Vector GetDrawScale3D() void SetDrawScale3D(Vector newDrawScale3D) Parameter Type Description newDrawScale3D Vector \u0026mdash; Vector GetPrePivot() void SetPrePivot(Vector newPrePivot) Parameter Type Description newPrePivot Vector \u0026mdash; UnrealColor GetEditorIconColor() void SetEditorIconColor(UnrealColor newEditorIconColor) Parameter Type Description newEditorIconColor UnrealColor \u0026mdash; float GetCustomTimeDilation() void SetCustomTimeDilation(float newCustomTimeDilation) Parameter Type Description newCustomTimeDilation float \u0026mdash; unsigned char GetPhysics() void SetPhysics(unsigned char newPhysics) Parameter Type Description newPhysics unsigned char \u0026mdash; unsigned char GetRemoteRole() void SetRemoteRole(unsigned char newRemoteRole) Parameter Type Description newRemoteRole unsigned char \u0026mdash; unsigned char GetRole() void SetRole(unsigned char newRole) Parameter Type Description newRole unsigned char \u0026mdash; unsigned char GetCollisionType() void SetCollisionType(unsigned char newCollisionType) Parameter Type Description newCollisionType unsigned char \u0026mdash; unsigned char GetReplicatedCollisionType() void SetReplicatedCollisionType(unsigned char newReplicatedCollisionType) Parameter Type Description newReplicatedCollisionType unsigned char \u0026mdash; ActorWrapper GetOwner() ActorWrapper GetBase() unsigned long GetbStatic() unsigned long GetbHidden() unsigned long GetbHiddenSelf() void SetbHiddenSelf(unsigned long newbHiddenSelf) Parameter Type Description newbHiddenSelf unsigned long \u0026mdash; unsigned long GetbNoDelete() void SetbNoDelete(unsigned long newbNoDelete) Parameter Type Description newbNoDelete unsigned long \u0026mdash; unsigned long GetbDeleteMe() void SetbDeleteMe(unsigned long newbDeleteMe) Parameter Type Description newbDeleteMe unsigned long \u0026mdash; unsigned long GetbTicked() void SetbTicked(unsigned long newbTicked) Parameter Type Description newbTicked unsigned long \u0026mdash; unsigned long GetbOnlyOwnerSee() void SetbOnlyOwnerSee(unsigned long newbOnlyOwnerSee) Parameter Type Description newbOnlyOwnerSee unsigned long \u0026mdash; unsigned long GetbTickIsDisabled() void SetbTickIsDisabled(unsigned long newbTickIsDisabled) Parameter Type Description newbTickIsDisabled unsigned long \u0026mdash; unsigned long GetbWorldGeometry() void SetbWorldGeometry(unsigned long newbWorldGeometry) Parameter Type Description newbWorldGeometry unsigned long \u0026mdash; unsigned long GetbIgnoreRigidBodyPawns() void SetbIgnoreRigidBodyPawns(unsigned long newbIgnoreRigidBodyPawns) Parameter Type Description newbIgnoreRigidBodyPawns unsigned long \u0026mdash; unsigned long GetbOrientOnSlope() void SetbOrientOnSlope(unsigned long newbOrientOnSlope) Parameter Type Description newbOrientOnSlope unsigned long \u0026mdash; unsigned long GetbIsMoving() unsigned long GetbAlwaysEncroachCheck() void SetbAlwaysEncroachCheck(unsigned long newbAlwaysEncroachCheck) Parameter Type Description newbAlwaysEncroachCheck unsigned long \u0026mdash; unsigned long GetbHasAlternateTargetLocation() unsigned long GetbAlwaysRelevant() unsigned long GetbReplicateInstigator() unsigned long GetbReplicateMovement() unsigned long GetbUpdateSimulatedPosition() void SetbUpdateSimulatedPosition(unsigned long newbUpdateSimulatedPosition) Parameter Type Description newbUpdateSimulatedPosition unsigned long \u0026mdash; unsigned long GetbDemoRecording() void SetbDemoRecording(unsigned long newbDemoRecording) Parameter Type Description newbDemoRecording unsigned long \u0026mdash; unsigned long GetbDemoOwner() void SetbDemoOwner(unsigned long newbDemoOwner) Parameter Type Description newbDemoOwner unsigned long \u0026mdash; unsigned long GetbForceDemoRelevant() void SetbForceDemoRelevant(unsigned long newbForceDemoRelevant) Parameter Type Description newbForceDemoRelevant unsigned long \u0026mdash; unsigned long GetbNetInitialRotation() void SetbNetInitialRotation(unsigned long newbNetInitialRotation) Parameter Type Description newbNetInitialRotation unsigned long \u0026mdash; unsigned long GetbReplicateRigidBodyLocation() void SetbReplicateRigidBodyLocation(unsigned long newbReplicateRigidBodyLocation) Parameter Type Description newbReplicateRigidBodyLocation unsigned long \u0026mdash; unsigned long GetbKillDuringLevelTransition() void SetbKillDuringLevelTransition(unsigned long newbKillDuringLevelTransition) Parameter Type Description newbKillDuringLevelTransition unsigned long \u0026mdash; unsigned long GetbPostRenderIfNotVisible() void SetbPostRenderIfNotVisible(unsigned long newbPostRenderIfNotVisible) Parameter Type Description newbPostRenderIfNotVisible unsigned long \u0026mdash; unsigned long GetbForceNetUpdate() void SetbForceNetUpdate(unsigned long newbForceNetUpdate) Parameter Type Description newbForceNetUpdate unsigned long \u0026mdash; unsigned long GetbForcePacketUpdate() void SetbForcePacketUpdate(unsigned long newbForcePacketUpdate) Parameter Type Description newbForcePacketUpdate unsigned long \u0026mdash; unsigned long GetbPendingNetUpdate() void SetbPendingNetUpdate(unsigned long newbPendingNetUpdate) Parameter Type Description newbPendingNetUpdate unsigned long \u0026mdash; unsigned long GetbGameRelevant() void SetbGameRelevant(unsigned long newbGameRelevant) Parameter Type Description newbGameRelevant unsigned long \u0026mdash; unsigned long GetbMovable() void SetbMovable(unsigned long newbMovable) Parameter Type Description newbMovable unsigned long \u0026mdash; unsigned long GetbCanTeleport() void SetbCanTeleport(unsigned long newbCanTeleport) Parameter Type Description newbCanTeleport unsigned long \u0026mdash; unsigned long GetbAlwaysTick() void SetbAlwaysTick(unsigned long newbAlwaysTick) Parameter Type Description newbAlwaysTick unsigned long \u0026mdash; unsigned long GetbBlocksNavigation() void SetbBlocksNavigation(unsigned long newbBlocksNavigation) Parameter Type Description newbBlocksNavigation unsigned long \u0026mdash; unsigned long GetBlockRigidBody() void SetBlockRigidBody(unsigned long newBlockRigidBody) Parameter Type Description newBlockRigidBody unsigned long \u0026mdash; unsigned long GetbCollideWhenPlacing() void SetbCollideWhenPlacing(unsigned long newbCollideWhenPlacing) Parameter Type Description newbCollideWhenPlacing unsigned long \u0026mdash; unsigned long GetbCollideActors() void SetbCollideActors(unsigned long newbCollideActors) Parameter Type Description newbCollideActors unsigned long \u0026mdash; unsigned long GetbCollideWorld() void SetbCollideWorld(unsigned long newbCollideWorld) Parameter Type Description newbCollideWorld unsigned long \u0026mdash; unsigned long GetbCollideComplex() void SetbCollideComplex(unsigned long newbCollideComplex) Parameter Type Description newbCollideComplex unsigned long \u0026mdash; unsigned long GetbBlockActors() void SetbBlockActors(unsigned long newbBlockActors) Parameter Type Description newbBlockActors unsigned long \u0026mdash; unsigned long GetbBlocksTeleport() void SetbBlocksTeleport(unsigned long newbBlocksTeleport) Parameter Type Description newbBlocksTeleport unsigned long \u0026mdash; unsigned long GetbPhysRigidBodyOutOfWorldCheck() void SetbPhysRigidBodyOutOfWorldCheck(unsigned long newbPhysRigidBodyOutOfWorldCheck) Parameter Type Description newbPhysRigidBodyOutOfWorldCheck unsigned long \u0026mdash; unsigned long GetbComponentOutsideWorld() unsigned long GetbRigidBodyWasAwake() void SetbRigidBodyWasAwake(unsigned long newbRigidBodyWasAwake) Parameter Type Description newbRigidBodyWasAwake unsigned long \u0026mdash; unsigned long GetbCallRigidBodyWakeEvents() void SetbCallRigidBodyWakeEvents(unsigned long newbCallRigidBodyWakeEvents) Parameter Type Description newbCallRigidBodyWakeEvents unsigned long \u0026mdash; unsigned long GetbBounce() void SetbBounce(unsigned long newbBounce) Parameter Type Description newbBounce unsigned long \u0026mdash; unsigned long GetbEditable() void SetbEditable(unsigned long newbEditable) Parameter Type Description newbEditable unsigned long \u0026mdash; unsigned long GetbLockLocation() void SetbLockLocation(unsigned long newbLockLocation) Parameter Type Description newbLockLocation unsigned long \u0026mdash; float GetNetUpdateTime() void SetNetUpdateTime(float newNetUpdateTime) Parameter Type Description newNetUpdateTime float \u0026mdash; float GetNetUpdateFrequency() void SetNetUpdateFrequency(float newNetUpdateFrequency) Parameter Type Description newNetUpdateFrequency float \u0026mdash; float GetNetPriority() void SetNetPriority(float newNetPriority) Parameter Type Description newNetPriority float \u0026mdash; float GetLastNetUpdateTime() float GetLastForcePacketUpdateTime() void SetLastForcePacketUpdateTime(float newLastForcePacketUpdateTime) Parameter Type Description newLastForcePacketUpdateTime float \u0026mdash; float GetTimeSinceLastTick() float GetLifeSpan() float GetCreationTime() float GetLastRenderTime() unsigned long long GetHiddenEditorViews() void SetHiddenEditorViews(unsigned long long newHiddenEditorViews) Parameter Type Description newHiddenEditorViews unsigned long long \u0026mdash; ArrayWrapper GetAttached() Vector GetRelativeLocation() void SetRelativeLocation(Vector newRelativeLocation) Parameter Type Description newRelativeLocation Vector \u0026mdash; Rotator GetRelativeRotation() void SetRelativeRotation(Rotator newRelativeRotation) Parameter Type Description newRelativeRotation Rotator \u0026mdash; PrimitiveComponentWrapper GetCollisionComponent() void ForceNetUpdatePacket() void ForceNetUpdate2() bool WillOverlap(Vector \u0026amp;PosA, Vector \u0026amp;VelA, Vector \u0026amp;PosB, Vector \u0026amp;VelB, float StepSize, float Radius, float *Time) Parameter Type Description PosA Vector \u0026mdash; VelA Vector \u0026mdash; PosB Vector \u0026mdash; VelB Vector \u0026mdash; StepSize float \u0026mdash; Radius float \u0026mdash; Time float * \u0026mdash; void eventReplicationEnded() void eventPostDemoRewind() bool IsInPersistentLevel(unsigned long bIncludeLevelStreamingPersistent) Parameter Type Description bIncludeLevelStreamingPersistent unsigned long \u0026mdash; void SetHUDLocation(Vector \u0026amp;NewHUDLocation) Parameter Type Description NewHUDLocation Vector \u0026mdash; void eventSpawnedByKismet() Vector GetTargetLocation(ActorWrapper RequestedBy, unsigned long bRequestAlternateLoc) Parameter Type Description RequestedBy ActorWrapper \u0026mdash; bRequestAlternateLoc unsigned long \u0026mdash; unsigned char eventScriptGetTeamNum() unsigned char GetTeamNum2() bool IsPlayerOwned() bool IsStationary() void eventDebugMessagePlayer(std::string msg) Parameter Type Description msg std::string \u0026mdash; Vector GetGravityAcceleration() Vector GetGravityDirection() float GetGravityZ() bool IsOverlapping(ActorWrapper A) Parameter Type Description A ActorWrapper \u0026mdash; bool ContainsPoint(Vector \u0026amp;Spot) Parameter Type Description Spot Vector \u0026mdash; void eventFellOutOfWorld() void SetTickIsDisabled(unsigned long bInDisabled) Parameter Type Description bInDisabled unsigned long \u0026mdash; void SetPhysics2(unsigned char newPhysics) Parameter Type Description newPhysics unsigned char \u0026mdash; void SetHidden2(unsigned long bNewHidden) Parameter Type Description bNewHidden unsigned long \u0026mdash; void ChartData(std::string DataName, float DataValue) Parameter Type Description DataName std::string \u0026mdash; DataValue float \u0026mdash; void DrawDebugString(Vector \u0026amp;TextLocation, std::string Text, ActorWrapper TestBaseActor, UnrealColor \u0026amp;TextColor, float Duration) Parameter Type Description TextLocation Vector \u0026mdash; Text std::string \u0026mdash; TestBaseActor ActorWrapper \u0026mdash; TextColor UnrealColor \u0026mdash; Duration float \u0026mdash; void DrawDebugCone(Vector \u0026amp;Origin, Vector \u0026amp;Direction, float Length, float AngleWidth, float AngleHeight, int NumSides, UnrealColor \u0026amp;DrawColor, unsigned long bPersistentLines) Parameter Type Description Origin Vector \u0026mdash; Direction Vector \u0026mdash; Length float \u0026mdash; AngleWidth float \u0026mdash; AngleHeight float \u0026mdash; NumSides int \u0026mdash; DrawColor UnrealColor \u0026mdash; bPersistentLines unsigned long \u0026mdash; Vector GetAggregateBaseVelocity(ActorWrapper TestBase) Parameter Type Description TestBase ActorWrapper \u0026mdash; bool IsOwnedBy(ActorWrapper TestActor) Parameter Type Description TestActor ActorWrapper \u0026mdash; bool IsBasedOn(ActorWrapper TestActor) Parameter Type Description TestActor ActorWrapper \u0026mdash; float GetTerminalVelocity() "},{"id":8,"href":"/bakkesmod_api/Classes/Wrappers/AIControllerWrapper/","title":"AIControllerWrapper","parent":"Wrappers","content":" View Implementation void DoNothing() "},{"id":9,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/CarComponent/AirControlComponentWrapper/","title":"AirControlComponentWrapper","parent":"Car Component","content":" View Implementation Rotator GetAirTorque() void SetAirTorque(Rotator newAirTorque) Parameter Type Description newAirTorque Rotator \u0026mdash; Rotator GetAirDamping() void SetAirDamping(Rotator newAirDamping) Parameter Type Description newAirDamping Rotator \u0026mdash; float GetThrottleForce() void SetThrottleForce(float newThrottleForce) Parameter Type Description newThrottleForce float \u0026mdash; float GetDodgeDisableTimeRemaining() void SetDodgeDisableTimeRemaining(float newDodgeDisableTimeRemaining) Parameter Type Description newDodgeDisableTimeRemaining float \u0026mdash; float GetControlScale() void SetControlScale(float newControlScale) Parameter Type Description newControlScale float \u0026mdash; float GetAirControlSensitivity() void SetAirControlSensitivity(float newAirControlSensitivity) Parameter Type Description newAirControlSensitivity float \u0026mdash; void ApplyForces(float ActiveTime) Parameter Type Description ActiveTime float \u0026mdash; void OnCreated() "},{"id":10,"href":"/bakkesmod_api/Structs/Wrappers/GameObject/AppliedBreakoutDamage/","title":"AppliedBreakoutDamage","parent":"Game Object","content":" View Implementation unsigned char Id Default value: none\nVector Location Default value: none\nint DamageIndex Default value: none\nint TotalDamage Default value: none\n"},{"id":11,"href":"/bakkesmod_api/Structs/Utilities/ApplyDecalToCarResult/","title":"ApplyDecalToCarResult","parent":"Utilities","content":" View Implementation bool body_applied Default value = false\nbool chassis_applied Default value = false\n"},{"id":12,"href":"/bakkesmod_api/Classes/Wrappers/ArrayWrapper/","title":"ArrayWrapper","parent":"Wrappers","content":" View Implementation ArrayWrapper(const ArrayWrapper\u0026lt; T \u0026gt; \u0026amp;other) Parameter Type Description other ArrayWrapper \u0026mdash; ArrayWrapper operator=(ArrayWrapper\u0026lt; T \u0026gt; rhs) Parameter Type Description rhs ArrayWrapper \u0026mdash; ~ArrayWrapper() int Count() T Get(int index) Parameter Type Description index int \u0026mdash; bool IsNull() "},{"id":13,"href":"/bakkesmod_api/Classes/Wrappers/ArrayWrapperIterator/","title":"ArrayWrapperIterator","parent":"Wrappers","content":" View Implementation size_t index ArrayWrapper collection ArrayWrapperIterator(ArrayWrapper\u0026lt; T \u0026gt; \u0026amp;collection, size_t const index) Parameter Type Description collection ArrayWrapper \u0026mdash; index size_t const \u0026mdash; bool operator!=(ArrayWrapperIterator const \u0026amp;other) const Parameter Type Description other ArrayWrapperIterator \u0026mdash; T operator*() const ArrayWrapperIterator operator++() "},{"id":14,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/AttachmentPickup/","title":"AttachmentPickup","parent":"Rumble Component","content":" View Implementation void PickupEnd() void PickupStart() "},{"id":15,"href":"/bakkesmod_api/Constants/BAKKESMOD_PLUGIN_API_VERSION/","title":"BAKKESMOD_PLUGIN_API_VERSION","parent":"Constants","content":" View Implementation Current plugin API Version\nBAKKESMOD_PLUGIN_API_VERSION = 95\n"},{"id":16,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/BallBreakoutWrapper/","title":"BallBreakoutWrapper","parent":"Game Object","content":" View Implementation AppliedBreakoutDamage GetAppliedBreakoutDamage() const unsigned int GetbClearTeamOnDamage() void SetbClearTeamOnDamage(unsigned int bClearTeamOnDamage) Parameter Type Description bClearTeamOnDamage unsigned int \u0026mdash; unsigned int GetbCanDamageOwnTeam() void SetbCanDamageOwnTeam(unsigned int bCanDamageOwnTeam) Parameter Type Description bCanDamageOwnTeam unsigned int \u0026mdash; float GetMinDamageVelocity() void SetMinDamageVelocity(float MinDamageVelocity) Parameter Type Description MinDamageVelocity float \u0026mdash; float GetMinDamageTime() void SetMinDamageTime(float MinDamageTime) Parameter Type Description MinDamageTime float \u0026mdash; unsigned int GetMinImpactSpeedForCharge() void SetMinImpactSpeedForCharge(unsigned int MinImpactSpeedForCharge) Parameter Type Description MinImpactSpeedForCharge unsigned int \u0026mdash; float GetDoubleTapTime() void SetDoubleTapTime(float DoubleTapTime) Parameter Type Description DoubleTapTime float \u0026mdash; float GetForceAccumDecayPerSecond() void SetForceAccumDecayPerSecond(float ForceAccumDecayPerSecond) Parameter Type Description ForceAccumDecayPerSecond float \u0026mdash; float GetForceAccumMax() void SetForceAccumMax(float ForceAccumMax) Parameter Type Description ForceAccumMax float \u0026mdash; float GetForceAccumRecent() void SetForceAccumRecent(float ForceAccumRecent) Parameter Type Description ForceAccumRecent float \u0026mdash; unsigned char GetLastTeamTouch() void SetLastTeamTouch(unsigned char LastTeamTouch) Parameter Type Description LastTeamTouch unsigned char \u0026mdash; CarWrapper GetLastCarTouch() void SetLastCarTouch(CarWrapper LastCarTouch) Parameter Type Description LastCarTouch CarWrapper \u0026mdash; unsigned int GetLastDamage() void SetLastDamage(unsigned int LastDamage) Parameter Type Description LastDamage unsigned int \u0026mdash; float GetLastDamageTime() void SetLastDamageTime(float LastDamageTime) Parameter Type Description LastDamageTime float \u0026mdash; unsigned int GetDamageIndex() void SetDamageIndex(unsigned int DamageIndex) Parameter Type Description DamageIndex unsigned int \u0026mdash; float GetAbsorbedForce() void SetAbsorbedForce(float AbsorbedForce) Parameter Type Description AbsorbedForce float \u0026mdash; float GetDamagePercent() bool WillDamage() unsigned int GetDamageIndexForForce(float Force) Parameter Type Description Force float \u0026mdash; unsigned int GetDamageIndexForTime(float Time) Parameter Type Description Time float \u0026mdash; void SetLastTeamTouch2(unsigned char InLastTeamTouch) Parameter Type Description InLastTeamTouch unsigned char \u0026mdash; void ForceDamageIndex(unsigned int InIndex) Parameter Type Description InIndex unsigned int \u0026mdash; void SetDamageIndex2(unsigned int InIndex) Parameter Type Description InIndex unsigned int \u0026mdash; void OnCarTouch(CarWrapper HitCar, unsigned char HitType) Parameter Type Description HitCar CarWrapper \u0026mdash; HitType unsigned char \u0026mdash; "},{"id":17,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/BallCarSpringPickup/","title":"BallCarSpringPickup","parent":"Rumble Component","content":" View Implementation void ScaleSpringMeshToLocation(Vector \u0026amp;NewLocation, Vector \u0026amp;TargetLocation) Parameter Type Description NewLocation Vector \u0026mdash; TargetLocation Vector \u0026mdash; "},{"id":18,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/BallFreezePickup/","title":"BallFreezePickup","parent":"Rumble Component","content":" View Implementation FXActorWrapper GetFreezeBreakFXArchetype() void SetFreezeBreakFXArchetype(FXActorWrapper newFreezeBreakFXArchetype) Parameter Type Description newFreezeBreakFXArchetype FXActorWrapper \u0026mdash; FXActorWrapper GetFreezeFXArchetype() void SetFreezeFXArchetype(FXActorWrapper newFreezeFXArchetype) Parameter Type Description newFreezeFXArchetype FXActorWrapper \u0026mdash; unsigned long GetbMaintainMomentum() void SetbMaintainMomentum(unsigned long newbMaintainMomentum) Parameter Type Description newbMaintainMomentum unsigned long \u0026mdash; unsigned long GetbTouched() void SetbTouched(unsigned long newbTouched) Parameter Type Description newbTouched unsigned long \u0026mdash; float GetTimeToStop() void SetTimeToStop(float newTimeToStop) Parameter Type Description newTimeToStop float \u0026mdash; float GetStopMomentumPercentage() void SetStopMomentumPercentage(float newStopMomentumPercentage) Parameter Type Description newStopMomentumPercentage float \u0026mdash; BallWrapper GetBall() void SetBall(BallWrapper newBall) Parameter Type Description newBall BallWrapper \u0026mdash; Vector GetOrigLinearVelocity() void SetOrigLinearVelocity(Vector newOrigLinearVelocity) Parameter Type Description newOrigLinearVelocity Vector \u0026mdash; Vector GetOrigAngularVelocity() void SetOrigAngularVelocity(Vector newOrigAngularVelocity) Parameter Type Description newOrigAngularVelocity Vector \u0026mdash; float GetOrigSpeed() void SetOrigSpeed(float newOrigSpeed) Parameter Type Description newOrigSpeed float \u0026mdash; float GetRepOrigSpeed() void SetRepOrigSpeed(float newRepOrigSpeed) Parameter Type Description newRepOrigSpeed float \u0026mdash; FXActorWrapper GetFreezeFX() void SetFreezeFX(FXActorWrapper newFreezeFX) Parameter Type Description newFreezeFX FXActorWrapper \u0026mdash; void PickupEnd() void HandleBallExploded(BallWrapper InBall) Parameter Type Description InBall BallWrapper \u0026mdash; void HandleBallHit(BallWrapper InBall, CarWrapper InCar, unsigned char HitType) Parameter Type Description InBall BallWrapper \u0026mdash; InCar CarWrapper \u0026mdash; HitType unsigned char \u0026mdash; void ApplyForces(float ActiveTime) Parameter Type Description ActiveTime float \u0026mdash; void OnTargetChanged() void PickupStart() "},{"id":19,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/BallGodWrapper/","title":"BallGodWrapper","parent":"Game Object","content":" View Implementation float GetWallBounceSpeed() void SetWallBounceSpeed(float WallBounceSpeed) Parameter Type Description WallBounceSpeed float \u0026mdash; float GetWallBounceBlend() void SetWallBounceBlend(float WallBounceBlend) Parameter Type Description WallBounceBlend float \u0026mdash; float GetWallBounceBackDistance() void SetWallBounceBackDistance(float WallBounceBackDistance) Parameter Type Description WallBounceBackDistance float \u0026mdash; float GetTargetBlendScaleXY() void SetTargetBlendScaleXY(float TargetBlendScaleXY) Parameter Type Description TargetBlendScaleXY float \u0026mdash; float GetTargetBlendScaleZ() void SetTargetBlendScaleZ(float TargetBlendScaleZ) Parameter Type Description TargetBlendScaleZ float \u0026mdash; float GetTargetSpeed() void SetTargetSpeed(float TargetSpeed) Parameter Type Description TargetSpeed float \u0026mdash; float GetTargetSpeedIncrement() void SetTargetSpeedIncrement(float TargetSpeedIncrement) Parameter Type Description TargetSpeedIncrement float \u0026mdash; float GetTargetSpeedBlend() void SetTargetSpeedBlend(float TargetSpeedBlend) Parameter Type Description TargetSpeedBlend float \u0026mdash; float GetMaxVelocityPitch() void SetMaxVelocityPitch(float MaxVelocityPitch) Parameter Type Description MaxVelocityPitch float \u0026mdash; float GetLastSpeedIncrementTime() void SetLastSpeedIncrementTime(float LastSpeedIncrementTime) Parameter Type Description LastSpeedIncrementTime float \u0026mdash; float GetTargetSpeedIncrementTime() void SetTargetSpeedIncrementTime(float TargetSpeedIncrementTime) Parameter Type Description TargetSpeedIncrementTime float \u0026mdash; float GetMinGlowBrightness() void SetMinGlowBrightness(float MinGlowBrightness) Parameter Type Description MinGlowBrightness float \u0026mdash; float GetMaxGlowBrightness() void SetMaxGlowBrightness(float MaxGlowBrightness) Parameter Type Description MaxGlowBrightness float \u0026mdash; float GetPulseSpeedScale() void SetPulseSpeedScale(float PulseSpeedScale) Parameter Type Description PulseSpeedScale float \u0026mdash; float GetPulseBrightnessScale() void SetPulseBrightnessScale(float PulseBrightnessScale) Parameter Type Description PulseBrightnessScale float \u0026mdash; float GetPulseMinBrightness() void SetPulseMinBrightness(float PulseMinBrightness) Parameter Type Description PulseMinBrightness float \u0026mdash; float GetPulseLifetime() void SetPulseLifetime(float PulseLifetime) Parameter Type Description PulseLifetime float \u0026mdash; LinearColor GetGlowDefaultColor() void SetGlowDefaultColor(LinearColor GlowDefaultColor) Parameter Type Description GlowDefaultColor LinearColor \u0026mdash; LinearColor GetMaxSpeedColor() void SetMaxSpeedColor(LinearColor MaxSpeedColor) Parameter Type Description MaxSpeedColor LinearColor \u0026mdash; Vector GetDirectionToTarget() Vector GetAimLocation() LinearColor GetMaxSpeedColor2() bool AtMaxSpeed() float GetGlowBrightness() float GetTargetSpeedAlpha() void UpdatePulse() void OnTargetSpeedChanged() void TryIncrementTargetSpeed() void UpdateColor() void OnHitTeamNumChanged() void SetCarHitTeamNum(unsigned char TeamNum) Parameter Type Description TeamNum unsigned char \u0026mdash; "},{"id":20,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/BallHauntedWrapper/","title":"BallHauntedWrapper","parent":"Game Object","content":" View Implementation float GetTrappedHoverHeight() void SetTrappedHoverHeight(float TrappedHoverHeight) Parameter Type Description TrappedHoverHeight float \u0026mdash; float GetHorizontalSpeed() void SetHorizontalSpeed(float HorizontalSpeed) Parameter Type Description HorizontalSpeed float \u0026mdash; float GetVerticalSpeed() void SetVerticalSpeed(float VerticalSpeed) Parameter Type Description VerticalSpeed float \u0026mdash; float GetArrivalDistance() void SetArrivalDistance(float ArrivalDistance) Parameter Type Description ArrivalDistance float \u0026mdash; float GetTrappedHorizontalSpeed() void SetTrappedHorizontalSpeed(float TrappedHorizontalSpeed) Parameter Type Description TrappedHorizontalSpeed float \u0026mdash; float GetTrappedVerticalSpeed() void SetTrappedVerticalSpeed(float TrappedVerticalSpeed) Parameter Type Description TrappedVerticalSpeed float \u0026mdash; float GetTrappedCaptureTime() void SetTrappedCaptureTime(float TrappedCaptureTime) Parameter Type Description TrappedCaptureTime float \u0026mdash; float GetHitPhysicsDuration() void SetHitPhysicsDuration(float HitPhysicsDuration) Parameter Type Description HitPhysicsDuration float \u0026mdash; unsigned char GetReplicatedBeamBrokenValue() void SetReplicatedBeamBrokenValue(unsigned char ReplicatedBeamBrokenValue) Parameter Type Description ReplicatedBeamBrokenValue unsigned char \u0026mdash; unsigned char GetLastTeamTouch() void SetLastTeamTouch(unsigned char LastTeamTouch) Parameter Type Description LastTeamTouch unsigned char \u0026mdash; unsigned char GetDeactivatedGoalIndex() void SetDeactivatedGoalIndex(unsigned char DeactivatedGoalIndex) Parameter Type Description DeactivatedGoalIndex unsigned char \u0026mdash; unsigned char GetTotalActiveBeams() void SetTotalActiveBeams(unsigned char TotalActiveBeams) Parameter Type Description TotalActiveBeams unsigned char \u0026mdash; Vector GetSeekTarget() void SetSeekTarget(Vector SeekTarget) Parameter Type Description SeekTarget Vector \u0026mdash; float GetNextNeutralTime() void SetNextNeutralTime(float NextNeutralTime) Parameter Type Description NextNeutralTime float \u0026mdash; unsigned int GetbHitPhysicsActive() void SetbHitPhysicsActive(unsigned int bHitPhysicsActive) Parameter Type Description bHitPhysicsActive unsigned int \u0026mdash; unsigned int GetbIsBallBeamed() void SetbIsBallBeamed(unsigned int bIsBallBeamed) Parameter Type Description bIsBallBeamed unsigned int \u0026mdash; unsigned int GetbIsTrapped() void SetbIsTrapped(unsigned int bIsTrapped) Parameter Type Description bIsTrapped unsigned int \u0026mdash; float GetCurrentCaptureTime() void SetCurrentCaptureTime(float CurrentCaptureTime) Parameter Type Description CurrentCaptureTime float \u0026mdash; float GetCaptureTimePercentage() void SetCaptureTimePercentage(float CaptureTimePercentage) Parameter Type Description CaptureTimePercentage float \u0026mdash; float GetCaptureTimeAtExit() void SetCaptureTimeAtExit(float CaptureTimeAtExit) Parameter Type Description CaptureTimeAtExit float \u0026mdash; GoalWrapper GetActiveGoal() void SetActiveGoal(GoalWrapper ActiveGoal) Parameter Type Description ActiveGoal GoalWrapper \u0026mdash; Vector GetBallDestination() float GetVerticalVelocity(Vector \u0026amp;Destination) Parameter Type Description Destination Vector \u0026mdash; Vector GetDesiredVelocity() void AddHauntedForces() void ScoreTrapGoal() void SetLastTeamTouch2(unsigned char InLastTeamTouch) Parameter Type Description InLastTeamTouch unsigned char \u0026mdash; void SetBallIsTrapped(unsigned int bValue, GoalWrapper Goal) Parameter Type Description bValue unsigned int \u0026mdash; Goal GoalWrapper \u0026mdash; void SetBallHitData(CarWrapper HitCar, Vector \u0026amp;HitLocation, Vector \u0026amp;HitNormal, unsigned char HitType) Parameter Type Description HitCar CarWrapper \u0026mdash; HitLocation Vector \u0026mdash; HitNormal Vector \u0026mdash; HitType unsigned char \u0026mdash; void TryBreakBeam(CarWrapper HitCar) Parameter Type Description HitCar CarWrapper \u0026mdash; void OnCarTouch(CarWrapper HitCar, unsigned char HitType) Parameter Type Description HitCar CarWrapper \u0026mdash; HitType unsigned char \u0026mdash; void ActivateHitPhysics() void SetBallPhased(unsigned int bValue, unsigned int TeamIndex) Parameter Type Description bValue unsigned int \u0026mdash; TeamIndex unsigned int \u0026mdash; void SetBallTarget() "},{"id":21,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/BallLassoPickup/","title":"BallLassoPickup","parent":"Rumble Component","content":" View Implementation void ScaleSpringMeshToLocation(Vector \u0026amp;NewLocation, Vector \u0026amp;TargetLocation) Parameter Type Description NewLocation Vector \u0026mdash; TargetLocation Vector \u0026mdash; void DoSpring(unsigned long bFirstHit) Parameter Type Description bFirstHit unsigned long \u0026mdash; "},{"id":22,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/BallWrapper/","title":"BallWrapper","parent":"Game Object","content":" View Implementation Any ball in the match. There can be more than one!\nThe best way to get the ball is ServerWrapper.GetGameBalls()\nfloat GetLastTouchTime() PredictionInfo PredictPosition(float timeAhead) Parameter Type Description timeAhead float \u0026mdash; _NODISCARD bool IsDropshotBall() const _NODISCARD bool IsHauntedtBall() const _NODISCARD bool IsGodBall() const void FadeOutBall() void FadeInBall() FXActorWrapper GetEndOfGameFXArchetype() void SetEndOfGameFXArchetype(FXActorWrapper newEndOfGameFXArchetype) Parameter Type Description newEndOfGameFXArchetype FXActorWrapper \u0026mdash; unsigned long GetbAllowPlayerExplosionOverride() void SetbAllowPlayerExplosionOverride(unsigned long newbAllowPlayerExplosionOverride) Parameter Type Description newbAllowPlayerExplosionOverride unsigned long \u0026mdash; unsigned long GetbNotifyGroundHit() void SetbNotifyGroundHit(unsigned long newbNotifyGroundHit) Parameter Type Description newbNotifyGroundHit unsigned long \u0026mdash; unsigned long GetbEndOfGameHidden() void SetbEndOfGameHidden(unsigned long newbEndOfGameHidden) Parameter Type Description newbEndOfGameHidden unsigned long \u0026mdash; unsigned long GetbFadeIn() void SetbFadeIn(unsigned long newbFadeIn) Parameter Type Description newbFadeIn unsigned long \u0026mdash; unsigned long GetbFadeOut() void SetbFadeOut(unsigned long newbFadeOut) Parameter Type Description newbFadeOut unsigned long \u0026mdash; unsigned long GetbPredictionOnGround() void SetbPredictionOnGround(unsigned long newbPredictionOnGround) Parameter Type Description newbPredictionOnGround unsigned long \u0026mdash; unsigned long GetbCanBeAttached() void SetbCanBeAttached(unsigned long newbCanBeAttached) Parameter Type Description newbCanBeAttached unsigned long \u0026mdash; unsigned long GetbItemFreeze() void SetbItemFreeze(unsigned long newbItemFreeze) Parameter Type Description newbItemFreeze unsigned long \u0026mdash; Vector GetMagnusCoefficient() void SetMagnusCoefficient(Vector newMagnusCoefficient) Parameter Type Description newMagnusCoefficient Vector \u0026mdash; float GetRadius() void SetRadius(float newRadius) Parameter Type Description newRadius float \u0026mdash; float GetVisualRadius() void SetVisualRadius(float newVisualRadius) Parameter Type Description newVisualRadius float \u0026mdash; float GetLastCalculateCarHit() Vector GetInitialLocation() void SetInitialLocation(Vector newInitialLocation) Parameter Type Description newInitialLocation Vector \u0026mdash; void SetInitialRotation(Rotator newInitialRotation) Parameter Type Description newInitialRotation Rotator \u0026mdash; float GetLastHitWorldTime() float GetReplicatedBallScale() void SetReplicatedBallScale(float newReplicatedBallScale) Parameter Type Description newReplicatedBallScale float \u0026mdash; float GetReplicatedWorldBounceScale() void SetReplicatedWorldBounceScale(float newReplicatedWorldBounceScale) Parameter Type Description newReplicatedWorldBounceScale float \u0026mdash; float GetReplicatedBallGravityScale() void SetReplicatedBallGravityScale(float newReplicatedBallGravityScale) Parameter Type Description newReplicatedBallGravityScale float \u0026mdash; float GetReplicatedBallMaxLinearSpeedScale() void SetReplicatedBallMaxLinearSpeedScale(float newReplicatedBallMaxLinearSpeedScale) Parameter Type Description newReplicatedBallMaxLinearSpeedScale float \u0026mdash; float GetReplicatedAddedCarBounceScale() void SetReplicatedAddedCarBounceScale(float newReplicatedAddedCarBounceScale) Parameter Type Description newReplicatedAddedCarBounceScale float \u0026mdash; float GetAdditionalCarGroundBounceScaleZ() void SetAdditionalCarGroundBounceScaleZ(float newAdditionalCarGroundBounceScaleZ) Parameter Type Description newAdditionalCarGroundBounceScaleZ float \u0026mdash; float GetAdditionalCarGroundBounceScaleXY() void SetAdditionalCarGroundBounceScaleXY(float newAdditionalCarGroundBounceScaleXY) Parameter Type Description newAdditionalCarGroundBounceScaleXY float \u0026mdash; unsigned char GetHitTeamNum() void SetHitTeamNum(unsigned char newHitTeamNum) Parameter Type Description newHitTeamNum unsigned char \u0026mdash; ServerWrapper GetGameEvent() float GetExplosionTime() void SetExplosionTime(float newExplosionTime) Parameter Type Description newExplosionTime float \u0026mdash; Vector GetOldLocation() void SetOldLocation(Vector newOldLocation) Parameter Type Description newOldLocation Vector \u0026mdash; float GetPredictionTimestep() void SetPredictionTimestep(float newPredictionTimestep) Parameter Type Description newPredictionTimestep float \u0026mdash; float GetLastPredictionTime() void SetLastPredictionTime(float newLastPredictionTime) Parameter Type Description newLastPredictionTime float \u0026mdash; float GetGroundForce() void SetGroundForce(float newGroundForce) Parameter Type Description newGroundForce float \u0026mdash; CarWrapper GetCurrentAffector() void SetCurrentAffector(CarWrapper newCurrentAffector) Parameter Type Description newCurrentAffector CarWrapper \u0026mdash; Vector GetTrajectoryStartVelocity() Rotator GetTrajectoryStartRotation() Vector GetTrajectoryStartLocation() bool ShouldDrawTrajectory() float GetAdditionalCarBounceScaleZ(CarWrapper Car) Parameter Type Description Car CarWrapper \u0026mdash; void SetEndOfGameHidden() void Explode(GoalWrapper ExplosionGoal, Vector \u0026amp;ExplodeLocation, PriWrapper Scorer) Parameter Type Description ExplosionGoal GoalWrapper \u0026mdash; ExplodeLocation Vector \u0026mdash; Scorer PriWrapper \u0026mdash; void DoDestroy() void DoExplode() void Launch(Vector \u0026amp;LaunchPosition, Vector \u0026amp;LaunchDirection) Parameter Type Description LaunchPosition Vector \u0026mdash; LaunchDirection Vector \u0026mdash; void OnCarTouch(CarWrapper HitCar, unsigned char HitType) Parameter Type Description HitCar CarWrapper \u0026mdash; HitType unsigned char \u0026mdash; void RecordCarHit(CarWrapper HitCar, Vector \u0026amp;HitLocation, Vector \u0026amp;HitNormal, unsigned char HitType) Parameter Type Description HitCar CarWrapper \u0026mdash; HitLocation Vector \u0026mdash; HitNormal Vector \u0026mdash; HitType unsigned char \u0026mdash; bool IsGroundHit(Vector \u0026amp;HitNormal) Parameter Type Description HitNormal Vector \u0026mdash; void FellOutOfWorld() bool IsRoundActive() void eventOnHitGoal(GoalWrapper Goal, Vector \u0026amp;HitLoc) Parameter Type Description Goal GoalWrapper \u0026mdash; HitLoc Vector \u0026mdash; void TurnOff() void InitAk() void SetWorldBounceScale(float NewScale) Parameter Type Description NewScale float \u0026mdash; void SetCarBounceScale(float NewScale) Parameter Type Description NewScale float \u0026mdash; void SetBallMaxLinearSpeedScale(float InMaxLinearSpeedScale) Parameter Type Description InMaxLinearSpeedScale float \u0026mdash; void SetBallGravityScale(float InBallGravityScale) Parameter Type Description InBallGravityScale float \u0026mdash; void SetBallScale(float NewScale) Parameter Type Description NewScale float \u0026mdash; void EventHitGoal(BallWrapper Ball, GoalWrapper Goal) Parameter Type Description Ball BallWrapper \u0026mdash; Goal GoalWrapper \u0026mdash; "},{"id":23,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/BaseCameraWrapper/","title":"BaseCameraWrapper","parent":"Game Object","content":" View Implementation float GetDefaultFOV() void SetDefaultFOV(float newDefaultFOV) Parameter Type Description newDefaultFOV float \u0026mdash; unsigned long GetbLockedFOV() void SetbLockedFOV(unsigned long newbLockedFOV) Parameter Type Description newbLockedFOV unsigned long \u0026mdash; unsigned long GetbConstrainAspectRatio() void SetbConstrainAspectRatio(unsigned long newbConstrainAspectRatio) Parameter Type Description newbConstrainAspectRatio unsigned long \u0026mdash; unsigned long GetbEnableFading() void SetbEnableFading(unsigned long newbEnableFading) Parameter Type Description newbEnableFading unsigned long \u0026mdash; unsigned long GetbFadeAudio() void SetbFadeAudio(unsigned long newbFadeAudio) Parameter Type Description newbFadeAudio unsigned long \u0026mdash; unsigned long GetbForceDisableTemporalAA() void SetbForceDisableTemporalAA(unsigned long newbForceDisableTemporalAA) Parameter Type Description newbForceDisableTemporalAA unsigned long \u0026mdash; unsigned long GetbEnableColorScaling() void SetbEnableColorScaling(unsigned long newbEnableColorScaling) Parameter Type Description newbEnableColorScaling unsigned long \u0026mdash; unsigned long GetbEnableColorScaleInterp() void SetbEnableColorScaleInterp(unsigned long newbEnableColorScaleInterp) Parameter Type Description newbEnableColorScaleInterp unsigned long \u0026mdash; unsigned long GetbUseClientSideCameraUpdates() void SetbUseClientSideCameraUpdates(unsigned long newbUseClientSideCameraUpdates) Parameter Type Description newbUseClientSideCameraUpdates unsigned long \u0026mdash; unsigned long GetbDebugClientSideCamera() void SetbDebugClientSideCamera(unsigned long newbDebugClientSideCamera) Parameter Type Description newbDebugClientSideCamera unsigned long \u0026mdash; unsigned long GetbShouldSendClientSideCameraUpdate() void SetbShouldSendClientSideCameraUpdate(unsigned long newbShouldSendClientSideCameraUpdate) Parameter Type Description newbShouldSendClientSideCameraUpdate unsigned long \u0026mdash; float GetLockedFOV() void SetLockedFOV(float newLockedFOV) Parameter Type Description newLockedFOV float \u0026mdash; float GetConstrainedAspectRatio() void SetConstrainedAspectRatio(float newConstrainedAspectRatio) Parameter Type Description newConstrainedAspectRatio float \u0026mdash; float GetDefaultAspectRatio() void SetDefaultAspectRatio(float newDefaultAspectRatio) Parameter Type Description newDefaultAspectRatio float \u0026mdash; float GetOffAxisYawAngle() void SetOffAxisYawAngle(float newOffAxisYawAngle) Parameter Type Description newOffAxisYawAngle float \u0026mdash; float GetOffAxisPitchAngle() void SetOffAxisPitchAngle(float newOffAxisPitchAngle) Parameter Type Description newOffAxisPitchAngle float \u0026mdash; UnrealColor GetFadeColor() void SetFadeColor(UnrealColor newFadeColor) Parameter Type Description newFadeColor UnrealColor \u0026mdash; float GetFadeAmount() void SetFadeAmount(float newFadeAmount) Parameter Type Description newFadeAmount float \u0026mdash; float GetCamOverridePostProcessAlpha() void SetCamOverridePostProcessAlpha(float newCamOverridePostProcessAlpha) Parameter Type Description newCamOverridePostProcessAlpha float \u0026mdash; Vector GetColorScale() void SetColorScale(Vector newColorScale) Parameter Type Description newColorScale Vector \u0026mdash; Vector GetDesiredColorScale() void SetDesiredColorScale(Vector newDesiredColorScale) Parameter Type Description newDesiredColorScale Vector \u0026mdash; Vector GetOriginalColorScale() void SetOriginalColorScale(Vector newOriginalColorScale) Parameter Type Description newOriginalColorScale Vector \u0026mdash; float GetColorScaleInterpDuration() void SetColorScaleInterpDuration(float newColorScaleInterpDuration) Parameter Type Description newColorScaleInterpDuration float \u0026mdash; float GetColorScaleInterpStartTime() void SetColorScaleInterpStartTime(float newColorScaleInterpStartTime) Parameter Type Description newColorScaleInterpStartTime float \u0026mdash; ViewTarget GetViewTarget() void SetViewTarget(ViewTarget newViewTarget) Parameter Type Description newViewTarget ViewTarget \u0026mdash; ViewTarget GetPendingViewTarget() void SetPendingViewTarget(ViewTarget newPendingViewTarget) Parameter Type Description newPendingViewTarget ViewTarget \u0026mdash; float GetBlendTimeToGo() void SetBlendTimeToGo(float newBlendTimeToGo) Parameter Type Description newBlendTimeToGo float \u0026mdash; float GetFreeCamDistance() void SetFreeCamDistance(float newFreeCamDistance) Parameter Type Description newFreeCamDistance float \u0026mdash; Vector GetFreeCamOffset() void SetFreeCamOffset(Vector newFreeCamOffset) Parameter Type Description newFreeCamOffset Vector \u0026mdash; float GetFadeTime() void SetFadeTime(float newFadeTime) Parameter Type Description newFadeTime float \u0026mdash; float GetFadeTimeRemaining() void SetFadeTimeRemaining(float newFadeTimeRemaining) Parameter Type Description newFadeTimeRemaining float \u0026mdash; void StopAllCameraAnims(unsigned long bImmediate) Parameter Type Description bImmediate unsigned long \u0026mdash; void ClearAllCameraShakes() float CalcRadialShakeScale(BaseCameraWrapper Cam, Vector \u0026amp;Epicenter, float InnerRadius, float OuterRadius, float Falloff) Parameter Type Description Cam BaseCameraWrapper \u0026mdash; Epicenter Vector \u0026mdash; InnerRadius float \u0026mdash; OuterRadius float \u0026mdash; Falloff float \u0026mdash; void ClearCameraLensEffects() void ApplyAudioFade() void UpdateFade(float DeltaTime) Parameter Type Description DeltaTime float \u0026mdash; void DoUpdateCamera(float DeltaTime) Parameter Type Description DeltaTime float \u0026mdash; void eventUpdateCamera(float DeltaTime) Parameter Type Description DeltaTime float \u0026mdash; void SetDesiredColorScale2(Vector \u0026amp;NewColorScale, float InterpTime) Parameter Type Description NewColorScale Vector \u0026mdash; InterpTime float \u0026mdash; Rotator GetCameraRotation() void SetFOV(float NewFOV) Parameter Type Description NewFOV float \u0026mdash; float GetFOVAngle() void eventDestroyed() void PostBeginPlay() "},{"id":24,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/BasketballPickup/","title":"BasketballPickup","parent":"Rumble Component","content":" View Implementation "},{"id":25,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/BattarangPickup/","title":"BattarangPickup","parent":"Rumble Component","content":" View Implementation float GetSpinSpeed() void SetSpinSpeed(float newSpinSpeed) Parameter Type Description newSpinSpeed float \u0026mdash; float GetCurRotation() void SetCurRotation(float newCurRotation) Parameter Type Description newCurRotation float \u0026mdash; "},{"id":26,"href":"/bakkesmod_api/Structs/Utilities/BodyAssetIdsCheckResult/","title":"BodyAssetIdsCheckResult","parent":"Utilities","content":" View Implementation int body_id Default value: none\nint skin_id Default value: none\n"},{"id":27,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/BoostModPickup/","title":"BoostModPickup","parent":"Rumble Component","content":" View Implementation unsigned long GetbUnlimitedBoost() void SetbUnlimitedBoost(unsigned long newbUnlimitedBoost) Parameter Type Description newbUnlimitedBoost unsigned long \u0026mdash; float GetBoostStrength() void SetBoostStrength(float newBoostStrength) Parameter Type Description newBoostStrength float \u0026mdash; float GetOldBoostStrength() void SetOldBoostStrength(float newOldBoostStrength) Parameter Type Description newOldBoostStrength float \u0026mdash; void PickupEnd() void PickupStart() "},{"id":28,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/BoostOverridePickup/","title":"BoostOverridePickup","parent":"Rumble Component","content":" View Implementation CarWrapper GetOtherCar() void SetOtherCar(CarWrapper newOtherCar) Parameter Type Description newOtherCar CarWrapper \u0026mdash; void PickupEnd() void OnTargetChanged() void PickupStart() "},{"id":29,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/BoostPickupWrapper/","title":"BoostPickupWrapper","parent":"Game Object","content":" View Implementation float GetBoostAmount() void SetBoostAmount(float newBoostAmount) Parameter Type Description newBoostAmount float \u0026mdash; unsigned char GetBoostType() void SetBoostType(unsigned char newBoostType) Parameter Type Description newBoostType unsigned char \u0026mdash; void PlayPickedUpFX() void Pickup2(CarWrapper Car) Parameter Type Description Car CarWrapper \u0026mdash; bool CanPickup(CarWrapper Car) Parameter Type Description Car CarWrapper \u0026mdash; "},{"id":30,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/CarComponent/BoostWrapper/","title":"BoostWrapper","parent":"Car Component","content":" View Implementation float GetBoostConsumptionRate() void SetBoostConsumptionRate(float newBoostConsumptionRate) Parameter Type Description newBoostConsumptionRate float \u0026mdash; float GetMaxBoostAmount() void SetMaxBoostAmount(float newMaxBoostAmount) Parameter Type Description newMaxBoostAmount float \u0026mdash; float GetStartBoostAmount() void SetStartBoostAmount(float newStartBoostAmount) Parameter Type Description newStartBoostAmount float \u0026mdash; float GetCurrentBoostAmount() void SetCurrentBoostAmount(float newCurrentBoostAmount) Parameter Type Description newCurrentBoostAmount float \u0026mdash; float GetBoostModifier() void SetBoostModifier(float newBoostModifier) Parameter Type Description newBoostModifier float \u0026mdash; float GetLastBoostAmountRequestTime() void SetLastBoostAmountRequestTime(float newLastBoostAmountRequestTime) Parameter Type Description newLastBoostAmountRequestTime float \u0026mdash; float GetLastBoostAmount() void SetLastBoostAmount(float newLastBoostAmount) Parameter Type Description newLastBoostAmount float \u0026mdash; unsigned long GetbPendingConfirmBoostAmount() void SetbPendingConfirmBoostAmount(unsigned long newbPendingConfirmBoostAmount) Parameter Type Description newbPendingConfirmBoostAmount unsigned long \u0026mdash; unsigned long GetbNoBoost() void SetbNoBoost(unsigned long newbNoBoost) Parameter Type Description newbNoBoost unsigned long \u0026mdash; float GetBoostForce() void SetBoostForce(float newBoostForce) Parameter Type Description newBoostForce float \u0026mdash; float GetMinBoostTime() void SetMinBoostTime(float newMinBoostTime) Parameter Type Description newMinBoostTime float \u0026mdash; float GetRechargeRate() void SetRechargeRate(float newRechargeRate) Parameter Type Description newRechargeRate float \u0026mdash; float GetRechargeDelay() void SetRechargeDelay(float newRechargeDelay) Parameter Type Description newRechargeDelay float \u0026mdash; int GetUnlimitedBoostRefCount() void SetUnlimitedBoostRefCount(int newUnlimitedBoostRefCount) Parameter Type Description newUnlimitedBoostRefCount int \u0026mdash; unsigned char GetReplicatedBoostAmount() void SetReplicatedBoostAmount(unsigned char newReplicatedBoostAmount) Parameter Type Description newReplicatedBoostAmount unsigned char \u0026mdash; bool ShouldPredictBoostConsumption() void ReadReplicatedBoostAmount() void eventSetReplicatedBoostAmount() void ApplyForces(float ActiveTime) Parameter Type Description ActiveTime float \u0026mdash; void ClientGiveBoost(float Amount) Parameter Type Description Amount float \u0026mdash; void ConfirmBoostAmount2() void SendConfirmBoostAmount() void ClientFixBoostAmount(float TimeStamp, float Amount) Parameter Type Description TimeStamp float \u0026mdash; Amount float \u0026mdash; void ServerConfirmBoostAmount(float TimeStamp, float Amount) Parameter Type Description TimeStamp float \u0026mdash; Amount float \u0026mdash; void SetRechargeDelay2(float InRechargeDelay) Parameter Type Description InRechargeDelay float \u0026mdash; void SetRechargeRate2(float InRechargeRate) Parameter Type Description InRechargeRate float \u0026mdash; void SetNoBoost(unsigned long Enabled) Parameter Type Description Enabled unsigned long \u0026mdash; void SetUnlimitedBoost2(unsigned long Enabled) Parameter Type Description Enabled unsigned long \u0026mdash; void SetUnlimitedBoostDelayed(unsigned long Enabled) Parameter Type Description Enabled unsigned long \u0026mdash; void SetBoostModifier2(float Modifier) Parameter Type Description Modifier float \u0026mdash; void SetBoostAmount(float Amount) Parameter Type Description Amount float \u0026mdash; void GiveBoost2(float Amount) Parameter Type Description Amount float \u0026mdash; void GiveStartingBoost() void GiveFullBoost() float GetPercentBoostFull() bool IsFull() void RemoveFromCar() bool CanDeactivate() bool CanActivate() "},{"id":31,"href":"/bakkesmod_api/Structs/Core/BotLoadoutData/","title":"BotLoadoutData","parent":"Core","content":" View Implementation Info on a bot's items. Unsure how to obtain\nstd::map\u0026lt; int, int \u0026gt; products Default value: none\nAttribute product_attributes Default value: none\nunsigned char team Default value = 0\nint team_finish_id Default value = 0\nint custom_finish_id Default value = 0\nunsigned char team_color_id Default value = 0\nunsigned char custom_color_id Default value = 0\n"},{"id":32,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/BreakOutActorPlatformWrapper/","title":"BreakOutActorPlatformWrapper","parent":"Game Object","content":" View Implementation BreakOutActorPlatformWrapper GetAllPlatforms() BreakoutDamageState GetDamagestate() const unsigned int GetSides() unsigned int GetbPrimaryPlayerStart() unsigned int GetTeamIndex() void SetTeamIndex(unsigned int TeamIndex) Parameter Type Description TeamIndex unsigned int \u0026mdash; unsigned int GetMaxDamage() void SetMaxDamage(unsigned int MaxDamage) Parameter Type Description MaxDamage unsigned int \u0026mdash; float GetNeighborRadius() void SetNeighborRadius(float NeighborRadius) Parameter Type Description NeighborRadius float \u0026mdash; ArrayWrapper GetNeighbors() float GetLastHitTime() void SetLastHitTime(float LastHitTime) Parameter Type Description LastHitTime float \u0026mdash; bool IsBroken() bool IsDamaged() void Reset() void SetDamageState2(unsigned char InDamageState, PriWrapper InDamageCauser, Vector \u0026amp;InLocation, unsigned int bDirectDamage, unsigned int bImmediate) Parameter Type Description InDamageState unsigned char \u0026mdash; InDamageCauser PriWrapper \u0026mdash; InLocation Vector \u0026mdash; bDirectDamage unsigned int \u0026mdash; bImmediate unsigned int \u0026mdash; void IncreaseDamage(PriWrapper DamageCauser, Vector \u0026amp;FromLocation, unsigned int bDirectDamage) Parameter Type Description DamageCauser PriWrapper \u0026mdash; FromLocation Vector \u0026mdash; bDirectDamage unsigned int \u0026mdash; bool NeighborDamage(BallWrapper Ball, unsigned int InDamage, Vector \u0026amp;HitLocation) Parameter Type Description Ball BallWrapper \u0026mdash; InDamage unsigned int \u0026mdash; HitLocation Vector \u0026mdash; "},{"id":33,"href":"/bakkesmod_api/Structs/Wrappers/GameObject/BreakoutDamageState/","title":"BreakoutDamageState","parent":"Game Object","content":" View Implementation unsigned char State Default value: none\nPriWrapper Causer Default value {0}\nVector DamageLocation Default value: none\nbool bDirectDamage Default value: none\nbool bImmediate Default value: none\n"},{"id":34,"href":"/bakkesmod_api/Structs/Wrappers/GameObject/CameraStates/CameraOrientation/","title":"CameraOrientation","parent":"Camera States","content":" View Implementation Vector focus Default value: none\nRotator rotation Default value: none\nfloat distance Default value: none\nfloat fov Default value: none\nVector calculated_location Default value: none\n"},{"id":35,"href":"/bakkesmod_api/Structs/Wrappers/CameraSave/","title":"CameraSave","parent":"Wrappers","content":" View Implementation Two of the saved camera settings. Get from SettingsWrapper.GetCameraSaveSettings()\nbool InvertSwivelPitch Default value: none\nbool CameraShake Default value: none\n"},{"id":36,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/CameraSettingsActorWrapper/","title":"CameraSettingsActorWrapper","parent":"Game Object","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const PriWrapper GetPri() const ProfileCameraSettings GetProfileSettings() const _NODISCARD void SetProfileSettings(const ProfileCameraSettings \u0026amp;profileCameraSettings) Parameter Type Description profileCameraSettings ProfileCameraSettings \u0026mdash; "},{"id":37,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/CameraStates/CameraStateBlenderWrapper/","title":"CameraStateBlenderWrapper","parent":"Camera States","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const CameraStateXWrapper GetCameraState() const CameraTransition GetTransition() const _NODISCARD void SetTransition(const CameraTransition \u0026amp;transition) const Parameter Type Description transition CameraTransition \u0026mdash; "},{"id":38,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/CameraStates/CameraStateCarRefWrapper/","title":"CameraStateCarRefWrapper","parent":"Camera States","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const "},{"id":39,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/CameraStates/CameraStateCarWrapper/","title":"CameraStateCarWrapper","parent":"Camera States","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const _NODISCARD float GetInterpToGroundRate() const _NODISCARD float GetInterpToAirRate() const _NODISCARD float GetGroundRotationInterpRate() const _NODISCARD float GetGroundRotationInterpRateWall() const _NODISCARD float GetFOVInterpSpeed() const _NODISCARD float GetSupersonicFOVInterpSpeed() const _NODISCARD float GetGroundNormalInterpRate() const void SetInterpToGroundRate(float value) Parameter Type Description value float \u0026mdash; void SetInterpToAirRate(float value) Parameter Type Description value float \u0026mdash; void SetGroundRotationInterpRate(float value) Parameter Type Description value float \u0026mdash; void SetGroundRotationInterpRateWall(float value) Parameter Type Description value float \u0026mdash; void SetFOVInterpSpeed(float value) Parameter Type Description value float \u0026mdash; void SetSupersonicFOVInterpSpeed(float value) Parameter Type Description value float \u0026mdash; void SetGroundNormalInterpRate(float value) Parameter Type Description value float \u0026mdash; CameraStateCarWrapper GetInstanceWithDefaultValues() "},{"id":40,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/CameraStates/CameraStateWrapper/","title":"CameraStateWrapper","parent":"Camera States","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const "},{"id":41,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/CameraStates/CameraStateXWrapper/","title":"CameraStateXWrapper","parent":"Camera States","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const _NODISCARD std::string GetStateType() const "},{"id":42,"href":"/bakkesmod_api/Structs/Wrappers/GameObject/CameraStates/CameraTransition/","title":"CameraTransition","parent":"Camera States","content":" View Implementation void * camera_state Default value: none\nViewTargetTransitionParams blend_params Default value: none\nfloat remaining_time Default value: none\nCameraOrientation snapshot_pov Default value: none\nbool started Default value: none\n"},{"id":43,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/CameraWrapper/","title":"CameraWrapper","parent":"Game Object","content":" View Implementation Vector GetLocation() void SetLocation(Vector location) Parameter Type Description location Vector \u0026mdash; Rotator GetRotation() void SetRotation(Rotator rotation) Parameter Type Description rotation Rotator \u0026mdash; ProfileCameraSettings GetCameraSettings() void SetCameraSettings(ProfileCameraSettings settings) Parameter Type Description settings ProfileCameraSettings \u0026mdash; bool IsCameraShakeOn() POV GetPOV() void SetPOV(POV pov) Parameter Type Description pov POV \u0026mdash; void SetFOV(float fov) Parameter Type Description fov float \u0026mdash; float GetFOV() void SetLockedFOV(bool lock) Parameter Type Description lock bool \u0026mdash; ActorWrapper GetCameraAsActor() std::string GetCameraState() void SetCameraState(std::string stateName) Parameter Type Description stateName std::string \u0026mdash; Vector linterp(Vector start, Vector end, float elapsed, float speed) Parameter Type Description start Vector \u0026mdash; end Vector \u0026mdash; elapsed float \u0026mdash; speed float \u0026mdash; std::string GetFocusActor() bool SetFocusActor(std::string actorName) Parameter Type Description actorName std::string \u0026mdash; bool SetFlyCamBallTargetMode() CameraStateBlenderWrapper GetBlender() const float GetSwivelFastSpeed() void SetSwivelFastSpeed(float newSwivelFastSpeed) Parameter Type Description newSwivelFastSpeed float \u0026mdash; float GetSwivelDieRate() void SetSwivelDieRate(float newSwivelDieRate) Parameter Type Description newSwivelDieRate float \u0026mdash; StructArrayWrapper GetCameraPresetSettings() float GetHorizontalSplitscreenHeightOffset() void SetHorizontalSplitscreenHeightOffset(float newHorizontalSplitscreenHeightOffset) Parameter Type Description newHorizontalSplitscreenHeightOffset float \u0026mdash; float GetHorizontalSplitscreenFOVOffset() void SetHorizontalSplitscreenFOVOffset(float newHorizontalSplitscreenFOVOffset) Parameter Type Description newHorizontalSplitscreenFOVOffset float \u0026mdash; float GetVerticalSplitscreenFOVOffset() void SetVerticalSplitscreenFOVOffset(float newVerticalSplitscreenFOVOffset) Parameter Type Description newVerticalSplitscreenFOVOffset float \u0026mdash; float GetClipRate() void SetClipRate(float newClipRate) Parameter Type Description newClipRate float \u0026mdash; Rotator GetCurrentSwivel() void SetCurrentSwivel(Rotator newCurrentSwivel) Parameter Type Description newCurrentSwivel Rotator \u0026mdash; RBActorWrapper GetDemolisher() void SetDemolisher(RBActorWrapper newDemolisher) Parameter Type Description newDemolisher RBActorWrapper \u0026mdash; unsigned long GetbDemolished() void SetbDemolished(unsigned long newbDemolished) Parameter Type Description newbDemolished unsigned long \u0026mdash; float ClipToField(float CameraLocationZ) Parameter Type Description CameraLocationZ float \u0026mdash; void Demolished2(RBActorWrapper InDemolisher) Parameter Type Description InDemolisher RBActorWrapper \u0026mdash; Rotator GetDesiredSwivel(float LookUp, float LookRight) Parameter Type Description LookUp float \u0026mdash; LookRight float \u0026mdash; void UpdateSwivel(float DeltaTime) Parameter Type Description DeltaTime float \u0026mdash; float GetDefaultFOVOffset() float GetDefaultViewHeightOffset() void UpdateFOV() void EventCameraTargetChanged(CameraWrapper Camera, ActorWrapper Target) Parameter Type Description Camera CameraWrapper \u0026mdash; Target ActorWrapper \u0026mdash; "},{"id":44,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/CameraXWrapper/","title":"CameraXWrapper","parent":"Game Object","content":" View Implementation Rotator GetPCDeltaRotation() void SetPCDeltaRotation(Rotator newPCDeltaRotation) Parameter Type Description newPCDeltaRotation Rotator \u0026mdash; Rotator GetOldControllerRotation() void SetOldControllerRotation(Rotator newOldControllerRotation) Parameter Type Description newOldControllerRotation Rotator \u0026mdash; Vector GetPCDeltaLocation() void SetPCDeltaLocation(Vector newPCDeltaLocation) Parameter Type Description newPCDeltaLocation Vector \u0026mdash; Vector GetOldControllerLocation() void SetOldControllerLocation(Vector newOldControllerLocation) Parameter Type Description newOldControllerLocation Vector \u0026mdash; Vector GetShakeLocationOffset() void SetShakeLocationOffset(Vector newShakeLocationOffset) Parameter Type Description newShakeLocationOffset Vector \u0026mdash; Rotator GetShakeRotationOffset() void SetShakeRotationOffset(Rotator newShakeRotationOffset) Parameter Type Description newShakeRotationOffset Rotator \u0026mdash; float GetShakeFOVOffset() void SetShakeFOVOffset(float newShakeFOVOffset) Parameter Type Description newShakeFOVOffset float \u0026mdash; UnrealColor GetStartFadeColor() void SetStartFadeColor(UnrealColor newStartFadeColor) Parameter Type Description newStartFadeColor UnrealColor \u0026mdash; UnrealColor GetEndFadeColor() void SetEndFadeColor(UnrealColor newEndFadeColor) Parameter Type Description newEndFadeColor UnrealColor \u0026mdash; Vector GetClipOffset() void SetClipOffset(Vector newClipOffset) Parameter Type Description newClipOffset Vector \u0026mdash; unsigned long GetbDisableCameraShake() void SetbDisableCameraShake(unsigned long newbDisableCameraShake) Parameter Type Description newbDisableCameraShake unsigned long \u0026mdash; unsigned long GetbSnapNextTransition() void SetbSnapNextTransition(unsigned long newbSnapNextTransition) Parameter Type Description newbSnapNextTransition unsigned long \u0026mdash; void eventOnViewTargetChanged() bool IsTransitioning() void SnapTransition() void CopyFade(CameraXWrapper Other) Parameter Type Description Other CameraXWrapper \u0026mdash; void UpdateFade(float DeltaTime) Parameter Type Description DeltaTime float \u0026mdash; void eventUpdateCamera(float DeltaTime) Parameter Type Description DeltaTime float \u0026mdash; Rotator RemoveRoll(Rotator \u0026amp;InRot) Parameter Type Description InRot Rotator \u0026mdash; void UpdateCameraState() void InstanceCameraStates() void OnLoadingMovieClosesd() void eventPostBeginPlay() "},{"id":45,"href":"/bakkesmod_api/Classes/Wrappers/CanvasWrapper/","title":"CanvasWrapper","parent":"Wrappers","content":" View Implementation void SetPosition(Vector2 pos) Parameter Type Description pos Vector2 \u0026mdash; Vector2F GetPositionFloat() void SetColor(LinearColor color) Parameter Type Description color LinearColor \u0026mdash; LinearColor GetColor() void DrawBox(Vector2 size) Parameter Type Description size Vector2 \u0026mdash; void FillBox(Vector2 size) Parameter Type Description size Vector2 \u0026mdash; void FillTriangle(Vector2 p1, Vector2 p2, Vector2 p3, LinearColor color) Parameter Type Description p1 Vector2 \u0026mdash; p2 Vector2 \u0026mdash; p3 Vector2 \u0026mdash; color LinearColor \u0026mdash; void DrawString(std::string text, float xScale, float yScale, bool dropShadow, bool wrapText=false) Parameter Type Description text std::string \u0026mdash; xScale float \u0026mdash; yScale float \u0026mdash; dropShadow bool \u0026mdash; wrapText bool \u0026mdash; Vector2F GetStringSize(std::string text, float xScale=1, float yScale=1) Parameter Type Description text std::string \u0026mdash; xScale float \u0026mdash; yScale float \u0026mdash; void DrawLine(Vector2 start, Vector2 end, float width) Parameter Type Description start Vector2 \u0026mdash; end Vector2 \u0026mdash; width float \u0026mdash; void DrawRect(Vector2 start, Vector2 end) Parameter Type Description start Vector2 \u0026mdash; end Vector2 \u0026mdash; void DrawTexture(ImageWrapper *img, float scale) Parameter Type Description img ImageWrapper \u0026mdash; scale float \u0026mdash; void DrawTile(ImageWrapper *img, float XL, float YL, float U, float V, float UL, float VL, LinearColor Color, unsigned int ClipTile, unsigned char Blend) Parameter Type Description img ImageWrapper \u0026mdash; XL float \u0026mdash; YL float \u0026mdash; U float \u0026mdash; V float \u0026mdash; UL float \u0026mdash; VL float \u0026mdash; Color LinearColor \u0026mdash; ClipTile unsigned int \u0026mdash; Blend unsigned char \u0026mdash; void DrawRotatedTile(ImageWrapper *img, Rotator \u0026amp;Rotation, float XL, float YL, float U, float V, float UL, float VL, float AnchorX, float AnchorY) Parameter Type Description img ImageWrapper \u0026mdash; Rotation Rotator \u0026mdash; XL float \u0026mdash; YL float \u0026mdash; U float \u0026mdash; V float \u0026mdash; UL float \u0026mdash; VL float \u0026mdash; AnchorX float \u0026mdash; AnchorY float \u0026mdash; Vector2 GetPosition() Vector2 Project(Vector location) Parameter Type Description location Vector \u0026mdash; Vector2F ProjectF(Vector location) Parameter Type Description location Vector \u0026mdash; Vector2 GetSize() "},{"id":46,"href":"/bakkesmod_api/Enums/CARBODY/","title":"CARBODY","parent":"Enums","content":" View Implementation A list of car body IDs. This is really outdated (early 2017?), so you'll likely need to find or write a new one for any plugins you make. If you make one make a code snippet and we'll link to it from here\nCAR_BACKFIRE = 21\nCAR_BREAKOUT = 22\nCAR_BREAKOUTTYPES = 1416\nCAR_OCTANE = 23\nCAR_OCTANEZSR = 1568\nCAR_PALADIN = 24\nCAR_ROADHOG = 25\nCAR_ROADHOGXL = 1300\nCAR_GIZMO = 26\nCAR_SWEETTOOTH = 27\nCAR_XDEVIL = 28\nCAR_XDEVILMK2 = 1159\nCAR_HOTSHOT = 29\nCAR_MERC = 30\nCAR_VENOM = 31\nCAR_TAKUMI = 402\nCAR_TAKUMIRXT = 1295\nCAR_DOMINUS = 403\nCAR_DOMINUSGT = 1018\nCAR_SCARAB = 404\nCAR_ZIPPY = 523\nCAR_DELOREAN = 597\nCAR_RIPPER = 600\nCAR_GROG = 607\nCAR_ARMADILLO = 625\nCAR_WARTHOG = 723\nCAR_BATMOBILE = 803\nCAR_MASAMUNE = 1171\nCAR_MARAUDER = 1172\nCAR_AFTERSHOCK = 1286\nCAR_ESPER = 1317\nCAR_PROTEUS = 1475\nCAR_TRITON = 1478\nCAR_VULCAN = 1533\nCAR_TWINMILL = 1603\nCAR_BONESHAKER = 1623\nCAR_ENDO = 1624\nCAR_ICECHARGER = 1675\nCAR_MANTIS = 1691\nCAR_JOGER619RS = 1856\nCAR_CENTIO = 1919\nCAR_ANIMUSGP = 1932\n"},{"id":47,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/CarComponent/CarComponentWrapper/","title":"CarComponentWrapper","parent":"Car Component","content":" View Implementation FXActorWrapper GetFXActorArchetype() void SetFXActorArchetype(FXActorWrapper newFXActorArchetype) Parameter Type Description newFXActorArchetype FXActorWrapper \u0026mdash; unsigned long GetbDisabled() void SetbDisabled(unsigned long newbDisabled) Parameter Type Description newbDisabled unsigned long \u0026mdash; unsigned long GetbAutoActivate() void SetbAutoActivate(unsigned long newbAutoActivate) Parameter Type Description newbAutoActivate unsigned long \u0026mdash; unsigned long GetbSimulateComponent() void SetbSimulateComponent(unsigned long newbSimulateComponent) Parameter Type Description newbSimulateComponent unsigned long \u0026mdash; unsigned long GetbCreated() void SetbCreated(unsigned long newbCreated) Parameter Type Description newbCreated unsigned long \u0026mdash; unsigned long GetbActive() void SetbActive(unsigned long newbActive) Parameter Type Description newbActive unsigned long \u0026mdash; unsigned long GetbRemovedFromCar() void SetbRemovedFromCar(unsigned long newbRemovedFromCar) Parameter Type Description newbRemovedFromCar unsigned long \u0026mdash; unsigned char GetComponentData() void SetComponentData(unsigned char newComponentData) Parameter Type Description newComponentData unsigned char \u0026mdash; unsigned char GetReplicatedActive() void SetReplicatedActive(unsigned char newReplicatedActive) Parameter Type Description newReplicatedActive unsigned char \u0026mdash; PriWrapper GetActivator() void SetActivator(PriWrapper newActivator) Parameter Type Description newActivator PriWrapper \u0026mdash; VehicleWrapper GetVehicle() void SetVehicle(VehicleWrapper newVehicle) Parameter Type Description newVehicle VehicleWrapper \u0026mdash; CarWrapper GetCar() void SetCar(CarWrapper newCar) Parameter Type Description newCar CarWrapper \u0026mdash; float GetActivityTime() void SetActivityTime(float newActivityTime) Parameter Type Description newActivityTime float \u0026mdash; float GetReplicatedActivityTime() void SetReplicatedActivityTime(float newReplicatedActivityTime) Parameter Type Description newReplicatedActivityTime float \u0026mdash; FXActorWrapper GetFXActor() void SetFXActor(FXActorWrapper newFXActor) Parameter Type Description newFXActor FXActorWrapper \u0026mdash; void eventFellOutOfWorld() float GetInactiveTime() float GetActiveTime() void ApplyForces(float ActiveTime) Parameter Type Description ActiveTime float \u0026mdash; void PrePhysicsStep(float DeltaTime) Parameter Type Description DeltaTime float \u0026mdash; void RemoveFromCar() bool CanDeactivate() bool ConditionalDeactivate() bool CanActivate() bool ConditionalActivate() void SetActive(unsigned long bNewActive) Parameter Type Description bNewActive unsigned long \u0026mdash; void Deactivate2() void Activate2() void UnregisterCarEvents() void RegisterCarEvents() void HandleVehicleSetup(CarWrapper InCar) Parameter Type Description InCar CarWrapper \u0026mdash; void OnVehicleSetupComplete() void Create2(CarWrapper OwnerCar, PriWrapper InActivator) Parameter Type Description OwnerCar CarWrapper \u0026mdash; InActivator PriWrapper \u0026mdash; void ClientUpdateActive() void EventActivationChanged(CarComponentWrapper CarComponent) Parameter Type Description CarComponent CarComponentWrapper \u0026mdash; "},{"id":48,"href":"/bakkesmod_api/Classes/Wrappers/CareerStatsWrapper/","title":"CareerStatsWrapper","parent":"Wrappers","content":" View Implementation StatValue GetStatValues() "},{"id":49,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/MeshComponents/CarMeshComponentBaseWrapper/","title":"CarMeshComponentBaseWrapper","parent":"Mesh Components","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const CarWrapper GetCar() const "},{"id":50,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/CarSpeedPickup/","title":"CarSpeedPickup","parent":"Rumble Component","content":" View Implementation float GetGravityScale() void SetGravityScale(float newGravityScale) Parameter Type Description newGravityScale float \u0026mdash; Vector GetAddedForce() void SetAddedForce(Vector newAddedForce) Parameter Type Description newAddedForce Vector \u0026mdash; float GetOrigGravityScale() void SetOrigGravityScale(float newOrigGravityScale) Parameter Type Description newOrigGravityScale float \u0026mdash; void PickupEnd() void PickupStart() "},{"id":51,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/CarWrapper/","title":"CarWrapper","parent":"Game Object","content":" View Implementation Any car in the match. There can be more than one!\nThe best way to get the cars is using a ServerWrapper to call from its superclass GameEventWrapper.GetCars()\nbool IsBoostCheap() void SetBoostCheap(bool b) Parameter Type Description b bool \u0026mdash; void SetCarRotation(Rotator rotation) Parameter Type Description rotation Rotator \u0026mdash; void ForceBoost(bool force) Parameter Type Description force bool \u0026mdash; std::string GetOwnerName() void Unfreeze() ControllerInput GetInput() void SetInput(ControllerInput input) Parameter Type Description input ControllerInput \u0026mdash; void Destroy() void Demolish() unsigned long HasFlip() int GetLoadoutBody() void SetCarColor(LinearColor mainColor, LinearColor secondaryColor) Parameter Type Description mainColor LinearColor \u0026mdash; secondaryColor LinearColor \u0026mdash; ArrayWrapper GetDefaultCarComponents() FlipCarComponentWrapper GetFlipComponent() unsigned char GetDemolishTarget() void SetDemolishTarget(unsigned char newDemolishTarget) Parameter Type Description newDemolishTarget unsigned char \u0026mdash; unsigned char GetDemolishSpeed() void SetDemolishSpeed(unsigned char newDemolishSpeed) Parameter Type Description newDemolishSpeed unsigned char \u0026mdash; unsigned long GetbLoadoutSet() void SetbLoadoutSet(unsigned long newbLoadoutSet) Parameter Type Description newbLoadoutSet unsigned long \u0026mdash; unsigned long GetbDemolishOnOpposingGround() void SetbDemolishOnOpposingGround(unsigned long newbDemolishOnOpposingGround) Parameter Type Description newbDemolishOnOpposingGround unsigned long \u0026mdash; unsigned long GetbWasOnOpposingGround() void SetbWasOnOpposingGround(unsigned long newbWasOnOpposingGround) Parameter Type Description newbWasOnOpposingGround unsigned long \u0026mdash; unsigned long GetbDemolishOnGoalZone() void SetbDemolishOnGoalZone(unsigned long newbDemolishOnGoalZone) Parameter Type Description newbDemolishOnGoalZone unsigned long \u0026mdash; unsigned long GetbWasInGoalZone() void SetbWasInGoalZone(unsigned long newbWasInGoalZone) Parameter Type Description newbWasInGoalZone unsigned long \u0026mdash; unsigned long GetbOverrideHandbrakeOn() void SetbOverrideHandbrakeOn(unsigned long newbOverrideHandbrakeOn) Parameter Type Description newbOverrideHandbrakeOn unsigned long \u0026mdash; unsigned long GetbCollidesWithVehicles() void SetbCollidesWithVehicles(unsigned long newbCollidesWithVehicles) Parameter Type Description newbCollidesWithVehicles unsigned long \u0026mdash; unsigned long GetbOverrideBoostOn() void SetbOverrideBoostOn(unsigned long newbOverrideBoostOn) Parameter Type Description newbOverrideBoostOn unsigned long \u0026mdash; FXActorWrapper GetExitFXArchetype() void SetExitFXArchetype(FXActorWrapper newExitFXArchetype) Parameter Type Description newExitFXArchetype FXActorWrapper \u0026mdash; float GetMaxTimeForDodge() void SetMaxTimeForDodge(float newMaxTimeForDodge) Parameter Type Description newMaxTimeForDodge float \u0026mdash; float GetLastWheelsHitBallTime() void SetLastWheelsHitBallTime(float newLastWheelsHitBallTime) Parameter Type Description newLastWheelsHitBallTime float \u0026mdash; float GetReplicatedCarScale() void SetReplicatedCarScale(float newReplicatedCarScale) Parameter Type Description newReplicatedCarScale float \u0026mdash; FXActorWrapper GetBodyFXActor() void SetBodyFXActor(FXActorWrapper newBodyFXActor) Parameter Type Description newBodyFXActor FXActorWrapper \u0026mdash; PriWrapper GetAttackerPRI() void SetAttackerPRI(PriWrapper newAttackerPRI) Parameter Type Description newAttackerPRI PriWrapper \u0026mdash; Vector GetMouseAccel() void SetMouseAccel(Vector newMouseAccel) Parameter Type Description newMouseAccel Vector \u0026mdash; Vector GetMouseAirAccel() void SetMouseAirAccel(Vector newMouseAirAccel) Parameter Type Description newMouseAirAccel Vector \u0026mdash; RumblePickupComponentWrapper GetAttachedPickup() void SetAttachedPickup(RumblePickupComponentWrapper newAttachedPickup) Parameter Type Description newAttachedPickup RumblePickupComponentWrapper \u0026mdash; Vector GetReplayFocusOffset() void SetReplayFocusOffset(Vector newReplayFocusOffset) Parameter Type Description newReplayFocusOffset Vector \u0026mdash; float GetAddedBallForceMultiplier() void SetAddedBallForceMultiplier(float newAddedBallForceMultiplier) Parameter Type Description newAddedBallForceMultiplier float \u0026mdash; float GetAddedCarForceMultiplier() void SetAddedCarForceMultiplier(float newAddedCarForceMultiplier) Parameter Type Description newAddedCarForceMultiplier float \u0026mdash; GameEventWrapper GetGameEvent() void SetGameEvent(GameEventWrapper newGameEvent) Parameter Type Description newGameEvent GameEventWrapper \u0026mdash; float GetMaxDriveBackwardsSpeed() float GetMaxDriveForwardSpeed() Vector GetReplayFocusLocation() void OnPickupChanged(RumblePickupComponentWrapper InPickup) Parameter Type Description InPickup RumblePickupComponentWrapper \u0026mdash; void SetAttachedPickup2(RumblePickupComponentWrapper InPickup) Parameter Type Description InPickup RumblePickupComponentWrapper \u0026mdash; void EnablePodiumMode() void CopyPushFactorCurve() void ClearAttacker() void NotifyNewAttacker(PriWrapper Attacker) Parameter Type Description Attacker PriWrapper \u0026mdash; void UpdateBallIndicator() void eventOnSuperSonicChanged() void eventOnGroundChanged() void FellOutOfWorld() void DemolishDestroyTimer() void Demolish2(RBActorWrapper Demolisher) Parameter Type Description Demolisher RBActorWrapper \u0026mdash; bool Teleport(Vector \u0026amp;SpawnLocation, Rotator \u0026amp;SpawnRotation, unsigned long bStopVelocity, unsigned long bUpdateRotation, float ExtraForce) Parameter Type Description SpawnLocation Vector \u0026mdash; SpawnRotation Rotator \u0026mdash; bStopVelocity unsigned long \u0026mdash; bUpdateRotation unsigned long \u0026mdash; ExtraForce float \u0026mdash; void OnJumpReleased() void OnJumpPressed() void eventSetVehicleInput(ControllerInput \u0026amp;NewInput) Parameter Type Description NewInput ControllerInput \u0026mdash; bool CanDemolish(CarWrapper HitCar) Parameter Type Description HitCar CarWrapper \u0026mdash; bool ShouldDemolish(CarWrapper HitCar, Vector \u0026amp;HitLocation, Vector \u0026amp;HitNormal, unsigned char *Result) Parameter Type Description HitCar CarWrapper \u0026mdash; HitLocation Vector \u0026mdash; HitNormal Vector \u0026mdash; Result unsigned char * \u0026mdash; unsigned char ApplyCarImpactForces(CarWrapper OtherCar, Vector \u0026amp;HitLocation, Vector \u0026amp;HitNormal) Parameter Type Description OtherCar CarWrapper \u0026mdash; HitLocation Vector \u0026mdash; HitNormal Vector \u0026mdash; bool IsBumperHit(CarWrapper OtherCar) Parameter Type Description OtherCar CarWrapper \u0026mdash; void ApplyBallImpactForces(BallWrapper Ball, Vector \u0026amp;HitLocation) Parameter Type Description Ball BallWrapper \u0026mdash; HitLocation Vector \u0026mdash; bool IsDodging() void OnHitBall(BallWrapper Ball, Vector \u0026amp;HitLocation, Vector \u0026amp;HitNormal) Parameter Type Description Ball BallWrapper \u0026mdash; HitLocation Vector \u0026mdash; HitNormal Vector \u0026mdash; bool AnyWheelTouchingGround() CarComponentWrapper GiveCarComponent(CarComponentWrapper ComponentArchetype, PriWrapper Activator) Parameter Type Description ComponentArchetype CarComponentWrapper \u0026mdash; Activator PriWrapper \u0026mdash; void AddDefaultCarComponents() void DetachPrimitiveComponent(PrimitiveComponentWrapper Component) Parameter Type Description Component PrimitiveComponentWrapper \u0026mdash; void HandleWheelBallHit(WheelWrapper Wheel) Parameter Type Description Wheel WheelWrapper \u0026mdash; void RespawnInPlace() void SetCarScale(float NewScale) Parameter Type Description NewScale float \u0026mdash; void OnClubColorsChanged() void HandleTeamChanged(PriXWrapper MyPRI) Parameter Type Description MyPRI PriXWrapper \u0026mdash; bool UpdateTeamLoadout() void InitTeamPaint() int GetLoadoutTeamIndex() int GetPreviewTeamIndex() bool HasTeam() void HandleLoadoutSelected(PriWrapper MyPRI) Parameter Type Description MyPRI PriWrapper \u0026mdash; void HandleGameEventChanged(PriWrapper MyPRI) Parameter Type Description MyPRI PriWrapper \u0026mdash; void OnPRIChanged() void OnControllerChanged() "},{"id":52,"href":"/bakkesmod_api/Classes/Wrappers/Items/Dbs/CertifiedStatDatabaseWrapper/","title":"CertifiedStatDatabaseWrapper","parent":"Dbs","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const std::string GetStatName(int StatId) Parameter Type Description StatId int \u0026mdash; int GetStatId(std::string \u0026amp;StatName) Parameter Type Description StatName std::string \u0026amp; \u0026mdash; "},{"id":53,"href":"/bakkesmod_api/Structs/Wrappers/ClubColorSet/","title":"ClubColorSet","parent":"Wrappers","content":" View Implementation IDs of colors used by a team in a club match. TODO: Figure out and note what the mapping from ID to color is. Get from CustomMatchTeamSettings.Colors\nunsigned char TeamColorID Default value = 0\nunsigned char CustomColorID Default value = 0\nbool bTeamColorSet Default value = false\nbool bCustomColorSet Default value = false\n"},{"id":54,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/ClubDetailsWrapper/","title":"ClubDetailsWrapper","parent":"Game Object","content":" View Implementation unsigned long long GetClubID() SteamID GetOwnerPlayerID() UniqueIDWrapper GetOwnerPlayerUniqueID() UnrealStringWrapper GetMotD() unsigned long GetbVerified() unsigned long long GetLastUpdatedTime() StructArrayWrapper GetMembers() "},{"id":55,"href":"/bakkesmod_api/Structs/Wrappers/GameObject/ClubMember/","title":"ClubMember","parent":"Game Object","content":" View Implementation A member of a club. Get from ClubDetailsWrapper.GetMembers()\nunsigned char paddingForReasons Default value: none\n"},{"id":56,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/ClubSettingsWrapper/","title":"ClubSettingsWrapper","parent":"Game Object","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const UnrealStringWrapper GetClubName() UnrealStringWrapper GetClubTag() int GetPrimaryColor() int GetAccentColor() "},{"id":57,"href":"/bakkesmod_api/Constants/CONST_DegToUnrRot/","title":"CONST_DegToUnrRot","parent":"Constants","content":" View Implementation Multiply a degree (from 0-360°) by this value to get a rotation value to pass to a Rotator\nCONST_DegToUnrRot = 182.0444f\n"},{"id":58,"href":"/bakkesmod_api/Constants/CONST_PI_D/","title":"CONST_PI_D","parent":"Constants","content":" View Implementation The value of Pi as a double\nCONST_PI_D = 3.14159265358979323846\n"},{"id":59,"href":"/bakkesmod_api/Constants/CONST_PI_F/","title":"CONST_PI_F","parent":"Constants","content":" View Implementation The value of Pi as a float\nCONST_PI_F = 3.1415926f\n"},{"id":60,"href":"/bakkesmod_api/Constants/CONST_RadToUnrRot/","title":"CONST_RadToUnrRot","parent":"Constants","content":" View Implementation Multiply a radian (from 0-2π) by this value to get a rotation value to pass to a Rotator\nCONST_RadToUnrRot = 10430.3783504704527f\n"},{"id":61,"href":"/bakkesmod_api/Constants/CONST_UnrRotToRad/","title":"CONST_UnrRotToRad","parent":"Constants","content":" View Implementation Multiply a rotation value from a Rotator by this value to get radians (from 0-2π)\nCONST_UnrRotToRad = 0.00009587379924285f\n"},{"id":62,"href":"/bakkesmod_api/Structs/Wrappers/ControllerInput/","title":"ControllerInput","parent":"Wrappers","content":" View Implementation A controller's input at a single frame. Easy access with CarWrapper.GetInput()\nfloat Throttle Default value = .0f\nfloat Steer Default value = .0f\nfloat Pitch Default value = .0f\nfloat Yaw Default value = .0f\nfloat Roll Default value = .0f\nfloat DodgeForward Default value = .0f\nfloat DodgeStrafe Default value = .0f\nunsigned long Handbrake Default value: none\nunsigned long Jump Default value: none\nunsigned long ActivateBoost Default value: none\nunsigned long HoldingBoost Default value: none\nunsigned long Jumped Default value: none\n"},{"id":63,"href":"/bakkesmod_api/Classes/Wrappers/ControllerWrapper/","title":"ControllerWrapper","parent":"Wrappers","content":" View Implementation PlayerReplicationInfoWrapper GetPlayerReplicationInfo() "},{"id":64,"href":"/bakkesmod_api/Structs/Core/CurlRequest/","title":"CurlRequest","parent":"Core","content":" View Implementation Used to make a request with the HTTPWrapper. Info on using that here\nstd::string url Default value: none\nstd::string verb Default value: none\nstd::map\u0026lt; std::string, std::string \u0026gt; headers Default value: none\nstd::string body Default value: none\nFormField form_data Default value: none\nCurlProgressFunction progress_function Default value: none\n"},{"id":65,"href":"/bakkesmod_api/Structs/Wrappers/CustomMatchSettings/","title":"CustomMatchSettings","parent":"Wrappers","content":" View Implementation Use to create a private match with MatchmakingWrapper.CreatePrivateMatch()\nstd::string GameTags Default value: none\nstd::string MapName Default value: none\nstd::string ServerName Default value: none\nstd::string Password Default value: none\nCustomMatchTeamSettings BlueTeamSettings Default value: none\nCustomMatchTeamSettings OrangeTeamSettings Default value: none\nint GameMode Default value = 0\nint MaxPlayerCount Default value = 8\nbool bPartyMembersOnly Default value = false\nbool bClubServer Default value: none\n"},{"id":66,"href":"/bakkesmod_api/Structs/Wrappers/CustomMatchTeamSettings/","title":"CustomMatchTeamSettings","parent":"Wrappers","content":" View Implementation A single team's setting. Get from a CustomMatchSettings\nstd::string Name Default value: none\nClubColorSet Colors Default value: none\nint GameScore Default value = 0\n"},{"id":67,"href":"/bakkesmod_api/Classes/Wrappers/CVarManagerWrapper/","title":"CVarManagerWrapper","parent":"Wrappers","content":" View Implementation CVarManagerWrapper(const CVarManagerWrapper \u0026amp;other) Parameter Type Description other CVarManagerWrapper \u0026mdash; CVarManagerWrapper operator=(CVarManagerWrapper rhs) Parameter Type Description rhs CVarManagerWrapper \u0026mdash; ~CVarManagerWrapper() void executeCommand(std::string command, bool log=true) Parameter Type Description command std::string \u0026mdash; log bool \u0026mdash; void registerNotifier(std::string cvar, std::function\u0026lt; void(std::vector\u0026lt; std::string \u0026gt;)\u0026gt; notifier, std::string description, unsigned char permissions) Parameter Type Description cvar std::string \u0026mdash; notifier std::function\u0026lt; void(std::vector\u0026lt; std::string \u0026gt;)\u0026gt; \u0026mdash; description std::string \u0026mdash; permissions unsigned char \u0026mdash; bool removeNotifier(std::string cvar) Parameter Type Description cvar std::string \u0026mdash; CVarWrapper registerCvar(std::string cvar, std::string defaultValue, std::string desc=\u0026quot;\u0026quot;, bool searchAble=true, bool hasMin=false, float min=0, bool hasMax=false, float max=0, bool saveToCfg=true) Parameter Type Description cvar std::string \u0026mdash; defaultValue std::string \u0026mdash; desc std::string \u0026mdash; searchAble bool \u0026mdash; hasMin bool \u0026mdash; min float \u0026mdash; hasMax bool \u0026mdash; max float \u0026mdash; saveToCfg bool \u0026mdash; bool removeCvar(std::string cvar) Parameter Type Description cvar std::string \u0026mdash; void log(std::wstring text) Parameter Type Description text std::wstring \u0026mdash; CVarWrapper getCvar(std::string cvar) Parameter Type Description cvar std::string \u0026mdash; std::string getBindStringForKey(std::string key) Parameter Type Description key std::string \u0026mdash; void setBind(std::string key, std::string command) Parameter Type Description key std::string \u0026mdash; command std::string \u0026mdash; void removeBind(std::string key) Parameter Type Description key std::string \u0026mdash; std::string getAlias(std::string alias) Parameter Type Description alias std::string \u0026mdash; void setAlias(std::string key, std::string script) Parameter Type Description key std::string \u0026mdash; script std::string \u0026mdash; void backupCfg(std::string path) Parameter Type Description path std::string \u0026mdash; void backupBinds(std::string path) Parameter Type Description path std::string \u0026mdash; void loadCfg(std::string path) Parameter Type Description path std::string \u0026mdash; "},{"id":68,"href":"/bakkesmod_api/Classes/Wrappers/CVarWrapper/","title":"CVarWrapper","parent":"Wrappers","content":" View Implementation CVarWrapper(const CVarWrapper \u0026amp;other) Parameter Type Description other CVarWrapper \u0026mdash; CVarWrapper operator=(CVarWrapper rhs) Parameter Type Description rhs CVarWrapper \u0026mdash; ~CVarWrapper() std::string getCVarName() int getIntValue() float getFloatValue() bool getBoolValue() LinearColor getColorValue() std::string getStringValue() std::string getDescription() const std::string GetDefaultValue() bool HasMinimum() bool HasMaximum() float GetMinimum() float GetMaximum() bool IsHidden() bool ShouldSaveToCfg() void ResetToDefault() void notify() void setValue(LinearColor value) Parameter Type Description value LinearColor \u0026mdash; void addOnValueChanged(std::function\u0026lt; void(std::string, CVarWrapper)\u0026gt; changeFunc) Parameter Type Description changeFunc CVarWrapper \u0026mdash; void removeOnValueChanged() void bindTo(std::shared_ptr\u0026lt; LinearColor \u0026gt; var) Parameter Type Description var LinearColor \u0026mdash; bool IsNull() operator bool() "},{"id":69,"href":"/bakkesmod_api/Classes/Wrappers/Items/Dbs/DataAssetDatabase_ESportsTeamWrapper/","title":"DataAssetDatabase_ESportsTeamWrapper","parent":"Dbs","content":" View Implementation "},{"id":70,"href":"/bakkesmod_api/Classes/Wrappers/Items/Dbs/DataAssetDatabaseWrapper/","title":"DataAssetDatabaseWrapper","parent":"Dbs","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const std::string GetName(int DataAssetID) Parameter Type Description DataAssetID int \u0026mdash; int GetID(std::string \u0026amp;DataAssetName) Parameter Type Description DataAssetName std::string \u0026amp; \u0026mdash; "},{"id":71,"href":"/bakkesmod_api/Classes/Utilities/DecalUtilities/","title":"DecalUtilities","parent":"Utilities","content":" View Implementation ApplyDecalToCarResult ApplyDecalToCar(const CarWrapper \u0026amp;car_wrapper, const pluginsdk::BodyShaderOverride \u0026amp;custom_body_decal) Parameter Type Description car_wrapper CarWrapper \u0026mdash; custom_body_decal pluginsdk::BodyShaderOverride \u0026mdash; BodyAssetIdsCheckResult GetBodyAssetIds(const CarWrapper \u0026amp;car_wrapper) Parameter Type Description car_wrapper CarWrapper \u0026mdash; _NODISCARD tl::expected\u0026lt; bool, std::string \u0026gt; ApplyDecalToBall(const BallWrapper \u0026amp;ball_wrapper, const pluginsdk::ShaderOverride \u0026amp;shader_override) Parameter Type Description ball_wrapper BallWrapper \u0026mdash; shader_override pluginsdk::ShaderOverride \u0026mdash; "},{"id":72,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/DemolishPickup/","title":"DemolishPickup","parent":"Rumble Component","content":" View Implementation unsigned char GetDemolishTarget() void SetDemolishTarget(unsigned char newDemolishTarget) Parameter Type Description newDemolishTarget unsigned char \u0026mdash; unsigned char GetDemolishSpeed() void SetDemolishSpeed(unsigned char newDemolishSpeed) Parameter Type Description newDemolishSpeed unsigned char \u0026mdash; unsigned char GetOldTarget() void SetOldTarget(unsigned char newOldTarget) Parameter Type Description newOldTarget unsigned char \u0026mdash; unsigned char GetOldSpeed() void SetOldSpeed(unsigned char newOldSpeed) Parameter Type Description newOldSpeed unsigned char \u0026mdash; void PickupEnd() void PickupStart() "},{"id":73,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/CarComponent/DodgeComponentWrapper/","title":"DodgeComponentWrapper","parent":"Car Component","content":" View Implementation float GetDodgeInputThreshold() void SetDodgeInputThreshold(float newDodgeInputThreshold) Parameter Type Description newDodgeInputThreshold float \u0026mdash; float GetSideDodgeImpulse() void SetSideDodgeImpulse(float newSideDodgeImpulse) Parameter Type Description newSideDodgeImpulse float \u0026mdash; float GetSideDodgeImpulseMaxSpeedScale() void SetSideDodgeImpulseMaxSpeedScale(float newSideDodgeImpulseMaxSpeedScale) Parameter Type Description newSideDodgeImpulseMaxSpeedScale float \u0026mdash; float GetForwardDodgeImpulse() void SetForwardDodgeImpulse(float newForwardDodgeImpulse) Parameter Type Description newForwardDodgeImpulse float \u0026mdash; float GetForwardDodgeImpulseMaxSpeedScale() void SetForwardDodgeImpulseMaxSpeedScale(float newForwardDodgeImpulseMaxSpeedScale) Parameter Type Description newForwardDodgeImpulseMaxSpeedScale float \u0026mdash; float GetBackwardDodgeImpulse() void SetBackwardDodgeImpulse(float newBackwardDodgeImpulse) Parameter Type Description newBackwardDodgeImpulse float \u0026mdash; float GetBackwardDodgeImpulseMaxSpeedScale() void SetBackwardDodgeImpulseMaxSpeedScale(float newBackwardDodgeImpulseMaxSpeedScale) Parameter Type Description newBackwardDodgeImpulseMaxSpeedScale float \u0026mdash; float GetSideDodgeTorque() void SetSideDodgeTorque(float newSideDodgeTorque) Parameter Type Description newSideDodgeTorque float \u0026mdash; float GetForwardDodgeTorque() void SetForwardDodgeTorque(float newForwardDodgeTorque) Parameter Type Description newForwardDodgeTorque float \u0026mdash; float GetDodgeTorqueTime() void SetDodgeTorqueTime(float newDodgeTorqueTime) Parameter Type Description newDodgeTorqueTime float \u0026mdash; float GetMinDodgeTorqueTime() void SetMinDodgeTorqueTime(float newMinDodgeTorqueTime) Parameter Type Description newMinDodgeTorqueTime float \u0026mdash; float GetDodgeZDamping() void SetDodgeZDamping(float newDodgeZDamping) Parameter Type Description newDodgeZDamping float \u0026mdash; float GetDodgeZDampingDelay() void SetDodgeZDampingDelay(float newDodgeZDampingDelay) Parameter Type Description newDodgeZDampingDelay float \u0026mdash; float GetDodgeZDampingUpTime() void SetDodgeZDampingUpTime(float newDodgeZDampingUpTime) Parameter Type Description newDodgeZDampingUpTime float \u0026mdash; float GetDodgeImpulseScale() void SetDodgeImpulseScale(float newDodgeImpulseScale) Parameter Type Description newDodgeImpulseScale float \u0026mdash; float GetDodgeTorqueScale() void SetDodgeTorqueScale(float newDodgeTorqueScale) Parameter Type Description newDodgeTorqueScale float \u0026mdash; Vector GetDodgeTorque() void SetDodgeTorque(Vector newDodgeTorque) Parameter Type Description newDodgeTorque Vector \u0026mdash; Vector GetDodgeDirection() void SetDodgeDirection(Vector newDodgeDirection) Parameter Type Description newDodgeDirection Vector \u0026mdash; void SetDodgeSettings() void ApplyTorqueForces(float ActiveTime) Parameter Type Description ActiveTime float \u0026mdash; void ApplyDodgeImpulse() Vector GetDodgeImpulse2(Vector \u0026amp;DodgeDir) Parameter Type Description DodgeDir Vector \u0026mdash; void ApplyForces(float ActiveTime) Parameter Type Description ActiveTime float \u0026mdash; bool CanActivate() void OnCreated() "},{"id":74,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/CarComponent/DoubleJumpComponentWrapper/","title":"DoubleJumpComponentWrapper","parent":"Car Component","content":" View Implementation void SetJumpImpulse(float newJumpImpulse) Parameter Type Description newJumpImpulse float \u0026mdash; float GetImpulseScale() void SetImpulseScale(float newImpulseScale) Parameter Type Description newImpulseScale float \u0026mdash; void ApplyForces(float ActiveTime) Parameter Type Description ActiveTime float \u0026mdash; void OnCreated() "},{"id":75,"href":"/bakkesmod_api/Classes/Wrappers/Engine/EngineTAWrapper/","title":"EngineTAWrapper","parent":"Engine","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const unsigned long GetbEnableClientPrediction() void SetbEnableClientPrediction(unsigned long newbEnableClientPrediction) Parameter Type Description newbEnableClientPrediction unsigned long \u0026mdash; unsigned long GetbClientPhysicsUpdate() void SetbClientPhysicsUpdate(unsigned long newbClientPhysicsUpdate) Parameter Type Description newbClientPhysicsUpdate unsigned long \u0026mdash; unsigned long GetbDisableClientCorrections() void SetbDisableClientCorrections(unsigned long newbDisableClientCorrections) Parameter Type Description newbDisableClientCorrections unsigned long \u0026mdash; unsigned long GetbDebugClientCorrections() void SetbDebugClientCorrections(unsigned long newbDebugClientCorrections) Parameter Type Description newbDebugClientCorrections unsigned long \u0026mdash; unsigned long GetbForceClientCorrection() void SetbForceClientCorrection(unsigned long newbForceClientCorrection) Parameter Type Description newbForceClientCorrection unsigned long \u0026mdash; float GetPhysicsFramerate() void SetPhysicsFramerate(float newPhysicsFramerate) Parameter Type Description newPhysicsFramerate float \u0026mdash; int GetMaxPhysicsSubsteps() void SetMaxPhysicsSubsteps(int newMaxPhysicsSubsteps) Parameter Type Description newMaxPhysicsSubsteps int \u0026mdash; int GetMaxUploadedClientFrames() void SetMaxUploadedClientFrames(int newMaxUploadedClientFrames) Parameter Type Description newMaxUploadedClientFrames int \u0026mdash; int GetMaxClientReplayFrames() void SetMaxClientReplayFrames(int newMaxClientReplayFrames) Parameter Type Description newMaxClientReplayFrames int \u0026mdash; int GetPhysicsFrame() void SetPhysicsFrame(int newPhysicsFrame) Parameter Type Description newPhysicsFrame int \u0026mdash; float GetRenderAlpha() void SetRenderAlpha(float newRenderAlpha) Parameter Type Description newRenderAlpha float \u0026mdash; int GetReplicatedPhysicsFrame() void SetReplicatedPhysicsFrame(int newReplicatedPhysicsFrame) Parameter Type Description newReplicatedPhysicsFrame int \u0026mdash; int GetDirtyPhysicsFrame() void SetDirtyPhysicsFrame(int newDirtyPhysicsFrame) Parameter Type Description newDirtyPhysicsFrame int \u0026mdash; int GetForceCorrectionFrames() void SetForceCorrectionFrames(int newForceCorrectionFrames) Parameter Type Description newForceCorrectionFrames int \u0026mdash; int GetTickNotifyIndex() void SetTickNotifyIndex(int newTickNotifyIndex) Parameter Type Description newTickNotifyIndex int \u0026mdash; UnrealStringWrapper GetShellArchetypePath() float GetLastBugReportTime() void SetLastBugReportTime(float newLastBugReportTime) Parameter Type Description newLastBugReportTime float \u0026mdash; float GetDebugClientCorrectionStartTime() void SetDebugClientCorrectionStartTime(float newDebugClientCorrectionStartTime) Parameter Type Description newDebugClientCorrectionStartTime float \u0026mdash; int GetDebugClientCorrectionCount() void SetDebugClientCorrectionCount(int newDebugClientCorrectionCount) Parameter Type Description newDebugClientCorrectionCount int \u0026mdash; StatGraphSystemWrapper GetStatGraphs() void SetStatGraphs(StatGraphSystemWrapper newStatGraphs) Parameter Type Description newStatGraphs StatGraphSystemWrapper \u0026mdash; float GetLastPhysicsDeltaTimeScale() void SetLastPhysicsDeltaTimeScale(float newLastPhysicsDeltaTimeScale) Parameter Type Description newLastPhysicsDeltaTimeScale float \u0026mdash; void DebugClientCorrections2() float GetBulletFixedDeltaTime() void RunPhysicsStep(int BulletSceneIndex, float DeltaTime) Parameter Type Description BulletSceneIndex int \u0026mdash; DeltaTime float \u0026mdash; void UpdateReplicatedPhysicsFrame(int ServerFrame) Parameter Type Description ServerFrame int \u0026mdash; void DebugDedicatedServer(float ForHowLong) Parameter Type Description ForHowLong float \u0026mdash; float GetPhysicsTime() void eventRecordAppStart() void eventInit() void EventPreAsyncTick(float DeltaTime) Parameter Type Description DeltaTime float \u0026mdash; "},{"id":76,"href":"/bakkesmod_api/Classes/Wrappers/Engine/EnumWrapper/","title":"EnumWrapper","parent":"Engine","content":" View Implementation _NODISCARD std::string GetEnumName() const _NODISCARD std::string GetEnumLabel(unsigned char enum_value) const Parameter Type Description enum_value unsigned char \u0026mdash; _NODISCARD unsigned char GetEnumValue(const std::string \u0026amp;enum_label) const Parameter Type Description enum_label const std::string \u0026amp; \u0026mdash; _NODISCARD size_t GetEnumValueCount() const _NODISCARD std::map\u0026lt; unsigned char, std::string \u0026gt; GetPossibleValues() const _NODISCARD bool IsNull() const operator bool() const EnumWrapper GetTeamEnum() EnumWrapper GetActorCollisionTypes() EnumWrapper GetActorForceModes() EnumWrapper GetActorNetRoles() EnumWrapper GetActorPhysics() EnumWrapper GetActorTravelModes() EnumWrapper GetTrainingPlayTestTypes() EnumWrapper GetTutorialRotationTypes() EnumWrapper GetBoostTypes() EnumWrapper GetOnlinePlatforms() EnumWrapper GetAchievementTypes() EnumWrapper GetBallHitTypes() EnumWrapper GetBlueprintTypes() EnumWrapper GetCarImpactResults() EnumWrapper GetChatChannels() EnumWrapper GetDemolishSpeeds() EnumWrapper GetDemolishTargets() EnumWrapper GetDifficulties() EnumWrapper GetHistoryTypes() EnumWrapper GetNetworkInputBuffers() EnumWrapper GetPawnTypes() EnumWrapper GetProductQualities() EnumWrapper GetStatGraphLevels() EnumWrapper GetTrainingSaveTypes() EnumWrapper GetTrainingTypes() EnumWrapper GetUnlockMethods() EnumWrapper GetVoiceFilters() EnumWrapper GetTTSSpeakers() EnumWrapper GetConnectionQualityStates() EnumWrapper GetRadialImpulseFalloffs() EnumWrapper GetRBCollisionChannels() EnumWrapper GetReplayStates() EnumWrapper GetGraphSummaryTypes() EnumWrapper GetTrainingRoundAttempts() EnumWrapper GetWeatherVariant() EnumWrapper GetPaintFinishTyp() "},{"id":77,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/CarComponent/FlipCarComponentWrapper/","title":"FlipCarComponentWrapper","parent":"Car Component","content":" View Implementation float GetFlipCarImpulse() void SetFlipCarImpulse(float newFlipCarImpulse) Parameter Type Description newFlipCarImpulse float \u0026mdash; float GetFlipCarTorque() void SetFlipCarTorque(float newFlipCarTorque) Parameter Type Description newFlipCarTorque float \u0026mdash; float GetFlipCarTime() void SetFlipCarTime(float newFlipCarTime) Parameter Type Description newFlipCarTime float \u0026mdash; unsigned long GetbFlipRight() void SetbFlipRight(unsigned long newbFlipRight) Parameter Type Description newbFlipRight unsigned long \u0026mdash; void InitFlip() void ApplyForces(float ActiveTime) Parameter Type Description ActiveTime float \u0026mdash; bool CanActivate() void OnCreated() "},{"id":78,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/FootballPickupWrapper/","title":"FootballPickupWrapper","parent":"Rumble Component","content":" View Implementation float GetAttachTime() void SetAttachTime(float AttachTime) Parameter Type Description AttachTime float \u0026mdash; float GetDetachTime() void SetDetachTime(float DetachTime) Parameter Type Description DetachTime float \u0026mdash; Vector GetAttachOffset() void SetAttachOffset(Vector AttachOffset) Parameter Type Description AttachOffset Vector \u0026mdash; float GetCarFumbleForce() void SetCarFumbleForce(float CarFumbleForce) Parameter Type Description CarFumbleForce float \u0026mdash; float GetDoubleJumpUpForce() void SetDoubleJumpUpForce(float DoubleJumpUpForce) Parameter Type Description DoubleJumpUpForce float \u0026mdash; float GetDemolishUpForce() void SetDemolishUpForce(float DemolishUpForce) Parameter Type Description DemolishUpForce float \u0026mdash; float GetMinBreakTime() void SetMinBreakTime(float MinBreakTime) Parameter Type Description MinBreakTime float \u0026mdash; float GetMinAttachTime() void SetMinAttachTime(float MinAttachTime) Parameter Type Description MinAttachTime float \u0026mdash; float GetCheckLastTouchRate() void SetCheckLastTouchRate(float CheckLastTouchRate) Parameter Type Description CheckLastTouchRate float \u0026mdash; float GetOutOfBoundsZ() void SetOutOfBoundsZ(float OutOfBoundsZ) Parameter Type Description OutOfBoundsZ float \u0026mdash; BallWrapper GetWeldedBall() void SetWeldedBall(BallWrapper WeldedBall) Parameter Type Description WeldedBall BallWrapper \u0026mdash; float GetLastTouchCheckTime() void SetLastTouchCheckTime(float LastTouchCheckTime) Parameter Type Description LastTouchCheckTime float \u0026mdash; BallWrapper GetPendingBall() void SetPendingBall(BallWrapper PendingBall) Parameter Type Description PendingBall BallWrapper \u0026mdash; Vector GetPendingBallDodge() void SetPendingBallDodge(Vector PendingBallDodge) Parameter Type Description PendingBallDodge Vector \u0026mdash; bool IsDrivingOutOfBounds() bool DisableBallImpactForces() void DeactivationFX() void HandleBallExplode(BallWrapper Ball) Parameter Type Description Ball BallWrapper \u0026mdash; bool GetShouldHideActivateUI() bool GetWasRecentlyAttached() void HandleCarTouch(BallWrapper InBall, CarWrapper InCar, unsigned char HitType) Parameter Type Description InBall BallWrapper \u0026mdash; InCar CarWrapper \u0026mdash; HitType unsigned char \u0026mdash; void FumbleBall(float UpwardForce) Parameter Type Description UpwardForce float \u0026mdash; void ThrowPendingBall() void HandleHitBall(CarWrapper InCar, BallWrapper InBall, Vector \u0026amp;HitLocation, Vector \u0026amp;HitNormal) Parameter Type Description InCar CarWrapper \u0026mdash; InBall BallWrapper \u0026mdash; HitLocation Vector \u0026mdash; HitNormal Vector \u0026mdash; void OnWeldedBallChanged() void PickupTick(float DeltaTime) Parameter Type Description DeltaTime float \u0026mdash; void PickupEnd() void PickupStart() "},{"id":79,"href":"/bakkesmod_api/Structs/Core/FormField/","title":"FormField","parent":"Core","content":" View Implementation Part of a CurlRequest. Info on using HttpWrapper here\nType kString\nkFile\nType field_type Default value: none\nstd::string data Default value: none\nstd::string name Default value: none\n"},{"id":80,"href":"/functions/function_scanner/","title":"Function Scanner","parent":"Functions","content":"Trying to hook an event but don\u0026rsquo;t know what event to use? There\u0026rsquo;s way more events out there than can be documented, so you can find one yourself with the function scanner\nI highly recommend this video I made to understand how to use it, but there\u0026rsquo;s also a text guide below https://www.youtube.com/watch?v=gDZ1wWKE8aw\nSet the -dev option On Steam: Right click the game and hit properties Then add the option\nOn Epic:\nHit Settings Scroll down to Rocket League, enable Additional Command Line arguments, then add -dev\nReboot and open scanner Now that you\u0026rsquo;ve enabled -dev, reboot rocket league with bakkesmod open Once injected, open the console with f6 and type togglemenu devtools The scanner will now open\nUse the scanner You can select any words you think are relevant and add them to the whitelist. Any words that aren\u0026rsquo;t relevant can be added to the blacklist. Separate words with , but no space a, b will match a and [space]b. When you hit apply, any functions containing words matching the whitelist and not matching the blacklist will appear. These will appear as they happen, so it\u0026rsquo;s a good way to find out when functions fire, and what timing you want. This video does a much better job of explaining this part\nHook the Function When you\u0026rsquo;ve found the right function, hook it using gameWrapper-\u0026gt;HookEvent(). Details here. Every time that function happens, your code will be run. This can be used to know when something important happens (a goal), get pointers to hard-to-find wrappers, or just be used to help you do something on a consistent timer.\nIf you want to use the caller, the Bakkesmod caller will be based off of the Rocket League calling class / calling object name. Most functions are called by classes named Something_TA. Remove the _TA at the end and look for any wrappers with similar names. If a wrapper matches, that is the caller. For example, \u0026quot;Function TAGame.Car_TA.OnHitBall\u0026quot; is called by a Car_TA. The prefix is Car, so it\u0026rsquo;s wrapped by CarWrapper. Not all callers are wrapped though. If you absolutely need the caller and it\u0026rsquo;s unwrapped, ask for help and give some reasoning as to why you need the caller. If it\u0026rsquo;s useful, it might be added to BakkesMod.\nThis image shows the breakdown of the function name\nHooks are the hardest part of Bakkesmod programming, but can have the most interesting results\n"},{"id":81,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/FXActorWrapper/","title":"FXActorWrapper","parent":"Game Object","content":" View Implementation unsigned long GetbDeactivateWhenOwnerDestroyed() void SetbDeactivateWhenOwnerDestroyed(unsigned long newbDeactivateWhenOwnerDestroyed) Parameter Type Description newbDeactivateWhenOwnerDestroyed unsigned long \u0026mdash; unsigned long GetbAllowShadowCasting() void SetbAllowShadowCasting(unsigned long newbAllowShadowCasting) Parameter Type Description newbAllowShadowCasting unsigned long \u0026mdash; unsigned long GetbAutoActivate() void SetbAutoActivate(unsigned long newbAutoActivate) Parameter Type Description newbAutoActivate unsigned long \u0026mdash; unsigned long GetbRenderInactive() void SetbRenderInactive(unsigned long newbRenderInactive) Parameter Type Description newbRenderInactive unsigned long \u0026mdash; unsigned long GetbActive() void SetbActive(unsigned long newbActive) Parameter Type Description newbActive unsigned long \u0026mdash; unsigned long GetbHadOwner() void SetbHadOwner(unsigned long newbHadOwner) Parameter Type Description newbHadOwner unsigned long \u0026mdash; FXActorWrapper GetParent() void SetParent(FXActorWrapper newParent) Parameter Type Description newParent FXActorWrapper \u0026mdash; ActorWrapper GetAttachmentActor() void SetAttachmentActor(ActorWrapper newAttachmentActor) Parameter Type Description newAttachmentActor ActorWrapper \u0026mdash; float GetDestroyWaitTime() void SetDestroyWaitTime(float newDestroyWaitTime) Parameter Type Description newDestroyWaitTime float \u0026mdash; float GetDestroyTime() void SetDestroyTime(float newDestroyTime) Parameter Type Description newDestroyTime float \u0026mdash; int GetEditID() void SetEditID(int newEditID) Parameter Type Description newEditID int \u0026mdash; void eventDumpDebugInfo() void eventDestroyed() void Inherit(FXActorWrapper Other) Parameter Type Description Other FXActorWrapper \u0026mdash; void ResetParticles() void StopAllEffects() void eventDeactivateAndDestroy() void UpdateFXStates() bool IsLocallyControlled() void Deactivate2() void Activate2() void BindTo(FXActorWrapper ParentFXActor) Parameter Type Description ParentFXActor FXActorWrapper \u0026mdash; void SetAttachmentActor2(ActorWrapper AttachToActor) Parameter Type Description AttachToActor ActorWrapper \u0026mdash; void PostBeginPlay() "},{"id":82,"href":"/bakkesmod_api/Classes/Wrappers/GameEvent/SaveData/GameEditorSaveDataWrapper/","title":"GameEditorSaveDataWrapper","parent":"Save Data","content":" View Implementation UnrealStringWrapper GetLoadedSaveName() TrainingEditorSaveDataWrapper GetTrainingData() void SetTrainingData(TrainingEditorSaveDataWrapper newTrainingData) Parameter Type Description newTrainingData TrainingEditorSaveDataWrapper \u0026mdash; int GetPlayerTeamNumber() void SetPlayerTeamNumber(int newPlayerTeamNumber) Parameter Type Description newPlayerTeamNumber int \u0026mdash; unsigned long GetbUnowned() void SetbUnowned(unsigned long newbUnowned) Parameter Type Description newbUnowned unsigned long \u0026mdash; int GetShotsCompleted() void SetShotsCompleted(int newShotsCompleted) Parameter Type Description newShotsCompleted int \u0026mdash; UnrealStringWrapper GetFavoritesFolderPath() UnrealStringWrapper GetMyTrainingFolderPath() UnrealStringWrapper GetDownloadedFolderPath() unsigned char GetTrainingSaveType(unsigned long bOwned, unsigned long bFavorited) Parameter Type Description bOwned unsigned long \u0026mdash; bFavorited unsigned long \u0026mdash; void Init() "},{"id":83,"href":"/bakkesmod_api/Classes/Wrappers/GameEvent/GameEditorWrapper/","title":"GameEditorWrapper","parent":"Game Event","content":" View Implementation int GetActiveRoundNumber() void SetActiveRoundNumber(int newActiveRoundNumber) Parameter Type Description newActiveRoundNumber int \u0026mdash; int GetMaxRounds() void SetMaxRounds(int newMaxRounds) Parameter Type Description newMaxRounds int \u0026mdash; int GetHistoryPosition() void SetHistoryPosition(int newHistoryPosition) Parameter Type Description newHistoryPosition int \u0026mdash; int GetMaxUndoHistory() void SetMaxUndoHistory(int newMaxUndoHistory) Parameter Type Description newMaxUndoHistory int \u0026mdash; FXActorWrapper GetFXActorArchetype() void SetFXActorArchetype(FXActorWrapper newFXActorArchetype) Parameter Type Description newFXActorArchetype FXActorWrapper \u0026mdash; FXActorWrapper GetFXActor() void SetFXActor(FXActorWrapper newFXActor) Parameter Type Description newFXActor FXActorWrapper \u0026mdash; void RotateActor(PlayerControllerWrapper PC, unsigned long bSnapOrientation) Parameter Type Description PC PlayerControllerWrapper \u0026mdash; bSnapOrientation unsigned long \u0026mdash; void PrevRound() void NextRound() void DecreaseTime() void IncreaseTime() void StopEditing(PlayerControllerWrapper PC) Parameter Type Description PC PlayerControllerWrapper \u0026mdash; void StartEditing() void CycleActor(PlayerControllerWrapper PC) Parameter Type Description PC PlayerControllerWrapper \u0026mdash; void ReleaseGrabbedActor(PlayerControllerWrapper PC) Parameter Type Description PC PlayerControllerWrapper \u0026mdash; void ReleaseRotateActor(PlayerControllerWrapper PC) Parameter Type Description PC PlayerControllerWrapper \u0026mdash; void ToggleRotateActor(PlayerControllerWrapper PC) Parameter Type Description PC PlayerControllerWrapper \u0026mdash; void ToggleGrabActor(PlayerControllerWrapper PC) Parameter Type Description PC PlayerControllerWrapper \u0026mdash; void ToggleReleaseActor(PlayerControllerWrapper PC) Parameter Type Description PC PlayerControllerWrapper \u0026mdash; void ReleaseActor2(PlayerControllerWrapper PC) Parameter Type Description PC PlayerControllerWrapper \u0026mdash; void GrabActor2(PlayerControllerWrapper PC) Parameter Type Description PC PlayerControllerWrapper \u0026mdash; bool CanQueSaveReplay() bool ShouldUpdateCrosshair() int GetPlayerTeamNumber() bool CanAddHistory() void ToggleEditorRound() void CommitRedoRound() void ResetRound() void Save2() void Redo2(PlayerControllerWrapper PC) Parameter Type Description PC PlayerControllerWrapper \u0026mdash; void Undo2(PlayerControllerWrapper PC) Parameter Type Description PC PlayerControllerWrapper \u0026mdash; unsigned char GetOtherHistoryType(unsigned char HistoryType) Parameter Type Description HistoryType unsigned char \u0026mdash; void ClampUndoHistory() void ClearRedoHistory() void ClearAllHistory() bool DestroyActor(ActorWrapper A, unsigned char HistoryType) Parameter Type Description A ActorWrapper \u0026mdash; HistoryType unsigned char \u0026mdash; bool IsInEditorMode() void RemoveAllPointsFromScore(int TeamIndex) Parameter Type Description TeamIndex int \u0026mdash; void RemovePointsFromScore(int PointsToRemove, int TeamIndex) Parameter Type Description PointsToRemove int \u0026mdash; TeamIndex int \u0026mdash; void DeleteAllExistingActorsBasedOffSpawnList() bool RoundContainsASwitch() void EnableTriggers(unsigned long bEnable) Parameter Type Description bEnable unsigned long \u0026mdash; void HideCarSpawnPoints(unsigned long bHide) Parameter Type Description bHide unsigned long \u0026mdash; void ResetSpawnLocations() void OnSpawnedArchetype(ActorWrapper SpawnedActor, unsigned char HistoryType) Parameter Type Description SpawnedActor ActorWrapper \u0026mdash; HistoryType unsigned char \u0026mdash; void SpawnArchetype(PlayerControllerWrapper Controller, int ArchetypeIndex) Parameter Type Description Controller PlayerControllerWrapper \u0026mdash; ArchetypeIndex int \u0026mdash; void IncrementSelectedSpawnArchetypeIndex(int Direction, int *Index) Parameter Type Description Direction int \u0026mdash; Index int * \u0026mdash; bool CanChangeTeam() void ResetBallsToDefaultPosition() void FireBalls() void Interact() bool ShouldResetBalls() void OnVehicleSetup(CarWrapper Car) Parameter Type Description Car CarWrapper \u0026mdash; void HandleVehicleSetup(CarWrapper Car) Parameter Type Description Car CarWrapper \u0026mdash; void OnPlayerRestarted(CarWrapper PlayerCar) Parameter Type Description PlayerCar CarWrapper \u0026mdash; bool ChooseTeam(int TeamIndex, PlayerControllerWrapper Player) Parameter Type Description TeamIndex int \u0026mdash; Player PlayerControllerWrapper \u0026mdash; void InitFX() void eventPostBeginPlay() "},{"id":84,"href":"/bakkesmod_api/Classes/Wrappers/GameEvent/GameEventWrapper/","title":"GameEventWrapper","parent":"Game Event","content":" View Implementation _NODISCARD std::string GetMatchTypeName() const unsigned char GetReplicatedStateIndex() void SetReplicatedStateIndex(unsigned char newReplicatedStateIndex) Parameter Type Description newReplicatedStateIndex unsigned char \u0026mdash; CarWrapper GetCarArchetype() void SetCarArchetype(CarWrapper newCarArchetype) Parameter Type Description newCarArchetype CarWrapper \u0026mdash; int GetCountdownTime() void SetCountdownTime(int newCountdownTime) Parameter Type Description newCountdownTime int \u0026mdash; int GetFinishTime() void SetFinishTime(int newFinishTime) Parameter Type Description newFinishTime int \u0026mdash; unsigned long GetbMultiplayer() void SetbMultiplayer(unsigned long newbMultiplayer) Parameter Type Description newbMultiplayer unsigned long \u0026mdash; unsigned long GetbCountdownMessagesDisabled() void SetbCountdownMessagesDisabled(unsigned long newbCountdownMessagesDisabled) Parameter Type Description newbCountdownMessagesDisabled unsigned long \u0026mdash; unsigned long GetbFillWithAI() void SetbFillWithAI(unsigned long newbFillWithAI) Parameter Type Description newbFillWithAI unsigned long \u0026mdash; unsigned long GetbAllowQueueSaveReplay() void SetbAllowQueueSaveReplay(unsigned long newbAllowQueueSaveReplay) Parameter Type Description newbAllowQueueSaveReplay unsigned long \u0026mdash; unsigned long GetbAllowReadyUp() void SetbAllowReadyUp(unsigned long newbAllowReadyUp) Parameter Type Description newbAllowReadyUp unsigned long \u0026mdash; unsigned long GetbRestartingMatch() void SetbRestartingMatch(unsigned long newbRestartingMatch) Parameter Type Description newbRestartingMatch unsigned long \u0026mdash; unsigned long GetbRandomizedBotLoadouts() void SetbRandomizedBotLoadouts(unsigned long newbRandomizedBotLoadouts) Parameter Type Description newbRandomizedBotLoadouts unsigned long \u0026mdash; unsigned long GetbHasLeaveMatchPenalty() void SetbHasLeaveMatchPenalty(unsigned long newbHasLeaveMatchPenalty) Parameter Type Description newbHasLeaveMatchPenalty unsigned long \u0026mdash; unsigned long GetbCanVoteToForfeit() void SetbCanVoteToForfeit(unsigned long newbCanVoteToForfeit) Parameter Type Description newbCanVoteToForfeit unsigned long \u0026mdash; unsigned long GetbDisableAimAssist() void SetbDisableAimAssist(unsigned long newbDisableAimAssist) Parameter Type Description newbDisableAimAssist unsigned long \u0026mdash; unsigned long GetbAwardAchievements() void SetbAwardAchievements(unsigned long newbAwardAchievements) Parameter Type Description newbAwardAchievements unsigned long \u0026mdash; int GetMinPlayers() void SetMinPlayers(int newMinPlayers) Parameter Type Description newMinPlayers int \u0026mdash; int GetMaxPlayers() void SetMaxPlayers(int newMaxPlayers) Parameter Type Description newMaxPlayers int \u0026mdash; ArrayWrapper GetSpawnPoints() float GetBotSkill() void SetBotSkill(float newBotSkill) Parameter Type Description newBotSkill float \u0026mdash; int GetRespawnTime() void SetRespawnTime(int newRespawnTime) Parameter Type Description newRespawnTime int \u0026mdash; float GetMatchTimeDilation() void SetMatchTimeDilation(float newMatchTimeDilation) Parameter Type Description newMatchTimeDilation float \u0026mdash; PlayerControllerWrapper GetActivator() void SetActivator(PlayerControllerWrapper newActivator) Parameter Type Description newActivator PlayerControllerWrapper \u0026mdash; CarWrapper GetActivatorCar() void SetActivatorCar(CarWrapper newActivatorCar) Parameter Type Description newActivatorCar CarWrapper \u0026mdash; ArrayWrapper GetPlayers() ArrayWrapper GetPRIs() ArrayWrapper GetCars() ArrayWrapper GetLocalPlayers() int GetStartPointIndex() void SetStartPointIndex(int newStartPointIndex) Parameter Type Description newStartPointIndex int \u0026mdash; int GetGameStateTimeRemaining() void SetGameStateTimeRemaining(int newGameStateTimeRemaining) Parameter Type Description newGameStateTimeRemaining int \u0026mdash; int GetReplicatedGameStateTimeRemaining() void SetReplicatedGameStateTimeRemaining(int newReplicatedGameStateTimeRemaining) Parameter Type Description newReplicatedGameStateTimeRemaining int \u0026mdash; float GetBotBoostThreshold_vsAI() void SetBotBoostThreshold_vsAI(float newBotBoostThreshold_vsAI) Parameter Type Description newBotBoostThreshold_vsAI float \u0026mdash; StructArrayWrapper GetForfeitInitiatorIDs() StructArrayWrapper GetBannedPlayers() PriWrapper GetGameOwner() void SetGameOwner(PriWrapper newGameOwner) Parameter Type Description newGameOwner PriWrapper \u0026mdash; UnrealStringWrapper GetRichPresenceString() int GetReplicatedRoundCountDownNumber() void SetReplicatedRoundCountDownNumber(int newReplicatedRoundCountDownNumber) Parameter Type Description newReplicatedRoundCountDownNumber int \u0026mdash; void InitCountDown() void StartCountdownTimer() void AllowReadyUp2() PriWrapper FindPlayerPRI(SteamID \u0026amp;UniqueId) Parameter Type Description UniqueId SteamID \u0026mdash; void HandlePlayerRemoved(GameEventWrapper GameEvent, PriWrapper PRI) Parameter Type Description GameEvent GameEventWrapper \u0026mdash; PRI PriWrapper \u0026mdash; void UpdateGameOwner() void SetGameOwner2(PriWrapper NewOwner) Parameter Type Description NewOwner PriWrapper \u0026mdash; void __GameEvent_TA__SetAllowReadyUp(PriWrapper P) Parameter Type Description P PriWrapper \u0026mdash; bool __GameEvent_TA__CheckPlayersReady(PriWrapper P) Parameter Type Description P PriWrapper \u0026mdash; SteamID __GameEvent_TA__CheckForBannedPlayers(PriWrapper PRI) Parameter Type Description PRI PriWrapper \u0026mdash; void __Pylon__ChangeNotifyFunc() void PlayerResetTraining() bool SuppressModalDialogs() bool ShouldShowBallIndicator() void CheckInitiatedForfeit(PriWrapper PRI) Parameter Type Description PRI PriWrapper \u0026mdash; void CheckChatBanned(PlayerControllerWrapper PC) Parameter Type Description PC PlayerControllerWrapper \u0026mdash; PlayerControllerWrapper FindPCForUniqueID(SteamID \u0026amp;PlayerID) Parameter Type Description PlayerID SteamID \u0026mdash; bool AllowSplitScreenPlayer() void AddPlayerChatMessage(SteamID \u0026amp;PlayerID, unsigned char ChatChannel, TeamInfoWrapper Team, std::string Message) Parameter Type Description PlayerID SteamID \u0026mdash; ChatChannel unsigned char \u0026mdash; Team TeamInfoWrapper \u0026mdash; Message std::string \u0026mdash; void ConditionalStartSpectatorMatch() bool IsPlayingTraining() bool IsPlayingLan() bool IsPlayingOffline() bool IsPlayingPrivate() bool IsPlayingPublic() bool IsOnlineMultiplayer() void CreateMatchType(std::string Options) Parameter Type Description Options std::string \u0026mdash; bool AllPlayersSelectedTeam() bool CanQueSaveReplay() void ForceMatchStart() void ConditionalStartMatch() void SaveLocalPlayerStats() bool CanUseBallCam() bool HandleNextGame() void SetMaxPlayers2(int InMaxPlayers) Parameter Type Description InMaxPlayers int \u0026mdash; void SetRestartingMatch(unsigned long bRestart) Parameter Type Description bRestart unsigned long \u0026mdash; bool ShouldBeFullScreen() bool IsFinished() void OnAllPlayersReady() void CheckPlayersReady2() void SetAllowReadyUp2(unsigned long bAllow) Parameter Type Description bAllow unsigned long \u0026mdash; void AutoReadyPlayers() bool ShouldAutoReadyUp(PriWrapper PRI) Parameter Type Description PRI PriWrapper \u0026mdash; void SendGoMessage(PlayerControllerWrapper Player) Parameter Type Description Player PlayerControllerWrapper \u0026mdash; void SendCountdownMessage(int Seconds, PlayerControllerWrapper Player) Parameter Type Description Seconds int \u0026mdash; Player PlayerControllerWrapper \u0026mdash; void BroadcastCountdownMessage(int Seconds) Parameter Type Description Seconds int \u0026mdash; void BroadcastGoMessage() bool AllowShutdown() float GetRealDeltaTime(float ElapsedTime) Parameter Type Description ElapsedTime float \u0026mdash; void SetTimeDilation(float NewTimeDilation) Parameter Type Description NewTimeDilation float \u0026mdash; void ClearRespawnList() void ReplaceBotsWithAwaitingPlayers() int GetRespawnTime2() void RemoveCar(CarWrapper Car) Parameter Type Description Car CarWrapper \u0026mdash; void AddCar(CarWrapper Car) Parameter Type Description Car CarWrapper \u0026mdash; void TickRespawnTime(float DeltaTime) Parameter Type Description DeltaTime float \u0026mdash; void SetBotSkill2(float NewSkill) Parameter Type Description NewSkill float \u0026mdash; PlayerControllerWrapper GetLocalPrimaryPlayer() bool HasPlayerNamed(std::string PlayerName) Parameter Type Description PlayerName std::string \u0026mdash; void RandomizeBots() bool MoveToGround(ActorWrapper Mover, float HeightCheck) Parameter Type Description Mover ActorWrapper \u0026mdash; HeightCheck float \u0026mdash; void SetAllDriving(unsigned long bDriving) Parameter Type Description bDriving unsigned long \u0026mdash; void OnFinished() void StartCountDown() void StartInitialCountDown() void OnGameStateTimeLapsed() void OnGameStateTimeUpdated() void UpdateGameStateTime() void SetGameStateTimeRemaining2(int StateTime, unsigned long bFromReplication) Parameter Type Description StateTime int \u0026mdash; bFromReplication unsigned long \u0026mdash; void SetGameStateTime2(int StateTime) Parameter Type Description StateTime int \u0026mdash; void OnPlayerRestarted(CarWrapper PlayerCar) Parameter Type Description PlayerCar CarWrapper \u0026mdash; void TeleportCar(CarWrapper PlayerCar) Parameter Type Description PlayerCar CarWrapper \u0026mdash; void OnCarSpawned(CarWrapper NewCar) Parameter Type Description NewCar CarWrapper \u0026mdash; bool SpotIsEncroached(Vector \u0026amp;Spot) Parameter Type Description Spot Vector \u0026mdash; void RandomizeSpawnPoints() void RestartPlayers() void RemoveLocalPlayer(PlayerControllerWrapper Player) Parameter Type Description Player PlayerControllerWrapper \u0026mdash; void AddLocalPlayer(PlayerControllerWrapper Player) Parameter Type Description Player PlayerControllerWrapper \u0026mdash; void RemovePRI(PriWrapper PRI) Parameter Type Description PRI PriWrapper \u0026mdash; void AddPRI(PriWrapper PRI) Parameter Type Description PRI PriWrapper \u0026mdash; void AddForfeitInitiator(SteamID \u0026amp;PlayerID) Parameter Type Description PlayerID SteamID \u0026mdash; void BanPlayerID(SteamID \u0026amp;PlayerID) Parameter Type Description PlayerID SteamID \u0026mdash; int GetMaxHumans() int GetNumHumans() bool FindBotReplacement(PriWrapper PRI) Parameter Type Description PRI PriWrapper \u0026mdash; void UpdateBotCount() void TimerUpdateBotCount() void InitBotSkill() void InitMutators() void HandleFinished(GameEventWrapper GameEvent) Parameter Type Description GameEvent GameEventWrapper \u0026mdash; void Init2(PlayerControllerWrapper InActivator) Parameter Type Description InActivator PlayerControllerWrapper \u0026mdash; void eventInitGame(std::string Options) Parameter Type Description Options std::string \u0026mdash; void OnGameStateChanged() void OnCanVoteForfeitChanged() void UpdateCanVoteToForfeit() bool ShouldAllowVoteToForfeit() void OnPenaltyChanged() void UpdateLeaveMatchPenalty() GameSettingPlaylistWrapper GetPlaylist() bool ShouldHaveLeaveMatchPenalty() void OnMatchSettingsChanged() void ClearGameScoreFromCustomSettings() void EventPlayerResetTraining(GameEventWrapper GameEvent) Parameter Type Description GameEvent GameEventWrapper \u0026mdash; "},{"id":85,"href":"/bakkesmod_api/Structs/Wrappers/GamepadSettings/","title":"GamepadSettings","parent":"Wrappers","content":" View Implementation A read-only copy of a player's gamepad settings. Get with SettingsWrapper.GetGamepadSettings()\nfloat ControllerDeadzone Default value: none\nfloat DodgeInputThreshold Default value: none\nfloat SteeringSensitivity Default value: none\nfloat AirControlSensitivity Default value: none\n"},{"id":86,"href":"/bakkesmod_api/Classes/Wrappers/GameEvent/GameSettingPlaylistWrapper/","title":"GameSettingPlaylistWrapper","parent":"Game Event","content":" View Implementation The current playlist. Most common usage here\n_NODISCARD bool IsNull() const operator bool() const std::string GetLocalizedName() std::string GetName() UnrealStringWrapper GetTitle() UnrealStringWrapper GetDescription() int GetPlayerCount() void SetPlayerCount(int newPlayerCount) Parameter Type Description newPlayerCount int \u0026mdash; unsigned long GetbStandard() void SetbStandard(unsigned long newbStandard) Parameter Type Description newbStandard unsigned long \u0026mdash; unsigned long GetbRanked() void SetbRanked(unsigned long newbRanked) Parameter Type Description newbRanked unsigned long \u0026mdash; unsigned long GetbSolo() void SetbSolo(unsigned long newbSolo) Parameter Type Description newbSolo unsigned long \u0026mdash; unsigned long GetbNew() void SetbNew(unsigned long newbNew) Parameter Type Description newbNew unsigned long \u0026mdash; unsigned long GetbApplyQuitPenalty() void SetbApplyQuitPenalty(unsigned long newbApplyQuitPenalty) Parameter Type Description newbApplyQuitPenalty unsigned long \u0026mdash; unsigned long GetbAllowForfeit() void SetbAllowForfeit(unsigned long newbAllowForfeit) Parameter Type Description newbAllowForfeit unsigned long \u0026mdash; unsigned long GetbDisableRankedReconnect() void SetbDisableRankedReconnect(unsigned long newbDisableRankedReconnect) Parameter Type Description newbDisableRankedReconnect unsigned long \u0026mdash; unsigned long GetbIgnoreAssignTeams() void SetbIgnoreAssignTeams(unsigned long newbIgnoreAssignTeams) Parameter Type Description newbIgnoreAssignTeams unsigned long \u0026mdash; unsigned long GetbKickOnMigrate() void SetbKickOnMigrate(unsigned long newbKickOnMigrate) Parameter Type Description newbKickOnMigrate unsigned long \u0026mdash; unsigned long GetbAllowClubs() void SetbAllowClubs(unsigned long newbAllowClubs) Parameter Type Description newbAllowClubs unsigned long \u0026mdash; unsigned long GetbPlayersVSBots() void SetbPlayersVSBots(unsigned long newbPlayersVSBots) Parameter Type Description newbPlayersVSBots unsigned long \u0026mdash; int GetPlaylistId() void SetPlaylistId(int newPlaylistId) Parameter Type Description newPlaylistId int \u0026mdash; UnrealStringWrapper GetServerCommand() bool IsLanMatch() bool IsPrivateMatch() bool IsTournamentMatch() bool ShouldUpdateSkills() bool IsValidID(int InPlaylistID) Parameter Type Description InPlaylistID int \u0026mdash; bool IsValid2() "},{"id":87,"href":"/bakkesmod_api/Classes/Wrappers/GameWrapper/","title":"GameWrapper","parent":"Wrappers","content":" View Implementation std::unique_ptr\u0026lt; Impl \u0026gt; pimpl GameWrapper(const GameWrapper \u0026amp;other) Parameter Type Description other GameWrapper \u0026mdash; GameWrapper operator=(GameWrapper rhs) Parameter Type Description rhs GameWrapper \u0026mdash; ~GameWrapper() bool IsInGame() bool IsInOnlineGame() bool IsInFreeplay() bool IsInReplay() bool IsInCustomTraining() bool IsSpectatingInOnlineGame() bool IsPaused() bool IsUsingEpicVersion() bool IsUsingSteamVersion() int GetSteamVersion() std::string GetPsyBuildID() ServerWrapper GetCurrentGameState() ServerWrapper GetOnlineGame() ServerWrapper GetGameEventAsServer() ReplayServerWrapper GetGameEventAsReplay() MMRWrapper GetMMRWrapper() CarWrapper GetLocalCar() CameraWrapper GetCamera() EngineTAWrapper GetEngine() PluginManagerWrapper GetPluginManager() GuiManagerWrapper GetGUIManager() PlayerControllerWrapper GetPlayerController() ItemsWrapper GetItemsWrapper() LoadoutSaveWrapper GetUserLoadoutSave() const MatchmakingWrapper GetMatchmakingWrapper() SettingsWrapper GetSettings() ReplayManagerWrapper GetReplayManagerWrapper() const MapListWrapper GetMapListWrapper() const ModalWrapper CreateModal(const std::string \u0026amp;title) Parameter Type Description title const std::string \u0026amp; \u0026mdash; TextInputModalWrapper CreateTextInputModal(const std::string \u0026amp;title) Parameter Type Description title const std::string \u0026amp; \u0026mdash; void OverrideParams(void *src, size_t memsize) Parameter Type Description src void * \u0026mdash; memsize size_t \u0026mdash; void SetTimeout(std::function\u0026lt; void(GameWrapper *)\u0026gt; theLambda, float time) Parameter Type Description theLambda GameWrapper \u0026mdash; time float \u0026mdash; void Execute(std::function\u0026lt; void(GameWrapper *)\u0026gt; theLambda) Parameter Type Description theLambda GameWrapper \u0026mdash; void RegisterDrawable(std::function\u0026lt; void(CanvasWrapper)\u0026gt; callback) Parameter Type Description callback CanvasWrapper \u0026mdash; void UnregisterDrawables() std::string GetFNameByIndex(int index) Parameter Type Description index int \u0026mdash; int GetFNameIndexByString(std::string name) Parameter Type Description name std::string \u0026mdash; void HookEvent(std::string eventName, std::function\u0026lt; void(std::string eventName)\u0026gt; callback) Parameter Type Description eventName std::string \u0026mdash; callback std::function\u0026lt; void(std::string eventName)\u0026gt; \u0026mdash; void UnhookEvent(std::string eventName) Parameter Type Description eventName std::string \u0026mdash; void HookEventPost(std::string eventName, std::function\u0026lt; void(std::string eventName)\u0026gt; callback) Parameter Type Description eventName std::string \u0026mdash; callback std::function\u0026lt; void(std::string eventName)\u0026gt; \u0026mdash; void UnhookEventPost(std::string eventName) Parameter Type Description eventName std::string \u0026mdash; void LogToChatbox(std::string text, std::string sender=\u0026ldquo;BAKKESMOD\u0026rdquo;) Parameter Type Description text std::string \u0026mdash; sender std::string \u0026mdash; void LoadToastTexture(std::string name, std::wstring path) Parameter Type Description name std::string \u0026mdash; path std::wstring \u0026mdash; void Toast(std::string title, std::string text, std::string texture=\u0026ldquo;default\u0026rdquo;, float timeout=3.5f, uint8_t toastType=0, float width=290.f, float height=60.f) Parameter Type Description title std::string \u0026mdash; text std::string \u0026mdash; texture std::string \u0026mdash; timeout float \u0026mdash; toastType uint8_t \u0026mdash; width float \u0026mdash; height float \u0026mdash; bool IsKeyPressed(int keyName) Parameter Type Description keyName int \u0026mdash; int IsCursorVisible() void ExecuteUnrealCommand(std::string command) Parameter Type Description command std::string \u0026mdash; std::string GetRandomMap() std::string GetCurrentMap() unsigned long long GetSteamID() std::string GetEpicID() UniqueIDWrapper GetUniqueID() UnrealStringWrapper GetPlayerName() ClubDetailsWrapper GetLocalClub() SequenceWrapper GetMainSequence() GfxDataTrainingWrapper GetGfxTrainingData() const MenuStackWrapper GetMenuStack() const void SetBotLoadout(PriWrapper \u0026amp;bot_pri, const struct BotLoadoutData \u0026amp;loadout_data) Parameter Type Description bot_pri PriWrapper \u0026mdash; loadout_data BotLoadoutData \u0026mdash; Vector2 GetScreenSize() float GetDisplayScale() float GetInterfaceScale() float GetSafeZoneRatio() float GetUIScale() unsigned int GetbMetric() UnrealStringWrapper GetUILanguage() bool GetbColorBlind() std::wstring GetBakkesModPathW() std::wstring GetDataFolderW() int GetBakkesModVersion() void PlayReplay(const std::wstring \u0026amp;path) Parameter Type Description path const std::wstring \u0026amp; \u0026mdash; void PlayReplayFromTime(const std::wstring \u0026amp;path, float time) Parameter Type Description path const std::wstring \u0026amp; \u0026mdash; time float \u0026mdash; void HookEventWithCaller(std::string eventName, std::function\u0026lt; void(T caller, void *params, std::string eventName)\u0026gt; callback) Parameter Type Description eventName std::string \u0026mdash; callback std::function\u0026lt; void(T caller, void *params, std::string eventName)\u0026gt; \u0026mdash; void HookEventWithCallerPost(std::string eventName, std::function\u0026lt; void(T caller, void *params, std::string eventName)\u0026gt; callback) Parameter Type Description eventName std::string \u0026mdash; callback std::function\u0026lt; void(T caller, void *params, std::string eventName)\u0026gt; \u0026mdash; "},{"id":88,"href":"/bakkesmod_api/Classes/Wrappers/Gfx/GfxDataTrainingWrapper/","title":"GfxDataTrainingWrapper","parent":"Gfx","content":" View Implementation operator bool() bool IsNull() bool CanUseMirroring() bool CanUsePlaylistOverride() bool CanUseShuffle() bool CanUseTrainingUIV2() bool HasCompletedTraining(const std::string \u0026amp;inType, const std::string \u0026amp;inDifficulty) Parameter Type Description inType const std::string \u0026amp; \u0026mdash; inDifficulty const std::string \u0026amp; \u0026mdash; bool HasCompletedTutorial(int InType) Parameter Type Description InType int \u0026mdash; bool HasPerfectedTraining(const std::string \u0026amp;inType, const std::string \u0026amp;inDifficulty) Parameter Type Description inType const std::string \u0026amp; \u0026mdash; inDifficulty const std::string \u0026amp; \u0026mdash; bool UpdateDataFromProgress() void EndTrainingEditorPlaytest() void eventOnRemoved() void eventOnShellSet() void PlayFreeplayMap(const std::string \u0026amp;Map) Parameter Type Description Map const std::string \u0026amp; \u0026mdash; void PlayTraining(const std::string \u0026amp;Type, const std::string \u0026amp;trainingDifficulty) Parameter Type Description Type const std::string \u0026amp; \u0026mdash; trainingDifficulty const std::string \u0026amp; \u0026mdash; void PlayTutorial(bool bAdvanced) Parameter Type Description bAdvanced bool \u0026mdash; void PlayV2Tutorial(int type, bool bAutoEntered) Parameter Type Description type int \u0026mdash; bAutoEntered bool \u0026mdash; void ResetTrainingProgress() void SetCurrentPlaylist(const std::string \u0026amp;playlist) Parameter Type Description playlist const std::string \u0026amp; \u0026mdash; void SetTrainingEditorGameEvent(TrainingEditorWrapper inGameEvent) Parameter Type Description inGameEvent TrainingEditorWrapper \u0026mdash; void SetTrainingGameEvent(TutorialWrapper inGameEvent) Parameter Type Description inGameEvent TutorialWrapper \u0026mdash; void StartAtPlaylistIndex(int inPlaylistIndex) Parameter Type Description inPlaylistIndex int \u0026mdash; std::string GetTrainingType() int GetCurrentScore() int GetCurrentRound() int GetTotalRounds() UnrealStringWrapper GetDifficulty() std::string GetSelectedFreeplayMap() UnrealStringWrapper GetTutorialTip() StructArrayWrapper GetProgressPerShot() int GetCurrentPlaylistindex() "},{"id":89,"href":"/bakkesmod_api/Classes/Wrappers/Items/GfxProductsWrapper/","title":"GfxProductsWrapper","parent":"Items","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const ArrayWrapper GetLoadingProducs() const "},{"id":90,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/GoalHoopsWrapper/","title":"GoalHoopsWrapper","parent":"Game Object","content":" View Implementation ActorWrapper GetBackboard() float GetRadius() Vector GetBackboardLocation() Vector GetBackboardDirection() "},{"id":91,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/GoalWrapper/","title":"GoalWrapper","parent":"Game Object","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const ActorWrapper GetGoalOrientation() void SetGoalOrientation(ActorWrapper newGoalOrientation) Parameter Type Description newGoalOrientation ActorWrapper \u0026mdash; ArrayWrapper GetOverrideGoalIndicatorOrientations() unsigned char GetTeamNum() void SetTeamNum(unsigned char newTeamNum) Parameter Type Description newTeamNum unsigned char \u0026mdash; FXActorWrapper GetScoreFX() void SetScoreFX(FXActorWrapper newScoreFX) Parameter Type Description newScoreFX FXActorWrapper \u0026mdash; UnrealStringWrapper GetGoalIndicatorArchetype() unsigned long GetbNoGoalIndicator() void SetbNoGoalIndicator(unsigned long newbNoGoalIndicator) Parameter Type Description newbNoGoalIndicator unsigned long \u0026mdash; unsigned long GetbOnlyGoalsFromDirection() void SetbOnlyGoalsFromDirection(unsigned long newbOnlyGoalsFromDirection) Parameter Type Description newbOnlyGoalsFromDirection unsigned long \u0026mdash; unsigned long GetbShowFocusExtent() void SetbShowFocusExtent(unsigned long newbShowFocusExtent) Parameter Type Description newbShowFocusExtent unsigned long \u0026mdash; ActorWrapper GetGoalDirection() void SetGoalDirection(ActorWrapper newGoalDirection) Parameter Type Description newGoalDirection ActorWrapper \u0026mdash; int GetPointsToAward() void SetPointsToAward(int newPointsToAward) Parameter Type Description newPointsToAward int \u0026mdash; Vector GetAutoCamFocusExtent() void SetAutoCamFocusExtent(Vector newAutoCamFocusExtent) Parameter Type Description newAutoCamFocusExtent Vector \u0026mdash; Vector GetGoalFocusLocationOffset() void SetGoalFocusLocationOffset(Vector newGoalFocusLocationOffset) Parameter Type Description newGoalFocusLocationOffset Vector \u0026mdash; float GetMaxGoalScorerAttachRadius() void SetMaxGoalScorerAttachRadius(float newMaxGoalScorerAttachRadius) Parameter Type Description newMaxGoalScorerAttachRadius float \u0026mdash; Vector GetGoalScoredDotDirection() void SetGoalScoredDotDirection(Vector newGoalScoredDotDirection) Parameter Type Description newGoalScoredDotDirection Vector \u0026mdash; float GetMinAttachGoalToScorerDot() void SetMinAttachGoalToScorerDot(float newMinAttachGoalToScorerDot) Parameter Type Description newMinAttachGoalToScorerDot float \u0026mdash; Vector GetLocation() void SetLocation(Vector newLocation) Parameter Type Description newLocation Vector \u0026mdash; Vector GetDirection() void SetDirection(Vector newDirection) Parameter Type Description newDirection Vector \u0026mdash; Vector GetRight() void SetRight(Vector newRight) Parameter Type Description newRight Vector \u0026mdash; Vector GetUp() void SetUp(Vector newUp) Parameter Type Description newUp Vector \u0026mdash; Rotator GetRotation() void SetRotation(Rotator newRotation) Parameter Type Description newRotation Rotator \u0026mdash; Vector GetLocalExtent() void SetLocalExtent(Vector newLocalExtent) Parameter Type Description newLocalExtent Vector \u0026mdash; Vector GetWorldCenter() void SetWorldCenter(Vector newWorldCenter) Parameter Type Description newWorldCenter Vector \u0026mdash; Vector GetWorldExtent() void SetWorldExtent(Vector newWorldExtent) Parameter Type Description newWorldExtent Vector \u0026mdash; Vector GetWorldFrontCenter() void SetWorldFrontCenter(Vector newWorldFrontCenter) Parameter Type Description newWorldFrontCenter Vector \u0026mdash; Vector GetGoalFocusExtentCenter() void Init() void eventBeginPlay() "},{"id":92,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/GrapplingHookPickup/","title":"GrapplingHookPickup","parent":"Rumble Component","content":" View Implementation float GetImpulse() void SetImpulse(float newImpulse) Parameter Type Description newImpulse float \u0026mdash; float GetForce() void SetForce(float newForce) Parameter Type Description newForce float \u0026mdash; float GetMaxRopeLength() void SetMaxRopeLength(float newMaxRopeLength) Parameter Type Description newMaxRopeLength float \u0026mdash; float GetPredictionSpeed() void SetPredictionSpeed(float newPredictionSpeed) Parameter Type Description newPredictionSpeed float \u0026mdash; unsigned long GetbDeactivateOnTouch() void SetbDeactivateOnTouch(unsigned long newbDeactivateOnTouch) Parameter Type Description newbDeactivateOnTouch unsigned long \u0026mdash; unsigned long GetbInstant() void SetbInstant(unsigned long newbInstant) Parameter Type Description newbInstant unsigned long \u0026mdash; unsigned long GetbBlocked() void SetbBlocked(unsigned long newbBlocked) Parameter Type Description newbBlocked unsigned long \u0026mdash; unsigned long GetbAttachedToBall() void SetbAttachedToBall(unsigned long newbAttachedToBall) Parameter Type Description newbAttachedToBall unsigned long \u0026mdash; Vector GetRopeMeshScale() void SetRopeMeshScale(Vector newRopeMeshScale) Parameter Type Description newRopeMeshScale Vector \u0026mdash; float GetRopeMeshInitialSize() void SetRopeMeshInitialSize(float newRopeMeshInitialSize) Parameter Type Description newRopeMeshInitialSize float \u0026mdash; Rotator GetRopeRotationOffset() void SetRopeRotationOffset(Rotator newRopeRotationOffset) Parameter Type Description newRopeRotationOffset Rotator \u0026mdash; Vector GetHookMeshScale() void SetHookMeshScale(Vector newHookMeshScale) Parameter Type Description newHookMeshScale Vector \u0026mdash; Vector GetHookMeshOffset() void SetHookMeshOffset(Vector newHookMeshOffset) Parameter Type Description newHookMeshOffset Vector \u0026mdash; Rotator GetHookRotationOffset() void SetHookRotationOffset(Rotator newHookRotationOffset) Parameter Type Description newHookRotationOffset Rotator \u0026mdash; float GetHitDistanceOffset() void SetHitDistanceOffset(float newHitDistanceOffset) Parameter Type Description newHitDistanceOffset float \u0026mdash; float GetAfterAttachDuration() void SetAfterAttachDuration(float newAfterAttachDuration) Parameter Type Description newAfterAttachDuration float \u0026mdash; float GetBlockedRequiredMoveDistance() void SetBlockedRequiredMoveDistance(float newBlockedRequiredMoveDistance) Parameter Type Description newBlockedRequiredMoveDistance float \u0026mdash; float GetBlockedRequiredMoveTime() void SetBlockedRequiredMoveTime(float newBlockedRequiredMoveTime) Parameter Type Description newBlockedRequiredMoveTime float \u0026mdash; float GetBlockedStartTime() void SetBlockedStartTime(float newBlockedStartTime) Parameter Type Description newBlockedStartTime float \u0026mdash; Vector GetBlockedStartPos() void SetBlockedStartPos(Vector newBlockedStartPos) Parameter Type Description newBlockedStartPos Vector \u0026mdash; BallWrapper GetBall() void SetBall(BallWrapper newBall) Parameter Type Description newBall BallWrapper \u0026mdash; Vector GetRopeOrigin() void SetRopeOrigin(Vector newRopeOrigin) Parameter Type Description newRopeOrigin Vector \u0026mdash; float GetRopeToTime() void SetRopeToTime(float newRopeToTime) Parameter Type Description newRopeToTime float \u0026mdash; float GetCurrentRopeLength() void SetCurrentRopeLength(float newCurrentRopeLength) Parameter Type Description newCurrentRopeLength float \u0026mdash; float GetAttachTime() void SetAttachTime(float newAttachTime) Parameter Type Description newAttachTime float \u0026mdash; void HandleBallExploded(BallWrapper InBall) Parameter Type Description InBall BallWrapper \u0026mdash; void PickupEnd() void ScaleMeshToLocation(Vector \u0026amp;NewLocation, Vector \u0026amp;TargetLocation) Parameter Type Description NewLocation Vector \u0026mdash; TargetLocation Vector \u0026mdash; Vector GetPredictedBallLocation(BallWrapper InBall) Parameter Type Description InBall BallWrapper \u0026mdash; Vector GetTargetedLocation() void UpdateVisual(float DeltaTime) Parameter Type Description DeltaTime float \u0026mdash; void PickupTick(float DeltaTime) Parameter Type Description DeltaTime float \u0026mdash; void ApplyForces(float ActiveTime) Parameter Type Description ActiveTime float \u0026mdash; void DoAttach() void PickupStart() "},{"id":93,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/GravityPickup/","title":"GravityPickup","parent":"Rumble Component","content":" View Implementation float GetBallGravity() void SetBallGravity(float newBallGravity) Parameter Type Description newBallGravity float \u0026mdash; float GetRange() void SetRange(float newRange) Parameter Type Description newRange float \u0026mdash; Vector GetOffset() void SetOffset(Vector newOffset) Parameter Type Description newOffset Vector \u0026mdash; unsigned long GetbDeactivateOnTouch() void SetbDeactivateOnTouch(unsigned long newbDeactivateOnTouch) Parameter Type Description newbDeactivateOnTouch unsigned long \u0026mdash; float GetRecordBallHitRate() void SetRecordBallHitRate(float newRecordBallHitRate) Parameter Type Description newRecordBallHitRate float \u0026mdash; float GetLastRecordedBallHitTime() void SetLastRecordedBallHitTime(float newLastRecordedBallHitTime) Parameter Type Description newLastRecordedBallHitTime float \u0026mdash; BallWrapper GetPrevBall() void SetPrevBall(BallWrapper newPrevBall) Parameter Type Description newPrevBall BallWrapper \u0026mdash; void UpdateVisual() void ApplyForces(float ActiveTime) Parameter Type Description ActiveTime float \u0026mdash; void PickupEnd() void PickupStart() "},{"id":94,"href":"/bakkesmod_api/Structs/Wrappers/GUIDWrapper/","title":"GUIDWrapper","parent":"Wrappers","content":" View Implementation Wraps a read-only copy of a GUI menu's ID. Not 100% sure on the use case\nEGuidFormats Digits = 0\nDigitsWithHyphens = 1\nDigitsWithHyphensInBraces = 2\nDigitsWithHyphensInParentheses = 3\nHexValuesInBraces = 4\nUniqueObjectGuid = 5\nint32_t A Default value = 0\nint32_t B Default value = 0\nint32_t C Default value = 0\nint32_t D Default value = 0\n"},{"id":95,"href":"/bakkesmod_api/Classes/Wrappers/GuiManagerWrapper/","title":"GuiManagerWrapper","parent":"Wrappers","content":" View Implementation CONSTRUCTORS(GuiManagerWrapper) Parameter Type Description GuiManagerWrapper \u0026mdash; void * GetImGuiStyle() std::tuple\u0026lt; int, ImFont * \u0026gt; LoadFont(std::string name, std::string path, int size, const ImFontConfig *=nullptr, const ImWchar *=nullptr) Parameter Type Description name std::string \u0026mdash; path std::string \u0026mdash; size int \u0026mdash; const ImFontConfig * \u0026mdash; const ImWchar * \u0026mdash; ImFont * GetFont(std::string name) Parameter Type Description name std::string \u0026mdash; "},{"id":96,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/HandbrakeOverridePickup/","title":"HandbrakeOverridePickup","parent":"Rumble Component","content":" View Implementation CarWrapper GetOtherCar() void SetOtherCar(CarWrapper newOtherCar) Parameter Type Description newOtherCar CarWrapper \u0026mdash; void PickupEnd() void PickupStart() "},{"id":97,"href":"/bakkesmod_api/Structs/Core/Highlight/","title":"Highlight","parent":"Core","content":" View Implementation int frame Default value: none\nint car_name_index Default value: none\nint ball_name_index Default value: none\nint goal_actor_name_index Default value: none\n"},{"id":98,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/HitForcePickup/","title":"HitForcePickup","parent":"Rumble Component","content":" View Implementation unsigned long GetbBallForce() void SetbBallForce(unsigned long newbBallForce) Parameter Type Description newbBallForce unsigned long \u0026mdash; unsigned long GetbCarForce() void SetbCarForce(unsigned long newbCarForce) Parameter Type Description newbCarForce unsigned long \u0026mdash; unsigned long GetbDemolishCars() void SetbDemolishCars(unsigned long newbDemolishCars) Parameter Type Description newbDemolishCars unsigned long \u0026mdash; float GetBallHitForce() void SetBallHitForce(float newBallHitForce) Parameter Type Description newBallHitForce float \u0026mdash; float GetCarHitForce() void SetCarHitForce(float newCarHitForce) Parameter Type Description newCarHitForce float \u0026mdash; float GetMinFXTime() void SetMinFXTime(float newMinFXTime) Parameter Type Description newMinFXTime float \u0026mdash; float GetOrigBallHitForce() void SetOrigBallHitForce(float newOrigBallHitForce) Parameter Type Description newOrigBallHitForce float \u0026mdash; float GetOrigCarHitForce() void SetOrigCarHitForce(float newOrigCarHitForce) Parameter Type Description newOrigCarHitForce float \u0026mdash; float GetLastFXTime() void SetLastFXTime(float newLastFXTime) Parameter Type Description newLastFXTime float \u0026mdash; void PickupEnd() void PickupStart() "},{"id":99,"href":"/bakkesmod_api/Classes/Wrappers/Http/HttpWrapper/","title":"HttpWrapper","parent":"HTTP","content":" View Implementation void SendCurlRequest(CurlRequest request_data, const std::wstring \u0026amp;file_output, CurlRequestDoneFileReturn on_complete) Parameter Type Description request_data CurlRequest \u0026mdash; file_output const std::wstring \u0026amp; \u0026mdash; on_complete CurlRequestDoneFileReturn \u0026mdash; void SendCurlJsonRequest(CurlRequest request_data, CurlRequestDoneStringReturn on_complete) Parameter Type Description request_data CurlRequest \u0026mdash; on_complete CurlRequestDoneStringReturn \u0026mdash; "},{"id":100,"href":"/bakkesmod_api/Classes/Wrappers/ImageWrapper/","title":"ImageWrapper","parent":"Wrappers","content":" View Implementation ImageWrapper(const ImageWrapper \u0026amp;)=delete Parameter Type Description ImageWrapper \u0026mdash; ImageWrapper operator=(const ImageWrapper \u0026amp;)=delete Parameter Type Description ImageWrapper \u0026mdash; ~ImageWrapper() bool LoadForCanvas() bool IsLoadedForCanvas() void * GetCanvasTex() void LoadForImGui(std::function\u0026lt; void(bool)\u0026gt; onLoaded) Parameter Type Description onLoaded std::function\u0026lt; void(bool)\u0026gt; \u0026mdash; bool IsLoadedForImGui() void * GetImGuiTex() std::string GetPath() std::wstring GetPathW() Vector2 GetSize() Vector2F GetSizeF() "},{"id":101,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/PerformanceStats/InputBufferGraphWrapper/","title":"InputBufferGraphWrapper","parent":"Performance Stats","content":" View Implementation SampleHistoryWrapper GetBuffer() void SetBuffer(SampleHistoryWrapper newBuffer) Parameter Type Description newBuffer SampleHistoryWrapper \u0026mdash; SampleHistoryWrapper GetBufferTarget() void SetBufferTarget(SampleHistoryWrapper newBufferTarget) Parameter Type Description newBufferTarget SampleHistoryWrapper \u0026mdash; SampleHistoryWrapper GetOverUnderFrames() void SetOverUnderFrames(SampleHistoryWrapper newOverUnderFrames) Parameter Type Description newOverUnderFrames SampleHistoryWrapper \u0026mdash; SampleHistoryWrapper GetPhysicsRate() void SetPhysicsRate(SampleHistoryWrapper newPhysicsRate) Parameter Type Description newPhysicsRate SampleHistoryWrapper \u0026mdash; float GetMaxPhysicsRate() void SetMaxPhysicsRate(float newMaxPhysicsRate) Parameter Type Description newMaxPhysicsRate float \u0026mdash; float GetMinPhysicsRate() void SetMinPhysicsRate(float newMinPhysicsRate) Parameter Type Description newMinPhysicsRate float \u0026mdash; SampleHistoryWrapper CreateBufferHistory(std::string Title) Parameter Type Description Title std::string \u0026mdash; void eventConstruct() "},{"id":102,"href":"/bakkesmod_api/Classes/Wrappers/Items/ItemsWrapper/","title":"ItemsWrapper","parent":"Items","content":" View Implementation ItemsWrapper(const ItemsWrapper \u0026amp;other) Parameter Type Description other ItemsWrapper \u0026mdash; ItemsWrapper operator=(ItemsWrapper rhs) Parameter Type Description rhs ItemsWrapper \u0026mdash; ~ItemsWrapper() bool IsNull() operator bool() ArrayWrapper GetAllProducts() ArrayWrapper GetAllProductSlots() ProductWrapper GetProduct(int productId) Parameter Type Description productId int \u0026mdash; OnlineProductWrapper GetOnlineProduct(const ProductInstanceID \u0026amp;product_instance_id) const Parameter Type Description product_instance_id ProductInstanceID \u0026mdash; ArrayWrapper GetUnlockedProducts() ArrayWrapper GetCachedUnlockedProducts() ArrayWrapper GetOwnedProducts() CertifiedStatDatabaseWrapper GetCertifiedStatDB() DataAssetDatabase_ESportsTeamWrapper GetEsportTeamDB() PaintDatabaseWrapper GetPaintDB() SpecialEditionDatabaseWrapper GetSpecialEditionDB() UnrealStringWrapper GetCurrentLoadoutName() LoadoutWrapper GetCurrentLoadout(int teamIndex) Parameter Type Description teamIndex int \u0026mdash; TradeWrapper GetTradeWrapper() ProductTradeInWrapper GetProductTradeInWrapper() GfxProductsWrapper GetGfxProductsWrapper() _NODISCARD bool IsOnlineID(const ProductInstanceID \u0026amp;product_instance_id) Parameter Type Description product_instance_id ProductInstanceID \u0026mdash; _NODISCARD int GetProductIdFromInstanceId(const ProductInstanceID \u0026amp;product_instance_id) Parameter Type Description product_instance_id ProductInstanceID \u0026mdash; "},{"id":103,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/CarComponent/JumpComponentWrapper/","title":"JumpComponentWrapper","parent":"Car Component","content":" View Implementation float GetMinJumpTime() void SetMinJumpTime(float newMinJumpTime) Parameter Type Description newMinJumpTime float \u0026mdash; float GetJumpImpulse() void SetJumpImpulse(float newJumpImpulse) Parameter Type Description newJumpImpulse float \u0026mdash; float GetJumpForce() void SetJumpForce(float newJumpForce) Parameter Type Description newJumpForce float \u0026mdash; float GetJumpForceTime() void SetJumpForceTime(float newJumpForceTime) Parameter Type Description newJumpForceTime float \u0026mdash; float GetPodiumJumpForceTime() void SetPodiumJumpForceTime(float newPodiumJumpForceTime) Parameter Type Description newPodiumJumpForceTime float \u0026mdash; float GetJumpImpulseSpeed() void SetJumpImpulseSpeed(float newJumpImpulseSpeed) Parameter Type Description newJumpImpulseSpeed float \u0026mdash; float GetJumpAccel() void SetJumpAccel(float newJumpAccel) Parameter Type Description newJumpAccel float \u0026mdash; float GetMaxJumpHeight() void SetMaxJumpHeight(float newMaxJumpHeight) Parameter Type Description newMaxJumpHeight float \u0026mdash; float GetMaxJumpHeightTime() void SetMaxJumpHeightTime(float newMaxJumpHeightTime) Parameter Type Description newMaxJumpHeightTime float \u0026mdash; unsigned long GetbDeactivate() void SetbDeactivate(unsigned long newbDeactivate) Parameter Type Description newbDeactivate unsigned long \u0026mdash; void ApplyForces(float ActiveTime) Parameter Type Description ActiveTime float \u0026mdash; void CacheJumpData() void OnCreated() "},{"id":104,"href":"/bakkesmod_api/Structs/Wrappers/LinearColor/","title":"LinearColor","parent":"Wrappers","content":" View Implementation RGBA value to change the color of the Canvas. Values from 0.0-1.0 for each with 1 being 100% intensity. A is for alpha and is opacity. A = 1.0 will be fully opaque\nfloat R Default value: none\nfloat G Default value: none\nfloat B Default value: none\nfloat A Default value: none\n"},{"id":105,"href":"/bakkesmod_api/Classes/Wrappers/Items/LoadingProductWrapper/","title":"LoadingProductWrapper","parent":"Items","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const _NODISCARD int GetProductId() const _NODISCARD int GetProductHashId() const ArrayWrapper GetReferencedViews() const OnlineProductWrapper GetOnlineProduct() const "},{"id":106,"href":"/bakkesmod_api/Classes/Wrappers/Items/LoadoutSaveWrapper/","title":"LoadoutSaveWrapper","parent":"Items","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const LoadoutSetWrapper GetPreset(int index) const Parameter Type Description index int \u0026mdash; ArrayWrapper GetPresets() const void SetPreviewTeam(int team) Parameter Type Description team int \u0026mdash; _NODISCARD int GetPreviewTeam() const LoadoutSetWrapper GetEquippedLoadout() const void RenamePreset(const LoadoutSetWrapper \u0026amp;preset_wrapper, const std::string \u0026amp;new_name) Parameter Type Description preset_wrapper LoadoutSetWrapper \u0026mdash; new_name const std::string \u0026amp; \u0026mdash; void EquipPreset(const LoadoutSetWrapper \u0026amp;preset) const Parameter Type Description preset LoadoutSetWrapper \u0026mdash; void DeletePreset(const LoadoutSetWrapper \u0026amp;preset_wrapper) Parameter Type Description preset_wrapper LoadoutSetWrapper \u0026mdash; LoadoutSetWrapper AddPreset() void SwapPreset(const LoadoutSetWrapper \u0026amp;a, const LoadoutSetWrapper \u0026amp;b) Parameter Type Description a LoadoutSetWrapper \u0026mdash; b LoadoutSetWrapper \u0026mdash; _NODISCARD int GetIndex(const LoadoutSetWrapper \u0026amp;preset_wrapper) const Parameter Type Description preset_wrapper LoadoutSetWrapper \u0026mdash; "},{"id":107,"href":"/bakkesmod_api/Structs/Wrappers/Items/LoadoutSetData/","title":"LoadoutSetData","parent":"Items","content":" View Implementation LoadoutWrapper blue Default value: none\nLoadoutWrapper orange Default value: none\n"},{"id":108,"href":"/bakkesmod_api/Classes/Wrappers/Items/LoadoutSetWrapper/","title":"LoadoutSetWrapper","parent":"Items","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const void CopyFrom(const LoadoutSetWrapper \u0026amp;other) Parameter Type Description other LoadoutSetWrapper \u0026mdash; _NODISCARD std::string GetName() const void Rename(const std::string \u0026amp;new_name) Parameter Type Description new_name const std::string \u0026amp; \u0026mdash; void EquipProduct(const ProductInstanceID \u0026amp;instance_id, int slot_id, int team) Parameter Type Description instance_id ProductInstanceID \u0026mdash; slot_id int \u0026mdash; team int \u0026mdash; LoadoutSetData GetLoadoutData() const "},{"id":109,"href":"/bakkesmod_api/Classes/Utilities/LoadoutUtilities/","title":"LoadoutUtilities","parent":"Utilities","content":" View Implementation void SetLoadoutItems(const PriWrapper \u0026amp;pri_wrapper, const pluginsdk::ItemDataMap \u0026amp;loadout) Parameter Type Description pri_wrapper PriWrapper \u0026mdash; loadout pluginsdk::ItemDataMap \u0026mdash; void SetCarProductAttributes(const CarWrapper \u0026amp;car_wrapper, const pluginsdk::ItemDataMap \u0026amp;loadout) Parameter Type Description car_wrapper CarWrapper \u0026mdash; loadout pluginsdk::ItemDataMap \u0026mdash; void SetLoadoutPaintFinishColors(const CarWrapper \u0026amp;car_wrapper, const pluginsdk::CarColors \u0026amp;paint_finish) Parameter Type Description car_wrapper CarWrapper \u0026mdash; paint_finish pluginsdk::CarColors \u0026mdash; void ForceSetLoadout(const PriWrapper \u0026amp;pri_wrapper, const pluginsdk::Loadout \u0026amp;loadout) Parameter Type Description pri_wrapper PriWrapper \u0026mdash; loadout pluginsdk::Loadout \u0026mdash; pluginsdk::CarColors GetPaintFinishColors(const CarWrapper \u0026amp;car_wrapper) Parameter Type Description car_wrapper CarWrapper \u0026mdash; pluginsdk::Loadout GetLoadoutFromPri(const PriWrapper \u0026amp;pri_wrapper, int team_index) Parameter Type Description pri_wrapper PriWrapper \u0026mdash; team_index int \u0026mdash; pluginsdk::PaintFinishColor GetBlueColorSet() pluginsdk::PaintFinishColor GetOrangeColorSet() pluginsdk::PaintFinishColor GetCustomColorSet() "},{"id":110,"href":"/bakkesmod_api/Classes/Wrappers/Items/LoadoutWrapper/","title":"LoadoutWrapper","parent":"Items","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const ArrayWrapper GetLoadout() ArrayWrapper GetOnlineLoadout() ProductInstanceID GetOnlineLoadoutV2() const unsigned char GetPrimaryPaintColorId() unsigned char GetAccentPaintColorId() int GetPrimaryFinishId() int GetAccentFinishId() "},{"id":111,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/MapDataWrapper/","title":"MapDataWrapper","parent":"Game Object","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const _NODISCARD std::string GetName() const _NODISCARD std::string GetLocalizedName() const _NODISCARD std::string GetLocalizedVariantName() const MapDataWrapper GetIsVariantOf() const _NODISCARD unsigned char GetWeatherVariant() const "},{"id":112,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/MapListWrapper/","title":"MapListWrapper","parent":"Game Object","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const ArrayWrapper GetSortedMaps() const "},{"id":113,"href":"/bakkesmod_api/Classes/Wrappers/MatchmakingWrapper/","title":"MatchmakingWrapper","parent":"Wrappers","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const bool IsSearching() int GetActiveViewTab() void SetRegionSelection(Region region, bool bSelected) Parameter Type Description region Region \u0026mdash; bSelected bool \u0026mdash; void SetPlaylistSelection(Playlist playlist, bool bSelected) Parameter Type Description playlist Playlist \u0026mdash; bSelected bool \u0026mdash; void SetViewTab(PlaylistCategory playlist_category) Parameter Type Description playlist_category PlaylistCategory \u0026mdash; void StartMatchmaking(PlaylistCategory playlist_category) Parameter Type Description playlist_category PlaylistCategory \u0026mdash; void CancelMatchmaking() void CreatePrivateMatch(Region region, const CustomMatchSettings \u0026amp;match_settings) Parameter Type Description region Region \u0026mdash; match_settings CustomMatchSettings \u0026mdash; bool UpdatePrivateMatch(const CustomMatchSettings \u0026amp;match_settings) const Parameter Type Description match_settings CustomMatchSettings \u0026mdash; void JoinPrivateMatch(const std::string \u0026amp;server_name, const std::string \u0026amp;server_password=\u0026quot;\u0026quot;) Parameter Type Description server_name const std::string \u0026amp; \u0026mdash; server_password const std::string \u0026amp; \u0026mdash; void CreateLanMatch(Region region, const CustomMatchSettings \u0026amp;match_settings) const Parameter Type Description region Region \u0026mdash; match_settings CustomMatchSettings \u0026mdash; void JoinLanMatch(const std::string \u0026amp;server_id, const std::string \u0026amp;password) const Parameter Type Description server_id const std::string \u0026amp; \u0026mdash; password const std::string \u0026amp; \u0026mdash; int SeasonEndDays() int SeasonEndHours() int SeasonEndMinutes() int GetSeasonTimeRemaining() int GetSeasonEndTimeSeconds() bool HasSeasonEnded() int GetTotalPopulation() _NODISCARD int GetTotalPlayersOnline() const _NODISCARD int GetPlayerCount(PlaylistIds playlist) const Parameter Type Description playlist PlaylistIds \u0026mdash; std::string GetRegionID(Region region) Parameter Type Description region Region \u0026mdash; std::string GetRegionLabel(Region region) Parameter Type Description region Region \u0026mdash; "},{"id":114,"href":"/bakkesmod_api/Classes/Wrappers/MenuStackWrapper/","title":"MenuStackWrapper","parent":"Wrappers","content":" View Implementation _NODISCARD std::string GetTopMenu() const _NODISCARD std::vector\u0026lt; std::string \u0026gt; GetMenuStack() const _NODISCARD bool IsNull() const _NODISCARD operator bool() const "},{"id":115,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/MeshComponents/MeshComponentWrapper/","title":"MeshComponentWrapper","parent":"Mesh Components","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const "},{"id":116,"href":"/bakkesmod_api/Structs/Wrappers/MMRNotifierToken/","title":"MMRNotifierToken","parent":"Wrappers","content":" View Implementation Unique value assigned to an mmr notifier for a specific player. Obtain with MMRWrapper.RegisterMMRNotifier()\nunsigned long long token Default value: none\n"},{"id":117,"href":"/bakkesmod_api/Classes/Wrappers/MMRWrapper/","title":"MMRWrapper","parent":"Wrappers","content":" View Implementation CONSTRUCTORS(MMRWrapper) Parameter Type Description MMRWrapper \u0026mdash; bool IsSyncing(SteamID playerID) Parameter Type Description playerID SteamID \u0026mdash; bool IsSynced(SteamID playerID, int playlistID) Parameter Type Description playerID SteamID \u0026mdash; playlistID int \u0026mdash; bool IsRanked(int playlistID) Parameter Type Description playlistID int \u0026mdash; SkillRating GetPlayerSkillRating(SteamID playerID, int playlistID) Parameter Type Description playerID SteamID \u0026mdash; playlistID int \u0026mdash; SkillRank GetPlayerRank(SteamID playerID, int playlistID) Parameter Type Description playerID SteamID \u0026mdash; playlistID int \u0026mdash; float GetPlayerMMR(SteamID playerID, int playlistID) Parameter Type Description playerID SteamID \u0026mdash; playlistID int \u0026mdash; float CalculateMMR(SkillRating sr, bool disregardPlacements) Parameter Type Description sr SkillRating \u0026mdash; disregardPlacements bool \u0026mdash; int GetCurrentPlaylist() MMRNotifierToken RegisterMMRNotifier(std::function\u0026lt; void(UniqueIDWrapper id)\u0026gt;) Parameter Type Description UniqueIDWrapper \u0026mdash; "},{"id":118,"href":"/bakkesmod_api/Classes/Wrappers/Modals/ModalWrapper/","title":"ModalWrapper","parent":"Modals","content":" View Implementation void ShowModal() const void CloseModal() void SetColor(float r, float g, float b) Parameter Type Description r float \u0026mdash; g float \u0026mdash; b float \u0026mdash; void SetIcon(const std::string \u0026amp;iconName) Parameter Type Description iconName const std::string \u0026amp; \u0026mdash; void SetBody(const std::string \u0026amp;bodyHtml) Parameter Type Description bodyHtml const std::string \u0026amp; \u0026mdash; void AddButton(const std::string \u0026amp;button_text, bool is_cancel_button, std::function\u0026lt; void()\u0026gt; click_callback=nullptr) Parameter Type Description button_text const std::string \u0026amp; \u0026mdash; is_cancel_button bool \u0026mdash; click_callback std::function\u0026lt; void()\u0026gt; \u0026mdash; "},{"id":119,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/PerformanceStats/NetStatGraphWrapper/","title":"NetStatGraphWrapper","parent":"Performance Stats","content":" View Implementation SampleHistoryWrapper GetPacketsOut() void SetPacketsOut(SampleHistoryWrapper newPacketsOut) Parameter Type Description newPacketsOut SampleHistoryWrapper \u0026mdash; SampleHistoryWrapper GetPacketsIn() void SetPacketsIn(SampleHistoryWrapper newPacketsIn) Parameter Type Description newPacketsIn SampleHistoryWrapper \u0026mdash; SampleHistoryWrapper GetLostPacketsOut() void SetLostPacketsOut(SampleHistoryWrapper newLostPacketsOut) Parameter Type Description newLostPacketsOut SampleHistoryWrapper \u0026mdash; SampleHistoryWrapper GetLostPacketsIn() void SetLostPacketsIn(SampleHistoryWrapper newLostPacketsIn) Parameter Type Description newLostPacketsIn SampleHistoryWrapper \u0026mdash; SampleHistoryWrapper GetBytesOut() void SetBytesOut(SampleHistoryWrapper newBytesOut) Parameter Type Description newBytesOut SampleHistoryWrapper \u0026mdash; SampleHistoryWrapper GetBytesIn() void SetBytesIn(SampleHistoryWrapper newBytesIn) Parameter Type Description newBytesIn SampleHistoryWrapper \u0026mdash; SampleHistoryWrapper GetLatency() void SetLatency(SampleHistoryWrapper newLatency) Parameter Type Description newLatency SampleHistoryWrapper \u0026mdash; float GetExpectedOutPacketRate() void SetExpectedOutPacketRate(float newExpectedOutPacketRate) Parameter Type Description newExpectedOutPacketRate float \u0026mdash; float GetExpectedInPacketRate() void SetExpectedInPacketRate(float newExpectedInPacketRate) Parameter Type Description newExpectedInPacketRate float \u0026mdash; float GetMaxBytesRate() void SetMaxBytesRate(float newMaxBytesRate) Parameter Type Description newMaxBytesRate float \u0026mdash; void eventUpdateGraphRanges() SampleHistoryWrapper CreateBytesSummary(std::string Title) Parameter Type Description Title std::string \u0026mdash; SampleHistoryWrapper CreateLossSummary(std::string Title) Parameter Type Description Title std::string \u0026mdash; SampleHistoryWrapper CreatePktSummary(std::string Title) Parameter Type Description Title std::string \u0026mdash; void eventConstruct() "},{"id":120,"href":"/bakkesmod_api/Enums/NOTIFIER_PERMISSION/","title":"NOTIFIER_PERMISSION","parent":"Enums","content":" View Implementation When a notifier should be usable. Most of the time PERMISSION_ALL works best, but any of these can be used depending on your usecase.\nFor example, when a notifier is set to PERMISSION_MENU, your notifier code is only run when the command is used in the main menu\nPERMISSION_ALL = 0\nPERMISSION_MENU = (1 \u0026lt;\u0026lt; 0)\nPERMISSION_SOCCAR = (1 \u0026lt;\u0026lt; 1)\nPERMISSION_FREEPLAY = (1 \u0026lt;\u0026lt; 2)\nPERMISSION_CUSTOM_TRAINING = (1 \u0026lt;\u0026lt; 3)\nPERMISSION_ONLINE = (1 \u0026lt;\u0026lt; 4)\nPERMISSION_PAUSEMENU_CLOSED = (1 \u0026lt;\u0026lt; 5)\nPERMISSION_REPLAY = (1 \u0026lt;\u0026lt; 6)\nPERMISSION_OFFLINE = (1 \u0026lt;\u0026lt; 7)\n"},{"id":121,"href":"/bakkesmod_api/Classes/Wrappers/Engine/ObjectWrapper/","title":"ObjectWrapper","parent":"Engine","content":" View Implementation std::uintptr_t memory_address ObjectWrapper(std::uintptr_t mem) Parameter Type Description mem std::uintptr_t \u0026mdash; "},{"id":122,"href":"/bakkesmod_api/Enums/OnlinePlatform/","title":"OnlinePlatform","parent":"Enums","content":" View Implementation Ids for platforms players can be playing on\nOnlinePlatform_Unknown = 0\nOnlinePlatform_Steam = 1\nOnlinePlatform_PS4 = 2\nOnlinePlatform_PS3 = 3\nOnlinePlatform_Dingo = 4\nOnlinePlatform_QQ = 5\nOnlinePlatform_OldNNX = 6\nOnlinePlatform_NNX = 7\nOnlinePlatform_PsyNet = 8\nOnlinePlatform_Deleted = 9\nOnlinePlatform_WeGame = 10\nOnlinePlatform_Epic = 11\nOnlinePlatform_MAX = 12\n"},{"id":123,"href":"/bakkesmod_api/Classes/Wrappers/Items/OnlineProductWrapper/","title":"OnlineProductWrapper","parent":"Items","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const std::string SeriesIdToSeriesName(int seriesID) Parameter Type Description seriesID int \u0026mdash; _NODISCARD bool IsFavorited() const int GetProductID() int GetSeriesID() int GetTradeHold() std::string GetProductSeries() unsigned char GetQuality() ArrayWrapper GetAttributes() UnrealStringWrapper GetLongLabel() int GetBlueprintSeriesID() unsigned char GetBlueprintType() bool IsBlueprint() ProductWrapper GetProduct() bool GetIsUntradable() unsigned long long GetInstanceID() ProductInstanceID GetInstanceIDV2() "},{"id":124,"href":"/bakkesmod_api/Classes/Wrappers/Items/Dbs/PaintDatabaseWrapper/","title":"PaintDatabaseWrapper","parent":"Dbs","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const ArrayWrapper GetPaints() const _NODISCARD bool AddCustomPaintColor(const std::string \u0026amp;name, const LinearColor \u0026amp;color) Parameter Type Description name const std::string \u0026amp; \u0026mdash; color LinearColor \u0026mdash; _NODISCARD bool UpdateCustomPaintColor(const std::string \u0026amp;name, const LinearColor \u0026amp;color) Parameter Type Description name const std::string \u0026amp; \u0026mdash; color LinearColor \u0026mdash; std::string GetPaintName(int PaintID) Parameter Type Description PaintID int \u0026mdash; int GetPaintID(std::string \u0026amp;PaintName) Parameter Type Description PaintName std::string \u0026amp; \u0026mdash; "},{"id":125,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/PerformanceStats/PerfStatGraphWrapper/","title":"PerfStatGraphWrapper","parent":"Performance Stats","content":" View Implementation SampleHistoryWrapper GetFPS() void SetFPS(SampleHistoryWrapper newFPS) Parameter Type Description newFPS SampleHistoryWrapper \u0026mdash; SampleHistoryWrapper GetFrameTime() void SetFrameTime(SampleHistoryWrapper newFrameTime) Parameter Type Description newFrameTime SampleHistoryWrapper \u0026mdash; SampleHistoryWrapper GetGameThreadTime() void SetGameThreadTime(SampleHistoryWrapper newGameThreadTime) Parameter Type Description newGameThreadTime SampleHistoryWrapper \u0026mdash; SampleHistoryWrapper GetRenderThreadTime() void SetRenderThreadTime(SampleHistoryWrapper newRenderThreadTime) Parameter Type Description newRenderThreadTime SampleHistoryWrapper \u0026mdash; SampleHistoryWrapper GetGPUFrameTime() void SetGPUFrameTime(SampleHistoryWrapper newGPUFrameTime) Parameter Type Description newGPUFrameTime SampleHistoryWrapper \u0026mdash; ArrayWrapper GetFrameTimeHistories() float GetMaxFPS() void SetMaxFPS(float newMaxFPS) Parameter Type Description newMaxFPS float \u0026mdash; float GetTargetFPS() void SetTargetFPS(float newTargetFPS) Parameter Type Description newTargetFPS float \u0026mdash; void eventUpdateGraphRanges() SampleHistoryWrapper CreateFrameTimeHistory(std::string Title) Parameter Type Description Title std::string \u0026mdash; SampleHistoryWrapper CreateFpsHistory(std::string Title) Parameter Type Description Title std::string \u0026mdash; void eventConstruct() "},{"id":126,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/PhysicalMaterialPropertyWrapper/","title":"PhysicalMaterialPropertyWrapper","parent":"Game Object","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const float GetTireFrictionScale() void SetTireFrictionScale(float newTireFrictionScale) Parameter Type Description newTireFrictionScale float \u0026mdash; unsigned long GetbStickyWheels() void SetbStickyWheels(unsigned long newbStickyWheels) Parameter Type Description newbStickyWheels unsigned long \u0026mdash; unsigned long GetbConsiderForGround() void SetbConsiderForGround(unsigned long newbConsiderForGround) Parameter Type Description newbConsiderForGround unsigned long \u0026mdash; "},{"id":127,"href":"/bakkesmod_api/Classes/Wrappers/PlayerControllerWrapper/","title":"PlayerControllerWrapper","parent":"Wrappers","content":" View Implementation CarWrapper GetCar() void SetCar(CarWrapper newCar) Parameter Type Description newCar CarWrapper \u0026mdash; PriWrapper GetPRI() void SetPRI(PriWrapper newPRI) Parameter Type Description newPRI PriWrapper \u0026mdash; ControllerInput GetVehicleInput() void SetVehicleInput(ControllerInput newVehicleInput) Parameter Type Description newVehicleInput ControllerInput \u0026mdash; unsigned long GetbReceivedServerShutdownMessage() void SetbReceivedServerShutdownMessage(unsigned long newbReceivedServerShutdownMessage) Parameter Type Description newbReceivedServerShutdownMessage unsigned long \u0026mdash; unsigned long GetbUseDebugInputs() void SetbUseDebugInputs(unsigned long newbUseDebugInputs) Parameter Type Description newbUseDebugInputs unsigned long \u0026mdash; unsigned long GetbJumpPressed() void SetbJumpPressed(unsigned long newbJumpPressed) Parameter Type Description newbJumpPressed unsigned long \u0026mdash; unsigned long GetbBoostPressed() void SetbBoostPressed(unsigned long newbBoostPressed) Parameter Type Description newbBoostPressed unsigned long \u0026mdash; unsigned long GetbHandbrakePressed() void SetbHandbrakePressed(unsigned long newbHandbrakePressed) Parameter Type Description newbHandbrakePressed unsigned long \u0026mdash; unsigned long GetbHasPitchedBack() void SetbHasPitchedBack(unsigned long newbHasPitchedBack) Parameter Type Description newbHasPitchedBack unsigned long \u0026mdash; unsigned long GetbAllowAsymmetricalMute() void SetbAllowAsymmetricalMute(unsigned long newbAllowAsymmetricalMute) Parameter Type Description newbAllowAsymmetricalMute unsigned long \u0026mdash; unsigned long GetbResetCamera() void SetbResetCamera(unsigned long newbResetCamera) Parameter Type Description newbResetCamera unsigned long \u0026mdash; UnrealStringWrapper GetLoginURL() unsigned char GetVoiceFilter() void SetVoiceFilter(unsigned char newVoiceFilter) Parameter Type Description newVoiceFilter unsigned char \u0026mdash; unsigned char GetChatFilter() void SetChatFilter(unsigned char newChatFilter) Parameter Type Description newChatFilter unsigned char \u0026mdash; PriWrapper GetFollowTarget() void SetFollowTarget(PriWrapper newFollowTarget) Parameter Type Description newFollowTarget PriWrapper \u0026mdash; BaseCameraWrapper GetSpectatorCameraArchetype() void SetSpectatorCameraArchetype(BaseCameraWrapper newSpectatorCameraArchetype) Parameter Type Description newSpectatorCameraArchetype BaseCameraWrapper \u0026mdash; BaseCameraWrapper GetEditorCameraArchetype() void SetEditorCameraArchetype(BaseCameraWrapper newEditorCameraArchetype) Parameter Type Description newEditorCameraArchetype BaseCameraWrapper \u0026mdash; Vector GetMoveActorGrabOffset() void SetMoveActorGrabOffset(Vector newMoveActorGrabOffset) Parameter Type Description newMoveActorGrabOffset Vector \u0026mdash; float GetMoveActorGrabIncrement() void SetMoveActorGrabIncrement(float newMoveActorGrabIncrement) Parameter Type Description newMoveActorGrabIncrement float \u0026mdash; float GetMinMoveActorGrabDistance() void SetMinMoveActorGrabDistance(float newMinMoveActorGrabDistance) Parameter Type Description newMinMoveActorGrabDistance float \u0026mdash; float GetMouseIncrementSpeed() void SetMouseIncrementSpeed(float newMouseIncrementSpeed) Parameter Type Description newMouseIncrementSpeed float \u0026mdash; float GetBallVelocityIncrementAmount() void SetBallVelocityIncrementAmount(float newBallVelocityIncrementAmount) Parameter Type Description newBallVelocityIncrementAmount float \u0026mdash; int GetBallVelocityIncrementFireCount() void SetBallVelocityIncrementFireCount(int newBallVelocityIncrementFireCount) Parameter Type Description newBallVelocityIncrementFireCount int \u0026mdash; float GetBallVelocityIncrementFireCountMax() void SetBallVelocityIncrementFireCountMax(float newBallVelocityIncrementFireCountMax) Parameter Type Description newBallVelocityIncrementFireCountMax float \u0026mdash; float GetBallVelocityIncrementSpeedDefault() void SetBallVelocityIncrementSpeedDefault(float newBallVelocityIncrementSpeedDefault) Parameter Type Description newBallVelocityIncrementSpeedDefault float \u0026mdash; float GetBallVelocityIncrementSpeedMax() void SetBallVelocityIncrementSpeedMax(float newBallVelocityIncrementSpeedMax) Parameter Type Description newBallVelocityIncrementSpeedMax float \u0026mdash; float GetCrosshairTraceDistance() void SetCrosshairTraceDistance(float newCrosshairTraceDistance) Parameter Type Description newCrosshairTraceDistance float \u0026mdash; ActorWrapper GetTracedCrosshairActor() void SetTracedCrosshairActor(ActorWrapper newTracedCrosshairActor) Parameter Type Description newTracedCrosshairActor ActorWrapper \u0026mdash; Vector GetRotateActorCameraLocationOffset() void SetRotateActorCameraLocationOffset(Vector newRotateActorCameraLocationOffset) Parameter Type Description newRotateActorCameraLocationOffset Vector \u0026mdash; Vector GetRotateActorCameraRotationOffset() void SetRotateActorCameraRotationOffset(Vector newRotateActorCameraRotationOffset) Parameter Type Description newRotateActorCameraRotationOffset Vector \u0026mdash; int GetRotateActorCameraSide() void SetRotateActorCameraSide(int newRotateActorCameraSide) Parameter Type Description newRotateActorCameraSide int \u0026mdash; float GetDesiredCameraSide() void SetDesiredCameraSide(float newDesiredCameraSide) Parameter Type Description newDesiredCameraSide float \u0026mdash; float GetPawnTypeChangedTime() void SetPawnTypeChangedTime(float newPawnTypeChangedTime) Parameter Type Description newPawnTypeChangedTime float \u0026mdash; int GetSelectedSpawnArchetype() void SetSelectedSpawnArchetype(int newSelectedSpawnArchetype) Parameter Type Description newSelectedSpawnArchetype int \u0026mdash; ControllerInput GetDebugInputs() void SetDebugInputs(ControllerInput newDebugInputs) Parameter Type Description newDebugInputs ControllerInput \u0026mdash; int GetMinClientInputRate() void SetMinClientInputRate(int newMinClientInputRate) Parameter Type Description newMinClientInputRate int \u0026mdash; int GetMedianClientInputRate() void SetMedianClientInputRate(int newMedianClientInputRate) Parameter Type Description newMedianClientInputRate int \u0026mdash; int GetMaxClientInputRate() void SetMaxClientInputRate(int newMaxClientInputRate) Parameter Type Description newMaxClientInputRate int \u0026mdash; int GetConfiguredClientInputRate() void SetConfiguredClientInputRate(int newConfiguredClientInputRate) Parameter Type Description newConfiguredClientInputRate int \u0026mdash; float GetTimeSinceLastMovePacket() void SetTimeSinceLastMovePacket(float newTimeSinceLastMovePacket) Parameter Type Description newTimeSinceLastMovePacket float \u0026mdash; float GetTimeLastReplicatedMovePacket() void SetTimeLastReplicatedMovePacket(float newTimeLastReplicatedMovePacket) Parameter Type Description newTimeLastReplicatedMovePacket float \u0026mdash; float GetMouseXDeadZone() void SetMouseXDeadZone(float newMouseXDeadZone) Parameter Type Description newMouseXDeadZone float \u0026mdash; float GetMouseYDeadZone() void SetMouseYDeadZone(float newMouseYDeadZone) Parameter Type Description newMouseYDeadZone float \u0026mdash; float GetMouseXDeadZoneAir() void SetMouseXDeadZoneAir(float newMouseXDeadZoneAir) Parameter Type Description newMouseXDeadZoneAir float \u0026mdash; float GetMouseYDeadZoneAir() void SetMouseYDeadZoneAir(float newMouseYDeadZoneAir) Parameter Type Description newMouseYDeadZoneAir float \u0026mdash; ControllerInput GetLastInputs() void SetLastInputs(ControllerInput newLastInputs) Parameter Type Description newLastInputs ControllerInput \u0026mdash; PriWrapper GetPendingViewPRI() void SetPendingViewPRI(PriWrapper newPendingViewPRI) Parameter Type Description newPendingViewPRI PriWrapper \u0026mdash; float GetLastInputPitchUp() void SetLastInputPitchUp(float newLastInputPitchUp) Parameter Type Description newLastInputPitchUp float \u0026mdash; float GetLastInputPitchDown() void SetLastInputPitchDown(float newLastInputPitchDown) Parameter Type Description newLastInputPitchDown float \u0026mdash; float GetLastInputYawLeft() void SetLastInputYawLeft(float newLastInputYawLeft) Parameter Type Description newLastInputYawLeft float \u0026mdash; float GetLastInputYawRight() void SetLastInputYawRight(float newLastInputYawRight) Parameter Type Description newLastInputYawRight float \u0026mdash; float GetLastInputPitch() void SetLastInputPitch(float newLastInputPitch) Parameter Type Description newLastInputPitch float \u0026mdash; float GetLastInputYaw() void SetLastInputYaw(float newLastInputYaw) Parameter Type Description newLastInputYaw float \u0026mdash; float GetMouseInputMax() void SetMouseInputMax(float newMouseInputMax) Parameter Type Description newMouseInputMax float \u0026mdash; EngineTAWrapper GetEngineShare() void SetEngineShare(EngineTAWrapper newEngineShare) Parameter Type Description newEngineShare EngineTAWrapper \u0026mdash; void HandleCarSet(PriWrapper InPRI) Parameter Type Description InPRI PriWrapper \u0026mdash; void SpawnSelectedArchetype() bool RemoveActor() void ToggleGrabActor() void ToggleRotateActor() void EditorReleaseActor() void EditorCycleActor() void DuplicateShot() void StopEditing() void EditorIncreasePower() void EditorDecreasePower() void EditorIncreasePowerToggleInterim() void EditorDecreasePowerToggleInterim() void EditorIncreasePowerToggle2(unsigned long bToggle) Parameter Type Description bToggle unsigned long \u0026mdash; void EditorDecreasePowerToggle2(unsigned long bToggle) Parameter Type Description bToggle unsigned long \u0026mdash; void ModifyEditorPower(int Direction) Parameter Type Description Direction int \u0026mdash; void ToggleCameraPosition() void EditorUndo() void EditorRedo() void EditorIncreaseRoundTime() void EditorDecreaseRoundTime() void EditorNextRound() void EditorPrevRound() void UpdateCrosshair() void NetClientInputRate(int Rate) Parameter Type Description Rate int \u0026mdash; void ServerCreateMatchBroadcast(ServerWrapper GameEvent) Parameter Type Description GameEvent ServerWrapper \u0026mdash; void ClampMoveActorGrabOffset() void RevertToDefaultCameraHUDInput() void SwitchToEditPawn() void ServerResetPlayer(unsigned long bFullReset) Parameter Type Description bFullReset unsigned long \u0026mdash; void ResetPlayerRun() void ResetPlayerCheckpoint() void ToggleEditorRound() void ToggleBetweenCarAndEditPawn() void Interact() void StopMovement(unsigned long bOnlyIfNoAccel) Parameter Type Description bOnlyIfNoAccel unsigned long \u0026mdash; Vector GetRotateActorCameraOffset(float DeltaTime, unsigned long bSnap) Parameter Type Description DeltaTime float \u0026mdash; bSnap unsigned long \u0026mdash; void RestoreEditorPawnOrientation() void BackupEditorPawnOrientation() void UpdateRotatedActorOrientation(float DeltaTime) Parameter Type Description DeltaTime float \u0026mdash; void OnOpenPauseMenu() void ResetMouseCenter() float CalculateMouseAxis(float Center, float CurrentLocation, float Deadzone, float MaxDist) Parameter Type Description Center float \u0026mdash; CurrentLocation float \u0026mdash; Deadzone float \u0026mdash; MaxDist float \u0026mdash; void ShowControllerApplet() void ShowAccountPicker() void QueSaveReplay() void SetFollowTarget2(PriWrapper InTarget) Parameter Type Description InTarget PriWrapper \u0026mdash; void FollowPlayer(PriWrapper InPlayer) Parameter Type Description InPlayer PriWrapper \u0026mdash; void ClientSplitscreenJoinResponse(SteamID \u0026amp;PlayerID, unsigned long bAllow, std::string Error) Parameter Type Description PlayerID SteamID \u0026mdash; bAllow unsigned long \u0026mdash; Error std::string \u0026mdash; void ServerRequestSplitscreenJoin(SteamID \u0026amp;PlayerID, std::string PlayerName) Parameter Type Description PlayerID SteamID \u0026mdash; PlayerName std::string \u0026mdash; bool eventPreClientTravel(std::string PendingURL, unsigned char TravelType, unsigned long bIsSeamlessTravel) Parameter Type Description PendingURL std::string \u0026mdash; TravelType unsigned char \u0026mdash; bIsSeamlessTravel unsigned long \u0026mdash; void NotifyGoalScored(int ScoredOnTeam) Parameter Type Description ScoredOnTeam int \u0026mdash; void eventDestroyed() bool ShouldBeMuted(PlayerControllerWrapper Other) Parameter Type Description Other PlayerControllerWrapper \u0026mdash; bool IsCommunicationFiltered(unsigned char Filter, PlayerControllerWrapper Other, unsigned long bPreset) Parameter Type Description Filter unsigned char \u0026mdash; Other PlayerControllerWrapper \u0026mdash; bPreset unsigned long \u0026mdash; void RefreshMutedPlayers(unsigned long bForceRefresh) Parameter Type Description bForceRefresh unsigned long \u0026mdash; void eventServerUnmutePlayer(SteamID \u0026amp;PlayerNetId) Parameter Type Description PlayerNetId SteamID \u0026mdash; void eventServerMutePlayer(SteamID \u0026amp;PlayerNetId) Parameter Type Description PlayerNetId SteamID \u0026mdash; void GameplayUnmutePlayer(SteamID \u0026amp;PlayerNetId) Parameter Type Description PlayerNetId SteamID \u0026mdash; void GameplayMutePlayer(SteamID \u0026amp;PlayerNetId) Parameter Type Description PlayerNetId SteamID \u0026mdash; void ServerSetChatFilter(unsigned char InVoiceFilter) Parameter Type Description InVoiceFilter unsigned char \u0026mdash; void ServerSetVoiceFilter(unsigned char InVoiceFilter) Parameter Type Description InVoiceFilter unsigned char \u0026mdash; bool IsExplictlyMuted(SteamID \u0026amp;PlayerNetId) Parameter Type Description PlayerNetId SteamID \u0026mdash; void DebugAI() void SendPendingRPCs() bool CanSendMessage(unsigned long bQuickChatMessage) Parameter Type Description bQuickChatMessage unsigned long \u0026mdash; void ClientNotifyChatBanned(unsigned long long ChatBanExpiration) Parameter Type Description ChatBanExpiration unsigned long long \u0026mdash; void ClientNotifyChatDisabled(float Time) Parameter Type Description Time float \u0026mdash; void ChatMessage_TA(PlayerReplicationInfoWrapper InPRI, std::string Message, unsigned char ChatChannel, unsigned long bPreset) Parameter Type Description InPRI PlayerReplicationInfoWrapper \u0026mdash; Message std::string \u0026mdash; ChatChannel unsigned char \u0026mdash; bPreset unsigned long \u0026mdash; void ServerSayInternal_TA(std::string Message, unsigned char ChatChannel, unsigned long bPreset) Parameter Type Description Message std::string \u0026mdash; ChatChannel unsigned char \u0026mdash; bPreset unsigned long \u0026mdash; void ServerSay_TA(std::string Message, unsigned char ChatChannel, unsigned long bPreset) Parameter Type Description Message std::string \u0026mdash; ChatChannel unsigned char \u0026mdash; bPreset unsigned long \u0026mdash; void Say_TA2(std::string Message, unsigned char ChatChannel, SteamID \u0026amp;Recipient, unsigned long bPreset) Parameter Type Description Message std::string \u0026mdash; ChatChannel unsigned char \u0026mdash; Recipient SteamID \u0026mdash; bPreset unsigned long \u0026mdash; bool CanChatWith(PlayerControllerWrapper Other, unsigned long bPreset) Parameter Type Description Other PlayerControllerWrapper \u0026mdash; bPreset unsigned long \u0026mdash; bool AllowTextMessage(std::string msg) Parameter Type Description msg std::string \u0026mdash; void PushToTalkEnd() void PushToTalk2() void HandleJoinGameMigrationCompleted(unsigned long bSuccess, std::string FailReason) Parameter Type Description bSuccess unsigned long \u0026mdash; FailReason std::string \u0026mdash; void eventClientUnmutePlayer(SteamID \u0026amp;PlayerNetId) Parameter Type Description PlayerNetId SteamID \u0026mdash; void eventClientMutePlayer(SteamID \u0026amp;PlayerNetId, unsigned long bAddToMuteList) Parameter Type Description PlayerNetId SteamID \u0026mdash; bAddToMuteList unsigned long \u0026mdash; void ClientSetOnlineStatus() void HandleGameDataSelected(int PlaylistId, int MutatorIndex) Parameter Type Description PlaylistId int \u0026mdash; MutatorIndex int \u0026mdash; GameEventWrapper GetGameEvent() void ClientArbitratedMatchEnded() void BannedKick() void NoReservationKick() void IdleKick2() void ServerReportServer() void ClientUseItem(Vector \u0026amp;UseLocation, Rotator \u0026amp;UseRotation) Parameter Type Description UseLocation Vector \u0026mdash; UseRotation Rotator \u0026mdash; void ServerTeleportCar(Vector \u0026amp;SpawnLocation, Rotator \u0026amp;NewRotation) Parameter Type Description SpawnLocation Vector \u0026mdash; NewRotation Rotator \u0026mdash; void eventTeleportCar(Vector \u0026amp;SpawnLocation, Rotator \u0026amp;NewRotation) Parameter Type Description SpawnLocation Vector \u0026mdash; NewRotation Rotator \u0026mdash; void ServerUsePickup(RBActorWrapper Target) Parameter Type Description Target RBActorWrapper \u0026mdash; void UsePickup2() void ToggleHandbrake(unsigned long bHandbrake) Parameter Type Description bHandbrake unsigned long \u0026mdash; void ToggleBoost(unsigned long bBoost) Parameter Type Description bBoost unsigned long \u0026mdash; void ToggleJump(unsigned long bJump) Parameter Type Description bJump unsigned long \u0026mdash; void TargetSelectLeft() void TargetSelectRight() void ReleaseRearCamera() void PressRearCamera() void ReleaseSecondaryCamera() void PressSecondaryCamera() void ReadyUp() void Spectate() void ChangeTeam(int TeamNum) Parameter Type Description TeamNum int \u0026mdash; void SwitchTeam() void SetDefaultCameraMode() void ResetCameraMode() void ZeroMoveInput() void PlayerMove(float DeltaTime) Parameter Type Description DeltaTime float \u0026mdash; void IgnoreMoveInput(unsigned long bNewMoveInput) Parameter Type Description bNewMoveInput unsigned long \u0026mdash; void eventSendClientAdjustment() PlayerControllerWrapper GetPrimaryPlayerController() void HandleAddBoostComponent(BoostWrapper Boost) Parameter Type Description Boost BoostWrapper \u0026mdash; void ReplicateLoadout() void ReplicateCameraRotation() void SetUsingFreecam(unsigned long bFreecam) Parameter Type Description bFreecam unsigned long \u0026mdash; void SetUsingBehindView(unsigned long bBehindView) Parameter Type Description bBehindView unsigned long \u0026mdash; void SetUsingSecondaryCamera(unsigned long bSecondaryCamera) Parameter Type Description bSecondaryCamera unsigned long \u0026mdash; void ReplicateCameraSettings() void HandleControllerLayoutChanged(PriWrapper InPRI) Parameter Type Description InPRI PriWrapper \u0026mdash; void HandlePawnTypeChanged(PriWrapper InPRI) Parameter Type Description InPRI PriWrapper \u0026mdash; void HandlePendingViewCarSet(PriWrapper InPRI) Parameter Type Description InPRI PriWrapper \u0026mdash; void HandleReplaceBot(PriWrapper InPRI) Parameter Type Description InPRI PriWrapper \u0026mdash; void HandleTeamChanged(PriXWrapper InPRI) Parameter Type Description InPRI PriXWrapper \u0026mdash; void HandleMatchEnded(ServerWrapper GameEvent) Parameter Type Description GameEvent ServerWrapper \u0026mdash; void HandleStartNewRound(ServerWrapper GameEvent) Parameter Type Description GameEvent ServerWrapper \u0026mdash; void HandleGameEventChanged(PriWrapper InPRI) Parameter Type Description InPRI PriWrapper \u0026mdash; void HandlePRICameraChanged(PriWrapper InPRI) Parameter Type Description InPRI PriWrapper \u0026mdash; void SetupLightBar() void HandlePersistentCameraSet(PriWrapper InPRI) Parameter Type Description InPRI PriWrapper \u0026mdash; void OnReceivedPlayerAndPRI() void UpdateVoiceFilter() void ReplicateLevelSessionID() void ServerInitInputBuffer(unsigned char Type) Parameter Type Description Type unsigned char \u0026mdash; void eventReceivedPlayer() void eventPostBeginPlay() void EventChatMessage(PlayerControllerWrapper PC, std::string Message, unsigned long bPreset) Parameter Type Description PC PlayerControllerWrapper \u0026mdash; Message std::string \u0026mdash; bPreset unsigned long \u0026mdash; void EventResetPlayer(PlayerControllerWrapper PC, unsigned long bFullReset) Parameter Type Description PC PlayerControllerWrapper \u0026mdash; bFullReset unsigned long \u0026mdash; void EventSelectBallCamTarget(PlayerControllerWrapper PC, int Direction) Parameter Type Description PC PlayerControllerWrapper \u0026mdash; Direction int \u0026mdash; void EventTrainingEditorActorModified() void EventMuteChanged(PlayerControllerWrapper PC, SteamID \u0026amp;PlayerID, unsigned long bMuted) Parameter Type Description PC PlayerControllerWrapper \u0026mdash; PlayerID SteamID \u0026mdash; bMuted unsigned long \u0026mdash; void EventLaunchControllerApplet() void EventLaunchAccountPicker(int ControllerId) Parameter Type Description ControllerId int \u0026mdash; bool GetbUsingGamepad() void SetMouseSensitivity(float NewSensitivity) Parameter Type Description NewSensitivity float \u0026mdash; float GetMouseSensitivity() void SetAForward(float aForward) Parameter Type Description aForward float \u0026mdash; float GetAForward() void SetATurn(float aTurn) Parameter Type Description aTurn float \u0026mdash; float GetATurn() void SetAStrafe(float aStrafe) Parameter Type Description aStrafe float \u0026mdash; float GetAStrafe() void SetAUp(float aUp) Parameter Type Description aUp float \u0026mdash; float GetAUp() void SetALookUp(float aLookUp) Parameter Type Description aLookUp float \u0026mdash; float GetALookUp() void SetLookRightScale(float NewScale) Parameter Type Description NewScale float \u0026mdash; float GetLookRightScale() void SetLookUpScale(float NewScale) Parameter Type Description NewScale float \u0026mdash; float GetLookUpScale() void SetGamepadLookScale(float NewScale) Parameter Type Description NewScale float \u0026mdash; float GetGamepadLookScale() void SetALookRoll(float NewLookRoll) Parameter Type Description NewLookRoll float \u0026mdash; float GetALookRoll() void SetbRoll(bool NewRoll) Parameter Type Description NewRoll bool \u0026mdash; bool GetbRoll() void SetSpectatorCameraAccel(float SpectatorCameraAccel) Parameter Type Description SpectatorCameraAccel float \u0026mdash; float GetSpectatorCameraAccel() void SetSpectatorCameraSpeed(float SpectatorCameraSpeed) Parameter Type Description SpectatorCameraSpeed float \u0026mdash; float GetSpectatorCameraSpeed() "},{"id":128,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/PlayerReplicationInfoWrapper/","title":"PlayerReplicationInfoWrapper","parent":"Game Object","content":" View Implementation OnlinePlatform GetPlatform() _NODISCARD bool ChangeNameForScoreboardAndNameplateInReplay(const std::string \u0026amp;name) Parameter Type Description name const std::string \u0026amp; \u0026mdash; int GetScore() void SetScore(int newScore) Parameter Type Description newScore int \u0026mdash; int GetDeaths() void SetDeaths(int newDeaths) Parameter Type Description newDeaths int \u0026mdash; unsigned char GetPing() void SetPing(unsigned char newPing) Parameter Type Description newPing unsigned char \u0026mdash; unsigned char GetTTSSpeaker() void SetTTSSpeaker(unsigned char newTTSSpeaker) Parameter Type Description newTTSSpeaker unsigned char \u0026mdash; int GetNumLives() void SetNumLives(int newNumLives) Parameter Type Description newNumLives int \u0026mdash; UnrealStringWrapper GetPlayerName() UnrealStringWrapper GetOldName() int GetPlayerID() void SetPlayerID(int newPlayerID) Parameter Type Description newPlayerID int \u0026mdash; TeamInfoWrapper GetTeam() void SetTeam(TeamInfoWrapper newTeam) Parameter Type Description newTeam TeamInfoWrapper \u0026mdash; unsigned long GetbAdmin() void SetbAdmin(unsigned long newbAdmin) Parameter Type Description newbAdmin unsigned long \u0026mdash; unsigned long GetbIsSpectator() void SetbIsSpectator(unsigned long newbIsSpectator) Parameter Type Description newbIsSpectator unsigned long \u0026mdash; unsigned long GetbOnlySpectator() void SetbOnlySpectator(unsigned long newbOnlySpectator) Parameter Type Description newbOnlySpectator unsigned long \u0026mdash; unsigned long GetbWaitingPlayer() void SetbWaitingPlayer(unsigned long newbWaitingPlayer) Parameter Type Description newbWaitingPlayer unsigned long \u0026mdash; unsigned long GetbReadyToPlay() void SetbReadyToPlay(unsigned long newbReadyToPlay) Parameter Type Description newbReadyToPlay unsigned long \u0026mdash; unsigned long GetbOutOfLives() void SetbOutOfLives(unsigned long newbOutOfLives) Parameter Type Description newbOutOfLives unsigned long \u0026mdash; unsigned long GetbBot() void SetbBot(unsigned long newbBot) Parameter Type Description newbBot unsigned long \u0026mdash; unsigned long GetbIsInactive() void SetbIsInactive(unsigned long newbIsInactive) Parameter Type Description newbIsInactive unsigned long \u0026mdash; unsigned long GetbFromPreviousLevel() void SetbFromPreviousLevel(unsigned long newbFromPreviousLevel) Parameter Type Description newbFromPreviousLevel unsigned long \u0026mdash; unsigned long GetbTimedOut() void SetbTimedOut(unsigned long newbTimedOut) Parameter Type Description newbTimedOut unsigned long \u0026mdash; unsigned long GetbUnregistered() void SetbUnregistered(unsigned long newbUnregistered) Parameter Type Description newbUnregistered unsigned long \u0026mdash; int GetStartTime() void SetStartTime(int newStartTime) Parameter Type Description newStartTime int \u0026mdash; UnrealStringWrapper GetStringSpectating() UnrealStringWrapper GetStringUnknown() int GetKills() void SetKills(int newKills) Parameter Type Description newKills int \u0026mdash; float GetExactPing() void SetExactPing(float newExactPing) Parameter Type Description newExactPing float \u0026mdash; UnrealStringWrapper GetSavedNetworkAddress() SteamID GetUniqueId() void SetUniqueId(UniqueIDWrapper newUniqueId) Parameter Type Description newUniqueId UniqueIDWrapper \u0026mdash; UniqueIDWrapper GetUniqueIdWrapper() void UnregisterPlayerFromSession() void RegisterPlayerWithSession() bool IsInvalidName() unsigned char GetTeamNum() void SetUniqueId2(UniqueIDWrapper \u0026amp;PlayerUniqueId) Parameter Type Description PlayerUniqueId UniqueIDWrapper \u0026mdash; void SeamlessTravelTo(PlayerReplicationInfoWrapper NewPRI) Parameter Type Description NewPRI PlayerReplicationInfoWrapper \u0026mdash; void IncrementDeaths(int Amt) Parameter Type Description Amt int \u0026mdash; void CopyProperties(PlayerReplicationInfoWrapper PRI) Parameter Type Description PRI PlayerReplicationInfoWrapper \u0026mdash; void OverrideWith(PlayerReplicationInfoWrapper PRI) Parameter Type Description PRI PlayerReplicationInfoWrapper \u0026mdash; PlayerReplicationInfoWrapper Duplicate() void SetWaitingPlayer(unsigned long B) Parameter Type Description B unsigned long \u0026mdash; void eventSetPlayerName(std::string S) Parameter Type Description S std::string \u0026mdash; void Reset() void eventDestroyed() void Unregister2() void UpdatePing(float TimeStamp) Parameter Type Description TimeStamp float \u0026mdash; void RemoteUserDataReplicated() void SetPlayerTeam(TeamInfoWrapper NewTeam) Parameter Type Description NewTeam TeamInfoWrapper \u0026mdash; void eventClientFillRemoteUserData() void eventPostBeginPlay() void eventOnOwnerChanged() void eventConstruct() "},{"id":129,"href":"/bakkesmod_api/Enums/Playlist/","title":"Playlist","parent":"Enums","content":" View Implementation CASUAL_STANDARD = 0\nCASUAL_DOUBLES = 1\nCASUAL_DUELS = 2\nCASUAL_CHAOS = 3\nRANKED_STANDARD = 4\nRANKED_DOUBLES = 5\nRANKED_DUELS = 6\nAUTO_TOURNAMENT = 12\nEXTRAS_RUMBLE = 13\nEXTRAS_DROPSHOT = 14\nEXTRAS_HOOPS = 15\nEXTRAS_SNOWDAY = 16\n"},{"id":130,"href":"/bakkesmod_api/Enums/PlaylistCategory/","title":"PlaylistCategory","parent":"Enums","content":" View Implementation CASUAL = 0\nRANKED = 1\nEXTRAS = 2\n"},{"id":131,"href":"/bakkesmod_api/Enums/PlaylistIds/","title":"PlaylistIds","parent":"Enums","content":" View Implementation Unknown = -1337\nCasual = 0\nDuel = 1\nDoubles = 2\nStandard = 3\nChaos = 4\nPrivateMatch = 6\nSeason = 7\nOfflineSplitscreen = 8\nTraining = 9\nRankedSoloDuel = 10\nRankedTeamDoubles = 11\nRankedStandard = 13\nSnowDayPromotion = 15\nExperimental = 16\nBasketballDoubles = 17\nRumble = 18\nWorkshop = 19\nUGCTrainingEditor = 20\nUGCTraining = 21\nTournament = 22\nBreakout = 23\nTenthAnniversary = 25\nFaceIt = 26\nRankedBasketballDoubles = 27\nRankedRumble = 28\nRankedBreakout = 29\nRankedSnowDay = 30\nHauntedBall = 31\nBeachBall = 32\nRugby = 33\nAutoTournament = 34\nRocketLabs = 35\nRumShot = 37\nGodBall = 38\nCoopVsAI = 40\nBoomerBall = 41\nGodBallDoubles = 43\nSpecialSnowDay = 44\nFootball = 46\nCubic = 47\nTacticalRumble = 48\nSpringLoaded = 49\nSpeedDemon = 50\nRumbleBM = 52\nKnockout = 54\nThirdwheel = 55\nMagnusFutball = 62\n"},{"id":132,"href":"/bakkesmod_api/Classes/Wrappers/PluginManagerWrapper/","title":"PluginManagerWrapper","parent":"Wrappers","content":" View Implementation CONSTRUCTORS(PluginManagerWrapper) Parameter Type Description PluginManagerWrapper \u0026mdash; BakkesMod::Plugin::LoadedPlugin GetLoadedPlugins() "},{"id":133,"href":"/bakkesmod_api/Enums/PLUGINTYPE/","title":"PLUGINTYPE","parent":"Enums","content":" View Implementation Plugin types for plugin declaration. Explained here\nPLUGINTYPE_FREEPLAY = 0x01\nPLUGINTYPE_CUSTOM_TRAINING = 0x02\nPLUGINTYPE_SPECTATOR = 0x04\nPLUGINTYPE_BOTAI = 0x08\nPLUGINTYPE_REPLAY = 0x10\nPLUGINTYPE_THREADED = 0x20\nPLUGINTYPE_THREADEDUNLOAD = 0x40\n"},{"id":134,"href":"/bakkesmod_api/Structs/Wrappers/POV/","title":"POV","parent":"Wrappers","content":" View Implementation The location, rotation, and FOV of a player's POV\nVector location Default value: none\nRotator rotation Default value: none\nfloat FOV Default value: none\n"},{"id":135,"href":"/bakkesmod_api/Structs/Wrappers/PredictionInfo/","title":"PredictionInfo","parent":"Wrappers","content":" View Implementation Info on the predicted location of a ball. Get with BallWrapper.PredictPosition()\nfloat Time Default value: none\nfloat ArchTopTime Default value: none\nVector Location Default value: none\nVector Velocity Default value: none\nVector ArchTop Default value: none\nVector ArchTopVelocity Default value: none\nunsigned long bHitWall Default value: none\nunsigned long bHitGround Default value: none\n"},{"id":136,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/CarComponent/PrimitiveComponentWrapper/","title":"PrimitiveComponentWrapper","parent":"Car Component","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const unsigned char GetRBChannel() void SetRBChannel(unsigned char newRBChannel) Parameter Type Description newRBChannel unsigned char \u0026mdash; unsigned char GetRBDominanceGroup() void SetRBDominanceGroup(unsigned char newRBDominanceGroup) Parameter Type Description newRBDominanceGroup unsigned char \u0026mdash; unsigned long GetbOnlyBlockActorMovement() void SetbOnlyBlockActorMovement(unsigned long newbOnlyBlockActorMovement) Parameter Type Description newbOnlyBlockActorMovement unsigned long \u0026mdash; unsigned long GetHiddenGame() void SetHiddenGame(unsigned long newHiddenGame) Parameter Type Description newHiddenGame unsigned long \u0026mdash; unsigned long GetbOwnerNoSee() void SetbOwnerNoSee(unsigned long newbOwnerNoSee) Parameter Type Description newbOwnerNoSee unsigned long \u0026mdash; unsigned long GetbOnlyOwnerSee() void SetbOnlyOwnerSee(unsigned long newbOnlyOwnerSee) Parameter Type Description newbOnlyOwnerSee unsigned long \u0026mdash; unsigned long GetbIgnoreOwnerHidden() void SetbIgnoreOwnerHidden(unsigned long newbIgnoreOwnerHidden) Parameter Type Description newbIgnoreOwnerHidden unsigned long \u0026mdash; unsigned long GetbUseAsOccluder() void SetbUseAsOccluder(unsigned long newbUseAsOccluder) Parameter Type Description newbUseAsOccluder unsigned long \u0026mdash; unsigned long GetbAllowApproximateOcclusion() void SetbAllowApproximateOcclusion(unsigned long newbAllowApproximateOcclusion) Parameter Type Description newbAllowApproximateOcclusion unsigned long \u0026mdash; unsigned long GetbFirstFrameOcclusion() void SetbFirstFrameOcclusion(unsigned long newbFirstFrameOcclusion) Parameter Type Description newbFirstFrameOcclusion unsigned long \u0026mdash; unsigned long GetbIgnoreNearPlaneIntersection() void SetbIgnoreNearPlaneIntersection(unsigned long newbIgnoreNearPlaneIntersection) Parameter Type Description newbIgnoreNearPlaneIntersection unsigned long \u0026mdash; unsigned long GetbAcceptsStaticDecals() unsigned long GetbAcceptsDynamicDecals() unsigned long GetbIsRefreshingDecals() unsigned long GetCastShadow() void SetCastShadow(unsigned long newCastShadow) Parameter Type Description newCastShadow unsigned long \u0026mdash; unsigned long GetbForceDirectLightMap() void SetbForceDirectLightMap(unsigned long newbForceDirectLightMap) Parameter Type Description newbForceDirectLightMap unsigned long \u0026mdash; unsigned long GetbCastDynamicShadow() void SetbCastDynamicShadow(unsigned long newbCastDynamicShadow) Parameter Type Description newbCastDynamicShadow unsigned long \u0026mdash; unsigned long GetbCastStaticShadow() void SetbCastStaticShadow(unsigned long newbCastStaticShadow) Parameter Type Description newbCastStaticShadow unsigned long \u0026mdash; unsigned long GetbSelfShadowOnly() void SetbSelfShadowOnly(unsigned long newbSelfShadowOnly) Parameter Type Description newbSelfShadowOnly unsigned long \u0026mdash; unsigned long GetbNoModSelfShadow() void SetbNoModSelfShadow(unsigned long newbNoModSelfShadow) Parameter Type Description newbNoModSelfShadow unsigned long \u0026mdash; unsigned long GetbAcceptsDynamicDominantLightShadows() void SetbAcceptsDynamicDominantLightShadows(unsigned long newbAcceptsDynamicDominantLightShadows) Parameter Type Description newbAcceptsDynamicDominantLightShadows unsigned long \u0026mdash; unsigned long GetbCastHiddenShadow() void SetbCastHiddenShadow(unsigned long newbCastHiddenShadow) Parameter Type Description newbCastHiddenShadow unsigned long \u0026mdash; unsigned long GetbCastShadowAsTwoSided() void SetbCastShadowAsTwoSided(unsigned long newbCastShadowAsTwoSided) Parameter Type Description newbCastShadowAsTwoSided unsigned long \u0026mdash; unsigned long GetbAcceptsLights() void SetbAcceptsLights(unsigned long newbAcceptsLights) Parameter Type Description newbAcceptsLights unsigned long \u0026mdash; unsigned long GetbAcceptsDynamicLights() void SetbAcceptsDynamicLights(unsigned long newbAcceptsDynamicLights) Parameter Type Description newbAcceptsDynamicLights unsigned long \u0026mdash; unsigned long GetbUseOnePassLightingOnTranslucency() void SetbUseOnePassLightingOnTranslucency(unsigned long newbUseOnePassLightingOnTranslucency) Parameter Type Description newbUseOnePassLightingOnTranslucency unsigned long \u0026mdash; unsigned long GetbUsePrecomputedShadows() unsigned long GetbHasExplicitShadowParent() unsigned long GetCollideActors() void SetCollideActors(unsigned long newCollideActors) Parameter Type Description newCollideActors unsigned long \u0026mdash; unsigned long GetAlwaysCheckCollision() void SetAlwaysCheckCollision(unsigned long newAlwaysCheckCollision) Parameter Type Description newAlwaysCheckCollision unsigned long \u0026mdash; unsigned long GetBlockActors() void SetBlockActors(unsigned long newBlockActors) Parameter Type Description newBlockActors unsigned long \u0026mdash; unsigned long GetBlockZeroExtent() void SetBlockZeroExtent(unsigned long newBlockZeroExtent) Parameter Type Description newBlockZeroExtent unsigned long \u0026mdash; unsigned long GetBlockNonZeroExtent() void SetBlockNonZeroExtent(unsigned long newBlockNonZeroExtent) Parameter Type Description newBlockNonZeroExtent unsigned long \u0026mdash; unsigned long GetCanBlockCamera() void SetCanBlockCamera(unsigned long newCanBlockCamera) Parameter Type Description newCanBlockCamera unsigned long \u0026mdash; unsigned long GetBlockRigidBody() void SetBlockRigidBody(unsigned long newBlockRigidBody) Parameter Type Description newBlockRigidBody unsigned long \u0026mdash; unsigned long GetbBlockFootPlacement() void SetbBlockFootPlacement(unsigned long newbBlockFootPlacement) Parameter Type Description newbBlockFootPlacement unsigned long \u0026mdash; unsigned long GetbDisableAllRigidBody() void SetbDisableAllRigidBody(unsigned long newbDisableAllRigidBody) Parameter Type Description newbDisableAllRigidBody unsigned long \u0026mdash; unsigned long GetbSkipRBGeomCreation() void SetbSkipRBGeomCreation(unsigned long newbSkipRBGeomCreation) Parameter Type Description newbSkipRBGeomCreation unsigned long \u0026mdash; unsigned long GetbNotifyRigidBodyCollision() void SetbNotifyRigidBodyCollision(unsigned long newbNotifyRigidBodyCollision) Parameter Type Description newbNotifyRigidBodyCollision unsigned long \u0026mdash; unsigned long GetbFluidDrain() void SetbFluidDrain(unsigned long newbFluidDrain) Parameter Type Description newbFluidDrain unsigned long \u0026mdash; unsigned long GetbFluidTwoWay() void SetbFluidTwoWay(unsigned long newbFluidTwoWay) Parameter Type Description newbFluidTwoWay unsigned long \u0026mdash; unsigned long GetbIgnoreRadialImpulse() void SetbIgnoreRadialImpulse(unsigned long newbIgnoreRadialImpulse) Parameter Type Description newbIgnoreRadialImpulse unsigned long \u0026mdash; unsigned long GetbIgnoreRadialForce() void SetbIgnoreRadialForce(unsigned long newbIgnoreRadialForce) Parameter Type Description newbIgnoreRadialForce unsigned long \u0026mdash; unsigned long GetbIgnoreForceField() void SetbIgnoreForceField(unsigned long newbIgnoreForceField) Parameter Type Description newbIgnoreForceField unsigned long \u0026mdash; unsigned long GetbUseCompartment() void SetbUseCompartment(unsigned long newbUseCompartment) Parameter Type Description newbUseCompartment unsigned long \u0026mdash; unsigned long GetAlwaysLoadOnClient() void SetAlwaysLoadOnClient(unsigned long newAlwaysLoadOnClient) Parameter Type Description newAlwaysLoadOnClient unsigned long \u0026mdash; unsigned long GetAlwaysLoadOnServer() void SetAlwaysLoadOnServer(unsigned long newAlwaysLoadOnServer) Parameter Type Description newAlwaysLoadOnServer unsigned long \u0026mdash; unsigned long GetbIgnoreHiddenActorsMembership() void SetbIgnoreHiddenActorsMembership(unsigned long newbIgnoreHiddenActorsMembership) Parameter Type Description newbIgnoreHiddenActorsMembership unsigned long \u0026mdash; unsigned long GetAbsoluteTranslation() void SetAbsoluteTranslation(unsigned long newAbsoluteTranslation) Parameter Type Description newAbsoluteTranslation unsigned long \u0026mdash; unsigned long GetAbsoluteRotation() void SetAbsoluteRotation(unsigned long newAbsoluteRotation) Parameter Type Description newAbsoluteRotation unsigned long \u0026mdash; unsigned long GetAbsoluteScale() void SetAbsoluteScale(unsigned long newAbsoluteScale) Parameter Type Description newAbsoluteScale unsigned long \u0026mdash; int GetVisibilityId() void SetVisibilityId(int newVisibilityId) Parameter Type Description newVisibilityId int \u0026mdash; Vector GetTranslation() void SetTranslation(Vector newTranslation) Parameter Type Description newTranslation Vector \u0026mdash; Rotator GetRotation() void SetRotation(Rotator newRotation) Parameter Type Description newRotation Rotator \u0026mdash; float GetScale() void SetScale(float newScale) Parameter Type Description newScale float \u0026mdash; Vector GetScale3D() void SetScale3D(Vector newScale3D) Parameter Type Description newScale3D Vector \u0026mdash; float GetBoundsScale() void SetBoundsScale(float newBoundsScale) Parameter Type Description newBoundsScale float \u0026mdash; void SetLastSubmitTime(float newLastSubmitTime) Parameter Type Description newLastSubmitTime float \u0026mdash; float GetLastRenderTime() float GetScriptRigidBodyCollisionThreshold() void SetScriptRigidBodyCollisionThreshold(float newScriptRigidBodyCollisionThreshold) Parameter Type Description newScriptRigidBodyCollisionThreshold float \u0026mdash; void TermRBPhys() void InitRBPhys() void SetNotifyRigidBodyCollision(unsigned long bNewNotifyRigidBodyCollision) Parameter Type Description bNewNotifyRigidBodyCollision unsigned long \u0026mdash; void SetRBChannel2(unsigned char Channel) Parameter Type Description Channel unsigned char \u0026mdash; void SetRBCollidesWithChannel(unsigned char Channel, unsigned long bNewCollides) Parameter Type Description Channel unsigned char \u0026mdash; bNewCollides unsigned long \u0026mdash; void SetBlockRigidBody2(unsigned long bNewBlockRigidBody) Parameter Type Description bNewBlockRigidBody unsigned long \u0026mdash; void RetardRBLinearVelocity(Vector \u0026amp;RetardDir, float VelScale) Parameter Type Description RetardDir Vector \u0026mdash; VelScale float \u0026mdash; void SetRBAngularVelocity(Vector \u0026amp;NewAngVel, unsigned long bAddToCurrent) Parameter Type Description NewAngVel Vector \u0026mdash; bAddToCurrent unsigned long \u0026mdash; void SetRBLinearVelocity(Vector \u0026amp;NewVel, unsigned long bAddToCurrent) Parameter Type Description NewVel Vector \u0026mdash; bAddToCurrent unsigned long \u0026mdash; void AddRadialForce(Vector \u0026amp;Origin, float Radius, float Strength, unsigned char Falloff) Parameter Type Description Origin Vector \u0026mdash; Radius float \u0026mdash; Strength float \u0026mdash; Falloff unsigned char \u0026mdash; void AddRadialImpulse(Vector \u0026amp;Origin, float Radius, float Strength, unsigned char Falloff, unsigned long bVelChange) Parameter Type Description Origin Vector \u0026mdash; Radius float \u0026mdash; Strength float \u0026mdash; Falloff unsigned char \u0026mdash; bVelChange unsigned long \u0026mdash; "},{"id":137,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/PriWrapper/","title":"PriWrapper","parent":"Game Object","content":" View Implementation The Player Replication Info provides a ton of information on all players connected to a match, including spectators and bots.\nThe best way to get the PRIs is using a ServerWrapper to call from its superclass GameEventWrapper.GetPRIs()\nint GetMatchScore() void SetMatchScore(int newMatchScore) Parameter Type Description newMatchScore int \u0026mdash; int GetMatchGoals() void SetMatchGoals(int newMatchGoals) Parameter Type Description newMatchGoals int \u0026mdash; int GetMatchOwnGoals() void SetMatchOwnGoals(int newMatchOwnGoals) Parameter Type Description newMatchOwnGoals int \u0026mdash; int GetMatchAssists() void SetMatchAssists(int newMatchAssists) Parameter Type Description newMatchAssists int \u0026mdash; int GetMatchSaves() void SetMatchSaves(int newMatchSaves) Parameter Type Description newMatchSaves int \u0026mdash; int GetMatchShots() void SetMatchShots(int newMatchShots) Parameter Type Description newMatchShots int \u0026mdash; int GetMatchDemolishes() void SetMatchDemolishes(int newMatchDemolishes) Parameter Type Description newMatchDemolishes int \u0026mdash; int GetMatchBonusXP() void SetMatchBonusXP(int newMatchBonusXP) Parameter Type Description newMatchBonusXP int \u0026mdash; int GetMatchBreakoutDamage() void SetMatchBreakoutDamage(int newMatchBreakoutDamage) Parameter Type Description newMatchBreakoutDamage int \u0026mdash; unsigned long GetbMatchMVP() void SetbMatchMVP(unsigned long newbMatchMVP) Parameter Type Description newbMatchMVP unsigned long \u0026mdash; unsigned long GetbMatchAdmin() void SetbMatchAdmin(unsigned long newbMatchAdmin) Parameter Type Description newbMatchAdmin unsigned long \u0026mdash; unsigned long GetbLoadoutSet() void SetbLoadoutSet(unsigned long newbLoadoutSet) Parameter Type Description newbLoadoutSet unsigned long \u0026mdash; unsigned long GetbOnlineLoadoutSet() void SetbOnlineLoadoutSet(unsigned long newbOnlineLoadoutSet) Parameter Type Description newbOnlineLoadoutSet unsigned long \u0026mdash; unsigned long GetbLoadoutsSet() void SetbLoadoutsSet(unsigned long newbLoadoutsSet) Parameter Type Description newbLoadoutsSet unsigned long \u0026mdash; unsigned long GetbOnlineLoadoutsSet() void SetbOnlineLoadoutsSet(unsigned long newbOnlineLoadoutsSet) Parameter Type Description newbOnlineLoadoutsSet unsigned long \u0026mdash; unsigned long GetbTeamPaintSet() void SetbTeamPaintSet(unsigned long newbTeamPaintSet) Parameter Type Description newbTeamPaintSet unsigned long \u0026mdash; unsigned long GetbReady() void SetbReady(unsigned long newbReady) Parameter Type Description newbReady unsigned long \u0026mdash; unsigned long GetbBusy() void SetbBusy(unsigned long newbBusy) Parameter Type Description newbBusy unsigned long \u0026mdash; unsigned long GetbUsingSecondaryCamera() void SetbUsingSecondaryCamera(unsigned long newbUsingSecondaryCamera) Parameter Type Description newbUsingSecondaryCamera unsigned long \u0026mdash; unsigned long GetbUsingBehindView() void SetbUsingBehindView(unsigned long newbUsingBehindView) Parameter Type Description newbUsingBehindView unsigned long \u0026mdash; unsigned long GetbUsingFreecam() void SetbUsingFreecam(unsigned long newbUsingFreecam) Parameter Type Description newbUsingFreecam unsigned long \u0026mdash; unsigned long GetbIsInSplitScreen() void SetbIsInSplitScreen(unsigned long newbIsInSplitScreen) Parameter Type Description newbIsInSplitScreen unsigned long \u0026mdash; unsigned long GetbStartVoteToForfeitDisabled() void SetbStartVoteToForfeitDisabled(unsigned long newbStartVoteToForfeitDisabled) Parameter Type Description newbStartVoteToForfeitDisabled unsigned long \u0026mdash; unsigned long GetbUsingItems() void SetbUsingItems(unsigned long newbUsingItems) Parameter Type Description newbUsingItems unsigned long \u0026mdash; unsigned long GetPlayerHistoryValid() void SetPlayerHistoryValid(unsigned long newPlayerHistoryValid) Parameter Type Description newPlayerHistoryValid unsigned long \u0026mdash; GameEventWrapper GetGameEvent() void SetGameEvent(GameEventWrapper newGameEvent) Parameter Type Description newGameEvent GameEventWrapper \u0026mdash; GameEventWrapper GetReplicatedGameEvent() void SetReplicatedGameEvent(GameEventWrapper newReplicatedGameEvent) Parameter Type Description newReplicatedGameEvent GameEventWrapper \u0026mdash; CarWrapper GetCar() void SetCar(CarWrapper newCar) Parameter Type Description newCar CarWrapper \u0026mdash; int GetRespawnTimeRemaining() void SetRespawnTimeRemaining(int newRespawnTimeRemaining) Parameter Type Description newRespawnTimeRemaining int \u0026mdash; int GetWaitingStartTime() void SetWaitingStartTime(int newWaitingStartTime) Parameter Type Description newWaitingStartTime int \u0026mdash; float GetTotalGameTimePlayed() void SetTotalGameTimePlayed(float newTotalGameTimePlayed) Parameter Type Description newTotalGameTimePlayed float \u0026mdash; ProfileCameraSettings GetCameraSettings() void SetCameraSettings(ProfileCameraSettings newCameraSettings) Parameter Type Description newCameraSettings ProfileCameraSettings \u0026mdash; unsigned char GetCameraPitch() void SetCameraPitch(unsigned char newCameraPitch) Parameter Type Description newCameraPitch unsigned char \u0026mdash; unsigned char GetCameraYaw() void SetCameraYaw(unsigned char newCameraYaw) Parameter Type Description newCameraYaw unsigned char \u0026mdash; unsigned char GetPawnType() void SetPawnType(unsigned char newPawnType) Parameter Type Description newPawnType unsigned char \u0026mdash; unsigned char GetReplicatedWorstNetQualityBeyondLatency() void SetReplicatedWorstNetQualityBeyondLatency(unsigned char newReplicatedWorstNetQualityBeyondLatency) Parameter Type Description newReplicatedWorstNetQualityBeyondLatency unsigned char \u0026mdash; CameraSettingsActorWrapper GetPersistentCamera() const SteamID GetPartyLeader() void SetPartyLeader(UniqueIDWrapper newPartyLeader) Parameter Type Description newPartyLeader UniqueIDWrapper \u0026mdash; UniqueIDWrapper GetPartyLeaderID() float GetDodgeInputThreshold() void SetDodgeInputThreshold(float newDodgeInputThreshold) Parameter Type Description newDodgeInputThreshold float \u0026mdash; float GetSteeringSensitivity() void SetSteeringSensitivity(float newSteeringSensitivity) Parameter Type Description newSteeringSensitivity float \u0026mdash; float GetAirControlSensitivity() void SetAirControlSensitivity(float newAirControlSensitivity) Parameter Type Description newAirControlSensitivity float \u0026mdash; float GetNextTimeRestrictedStatEventAllowedTime() void SetNextTimeRestrictedStatEventAllowedTime(float newNextTimeRestrictedStatEventAllowedTime) Parameter Type Description newNextTimeRestrictedStatEventAllowedTime float \u0026mdash; float GetLastTimeRestrictedStatEventTime() void SetLastTimeRestrictedStatEventTime(float newLastTimeRestrictedStatEventTime) Parameter Type Description newLastTimeRestrictedStatEventTime float \u0026mdash; int GetTimeTillItem() void SetTimeTillItem(int newTimeTillItem) Parameter Type Description newTimeTillItem int \u0026mdash; int GetMaxTimeTillItem() void SetMaxTimeTillItem(int newMaxTimeTillItem) Parameter Type Description newMaxTimeTillItem int \u0026mdash; int GetBoostPickups() void SetBoostPickups(int newBoostPickups) Parameter Type Description newBoostPickups int \u0026mdash; int GetBallTouches() void SetBallTouches(int newBallTouches) Parameter Type Description newBallTouches int \u0026mdash; int GetCarTouches() void SetCarTouches(int newCarTouches) Parameter Type Description newCarTouches int \u0026mdash; PriWrapper GetReplacingBotPRI() void SetReplacingBotPRI(PriWrapper newReplacingBotPRI) Parameter Type Description newReplacingBotPRI PriWrapper \u0026mdash; unsigned long long GetClubID() void SetClubID(unsigned long long newClubID) Parameter Type Description newClubID unsigned long long \u0026mdash; UnrealStringWrapper GetPublicIP() int GetSpectatorShortcut() void SetSpectatorShortcut(int newSpectatorShortcut) Parameter Type Description newSpectatorShortcut int \u0026mdash; ClubDetailsWrapper GetClubDetails() void __ClubID__ChangeNotifyFunc() void __PREI__ChangeNotifyFunc() void __ReplicatedWorstNetQualityBeyondLatency__ChangeNotifyFunc() void eventDestroyed() void OnSpectatorShortcutChanged() void SetSpectatorShortcut2(int InShortcut) Parameter Type Description InShortcut int \u0026mdash; void ServerSetPublicIP(std::string IP) Parameter Type Description IP std::string \u0026mdash; void OnUniqueIdChanged() void UpdatePlayerAvatarBorder() void UpdatePlayerBanner() void ClientAchievementProgression(int AchievementId, unsigned char AchievementType, float Progress, float MaxProgress) Parameter Type Description AchievementId int \u0026mdash; AchievementType unsigned char \u0026mdash; Progress float \u0026mdash; MaxProgress float \u0026mdash; void ClientUnlockAchievement(int AchievementId, unsigned char AchievementType) Parameter Type Description AchievementId int \u0026mdash; AchievementType unsigned char \u0026mdash; void ServerSetPlayerActivatedFX(FXActorWrapper FX) Parameter Type Description FX FXActorWrapper \u0026mdash; void UpdateCarLocalPlayer() void OnReplacingBotPRIChanged() void OnTeamChanged() void ClearBotReplacement() void ReportCheater(std::string Reason) Parameter Type Description Reason std::string \u0026mdash; bool ValidateLoadoutTeamPaints() bool ValidateLoadoutSlots() void ValidateLoadoutDLC() void OnStartVoteToForfeitDisabledChanged() void SetStartVoteToForfeitDisabled(unsigned long bDisabled) Parameter Type Description bDisabled unsigned long \u0026mdash; void ServerVoteToForfeit() void SetUserCarPreferences(float NewDodgeThreshold, float NewSteeringSensitivity, float NewAirControlSensitivity) Parameter Type Description NewDodgeThreshold float \u0026mdash; NewSteeringSensitivity float \u0026mdash; NewAirControlSensitivity float \u0026mdash; void ServerSetUserCarPreferences(float NewDodgeThreshold, float NewSteeringSensitivity, float NewAirControlSensitivity) Parameter Type Description NewDodgeThreshold float \u0026mdash; NewSteeringSensitivity float \u0026mdash; NewAirControlSensitivity float \u0026mdash; int ValidateUserInt(std::string Reason, int NewValue, int Min, int Max) Parameter Type Description Reason std::string \u0026mdash; NewValue int \u0026mdash; Min int \u0026mdash; Max int \u0026mdash; float ValidateUserFloat(std::string Reason, float NewValue, float Min, float Max) Parameter Type Description Reason std::string \u0026mdash; NewValue float \u0026mdash; Min float \u0026mdash; Max float \u0026mdash; void OnPawnTypeChanged() void SetWaitingPlayer(unsigned long B) Parameter Type Description B unsigned long \u0026mdash; void SetPawnType2(unsigned char NewPawnType) Parameter Type Description NewPawnType unsigned char \u0026mdash; bool IsPlayer() bool IsEditor() bool IsSpectator() void ServerSpectate() void ClientChangeTeamFailed(int TeamNum) Parameter Type Description TeamNum int \u0026mdash; void ServerChangeTeam(int TeamNum) Parameter Type Description TeamNum int \u0026mdash; void ReplicatePodiumTitles() void OnMatchAdmin() void OnMVPChange() void NotifyWonMVP() bool IsInvalidName() bool IsInWarmUpMode() void SetReady(unsigned long bNewReady) Parameter Type Description bNewReady unsigned long \u0026mdash; void ServerMatchAdminSetPaused(unsigned long bPause) Parameter Type Description bPause unsigned long \u0026mdash; void ServerMatchAdminSetScoreAndTime(int NewScoreTeam0, int NewScoreTeam1, int SecondsRemaining, unsigned long bOverTime, unsigned long bRestartRound) Parameter Type Description NewScoreTeam0 int \u0026mdash; NewScoreTeam1 int \u0026mdash; SecondsRemaining int \u0026mdash; bOverTime unsigned long \u0026mdash; bRestartRound unsigned long \u0026mdash; void SetMatchAdmin(unsigned long bIsMatchAdmin) Parameter Type Description bIsMatchAdmin unsigned long \u0026mdash; void ServerReadyUp() bool ShouldBroadCastWelcomeMessage(unsigned long bExiting) Parameter Type Description bExiting unsigned long \u0026mdash; void UpdateOnlineProductStats() void SetWaitingStartTime2() void OnRespawnTimeRemainingChanged() void SetRespawnTime2(int NewTime) Parameter Type Description NewTime int \u0026mdash; void ClientScoredGoal(Vector \u0026amp;BallHitLocation) Parameter Type Description BallHitLocation Vector \u0026mdash; void OnScoredGoal(Vector \u0026amp;BallHitLocation) Parameter Type Description BallHitLocation Vector \u0026mdash; void OnRep_SteeringSensitivity() void OnRep_ClientScorePoint() void ResetScore() void RemovePoints(int Points) Parameter Type Description Points int \u0026mdash; void ScorePoint2(int AdditionalScore) Parameter Type Description AdditionalScore int \u0026mdash; bool CanAwardTimeRestrictedStatEvent() void RecordTimeRestrictedStatEvent() void ResetTimeRestrictedStatEvent() int GetMatchXP() void CommitStats() void UpdateFromLoadout() void UpdateUserCarPreferences(AirControlComponentWrapper AirControlComponent) Parameter Type Description AirControlComponent AirControlComponentWrapper \u0026mdash; void HandleAirControl(AirControlComponentWrapper AirControlComp) Parameter Type Description AirControlComp AirControlComponentWrapper \u0026mdash; void SetCar2(CarWrapper NewCar) Parameter Type Description NewCar CarWrapper \u0026mdash; bool IsClientPlayerPRI() bool IsLocalPlayerPRI() void Unregister() void AddLocalPlayerToGameEvent() void OnLoadoutsSetInternal() bool AreLoadoutsSet() void OnLoadoutsOnlineSet() void OnLoadoutsSet2() void RemoveCertifiedProductStat(unsigned long long InstanceID) Parameter Type Description InstanceID unsigned long long \u0026mdash; void InitLoadoutAttributesForTeam(PriXWrapper PRI) Parameter Type Description PRI PriXWrapper \u0026mdash; bool ShouldValidateOnlineProducts() void OnSplitScreenStatusChanged() void ServerSplitScreenStatusChanged(unsigned long bInSplitScreen) Parameter Type Description bInSplitScreen unsigned long \u0026mdash; void UpdateSplitScreenStatus() void OnPartyLeaderChanged() void ServerSetPartyLeader(SteamID \u0026amp;InPartyLeader, unsigned long bInParty) Parameter Type Description InPartyLeader SteamID \u0026mdash; bInParty unsigned long \u0026mdash; void SetPartyLeader2(SteamID \u0026amp;InPartyLeader, unsigned long bInParty) Parameter Type Description InPartyLeader SteamID \u0026mdash; bInParty unsigned long \u0026mdash; void UpdatePartyStatus() void OnSkillTierChanged() void ReplicateSkillTier(int NewTier) Parameter Type Description NewTier int \u0026mdash; void OnTitleChanged() void SyncPlayerTitle() void UpdateTitleFromLoadout() void UpdateTitle2() void GetNewFriendKey() void ServerSetPlayerHistoryKey(unsigned char *HistoryKeyArray) Parameter Type Description HistoryKeyArray unsigned char * \u0026mdash; void OnRep_UniqueId() void EventOwnerChanged(PriWrapper PRI) Parameter Type Description PRI PriWrapper \u0026mdash; void EventSpectatorShortcutChanged(PriWrapper PRI) Parameter Type Description PRI PriWrapper \u0026mdash; void EventServerAchievementProgression(PriWrapper PRI, int AchievementId, unsigned char AchievementType, float Progress, float MaxProgress) Parameter Type Description PRI PriWrapper \u0026mdash; AchievementId int \u0026mdash; AchievementType unsigned char \u0026mdash; Progress float \u0026mdash; MaxProgress float \u0026mdash; void EventStartVoteToForfeitDisabledChanged(PriWrapper PRI) Parameter Type Description PRI PriWrapper \u0026mdash; void EventCarPreUpdate(PriWrapper PRI) Parameter Type Description PRI PriWrapper \u0026mdash; void EventVanityChanged() "},{"id":138,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/PriXWrapper/","title":"PriXWrapper","parent":"Game Object","content":" View Implementation void eventDestroyed() void OnUniqueIdChanged() void SetUniqueId(SteamID \u0026amp;PlayerUniqueId) Parameter Type Description PlayerUniqueId SteamID \u0026mdash; void UnregisterPlayerFromSession() void RegisterPlayerWithSession() void OnTeamChanged() void SetPlayerTeam(TeamInfoWrapper NewTeam) Parameter Type Description NewTeam TeamInfoWrapper \u0026mdash; void eventOnOwnerChanged() void eventSetPlayerName(std::string S) Parameter Type Description S std::string \u0026mdash; void EventDestroyed(PriXWrapper PRI) Parameter Type Description PRI PriXWrapper \u0026mdash; void EventTeamChanged(PriXWrapper PRI) Parameter Type Description PRI PriXWrapper \u0026mdash; void EventUniqueIdChanged(PriXWrapper PRI) Parameter Type Description PRI PriXWrapper \u0026mdash; void EventPlayerNameChanged(PriXWrapper PRI) Parameter Type Description PRI PriXWrapper \u0026mdash; "},{"id":139,"href":"/bakkesmod_api/Classes/Wrappers/Items/Assets/ProductAssetBodyWrapper/","title":"ProductAssetBodyWrapper","parent":"Assets","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const ProductEquipProfileWrapper GetEquipProfile() const _NODISCARD bool CanEquip(const ProductWrapper \u0026amp;product_wrappper) const Parameter Type Description product_wrappper ProductWrapper \u0026mdash; "},{"id":140,"href":"/bakkesmod_api/Classes/Wrappers/Items/Assets/ProductAssetWrapper/","title":"ProductAssetWrapper","parent":"Assets","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const ProductWrapper GetProduct() const "},{"id":141,"href":"/bakkesmod_api/Classes/Wrappers/Items/Attributes/ProductAttribute_AnimatedSkinLabelWrapper/","title":"ProductAttribute_AnimatedSkinLabelWrapper","parent":"Attributes","content":" View Implementation UnrealStringWrapper GetAnimatedLabel() "},{"id":142,"href":"/bakkesmod_api/Classes/Wrappers/Items/Attributes/ProductAttribute_BlueprintCostWrapper/","title":"ProductAttribute_BlueprintCostWrapper","parent":"Attributes","content":" View Implementation int GetCost() "},{"id":143,"href":"/bakkesmod_api/Classes/Wrappers/Items/Attributes/ProductAttribute_BlueprintWrapper/","title":"ProductAttribute_BlueprintWrapper","parent":"Attributes","content":" View Implementation int GetProductID() int GetCachedBlueprintSeriesID() UnrealStringWrapper GetSortLabel() "},{"id":144,"href":"/bakkesmod_api/Classes/Wrappers/Items/Attributes/ProductAttribute_BodyCompatibilityWrapper/","title":"ProductAttribute_BodyCompatibilityWrapper","parent":"Attributes","content":" View Implementation ArrayWrapper GetCompatibleBodies() "},{"id":145,"href":"/bakkesmod_api/Classes/Wrappers/Items/Attributes/ProductAttribute_CertifiedWrapper/","title":"ProductAttribute_CertifiedWrapper","parent":"Attributes","content":" View Implementation std::string GetValueKeyName() int GetStatId() int GetStatValue() UnrealStringWrapper GetSortLabel() UnrealStringWrapper GetDescription() UnrealStringWrapper GetRankLabel() int GetRank() "},{"id":146,"href":"/bakkesmod_api/Classes/Wrappers/Items/Attributes/ProductAttribute_CurrencyWrapper/","title":"ProductAttribute_CurrencyWrapper","parent":"Attributes","content":" View Implementation int GetCurrencyID() UnrealStringWrapper GetSortLabel() "},{"id":147,"href":"/bakkesmod_api/Classes/Wrappers/Items/Attributes/ProductAttribute_PaintedWrapper/","title":"ProductAttribute_PaintedWrapper","parent":"Attributes","content":" View Implementation int GetPaintID() UnrealStringWrapper GetSortLabel() "},{"id":148,"href":"/bakkesmod_api/Classes/Wrappers/Items/Attributes/ProductAttribute_QualityWrapper/","title":"ProductAttribute_QualityWrapper","parent":"Attributes","content":" View Implementation unsigned char GetQuality() UnrealStringWrapper ProductQualityToString(unsigned char InQuality) Parameter Type Description InQuality unsigned char \u0026mdash; "},{"id":149,"href":"/bakkesmod_api/Classes/Wrappers/Items/Attributes/ProductAttribute_SpecialEditionSettingsWrapper/","title":"ProductAttribute_SpecialEditionSettingsWrapper","parent":"Attributes","content":" View Implementation SpecialEdition GetEditions() "},{"id":150,"href":"/bakkesmod_api/Classes/Wrappers/Items/Attributes/ProductAttribute_SpecialEditionWrapper/","title":"ProductAttribute_SpecialEditionWrapper","parent":"Attributes","content":" View Implementation int GetEditionID() UnrealStringWrapper GetSortLabel() int GetOverrideProductID(int ProductID) Parameter Type Description ProductID int \u0026mdash; "},{"id":151,"href":"/bakkesmod_api/Classes/Wrappers/Items/Attributes/ProductAttribute_TeamEditionUploadWrapper/","title":"ProductAttribute_TeamEditionUploadWrapper","parent":"Attributes","content":" View Implementation ArrayWrapper GetSupportedTeamEditions() "},{"id":152,"href":"/bakkesmod_api/Classes/Wrappers/Items/Attributes/ProductAttribute_TeamEditionWrapper/","title":"ProductAttribute_TeamEditionWrapper","parent":"Attributes","content":" View Implementation int GetId() UnrealStringWrapper GetSortLabel() "},{"id":153,"href":"/bakkesmod_api/Classes/Wrappers/Items/Attributes/ProductAttribute_UnlockMethodWrapper/","title":"ProductAttribute_UnlockMethodWrapper","parent":"Attributes","content":" View Implementation unsigned char GetUnlockMethod() "},{"id":154,"href":"/bakkesmod_api/Classes/Wrappers/Items/Attributes/ProductAttributeWrapper/","title":"ProductAttributeWrapper","parent":"Attributes","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const std::string GetAttributeType() std::string GetTypename() UnrealStringWrapper GetLabel() "},{"id":155,"href":"/bakkesmod_api/Classes/Wrappers/Items/Assets/ProductEquipProfileWrapper/","title":"ProductEquipProfileWrapper","parent":"Assets","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const _NODISCARD std::vector\u0026lt; int \u0026gt; GetForcedProducts() const _NODISCARD std::vector\u0026lt; int \u0026gt; GetDefaultProducts() const _NODISCARD bool CanEquip(const ProductWrapper \u0026amp;product_wrappper) const Parameter Type Description product_wrappper ProductWrapper \u0026mdash; "},{"id":156,"href":"/bakkesmod_api/Structs/Wrappers/ProductInstanceID/","title":"ProductInstanceID","parent":"Wrappers","content":" View Implementation unsigned long long upper_bits Default value: none\nunsigned long long lower_bits Default value: none\n"},{"id":157,"href":"/bakkesmod_api/Classes/Wrappers/Items/ProductPaintWrapper/","title":"ProductPaintWrapper","parent":"Items","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const _NODISCARD std::string GetLabel() const _NODISCARD bool GetbVisible() const _NODISCARD int GetId() const _NODISCARD unsigned char GetFinishType() const LinearColor GetColors() const "},{"id":158,"href":"/bakkesmod_api/Enums/PRODUCTQUALITY/","title":"PRODUCTQUALITY","parent":"Enums","content":" View Implementation Possible item rarities\nCommon = 0\nUncommon = 1\nRare = 2\nVeryRare = 3\nImport = 4\nExotic = 5\nBlackMarket = 6\nPremium = 7\nLimited = 8\nLegacy = 9\nMAX = 10\n"},{"id":159,"href":"/bakkesmod_api/Classes/Wrappers/Items/ProductSlotWrapper/","title":"ProductSlotWrapper","parent":"Items","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const ProductWrapper GetDefaultProduct() const UnrealStringWrapper GetLabel() UnrealStringWrapper GetPluralLabel() UnrealStringWrapper GetDescription() UnrealStringWrapper GetOnlineLabel() int GetSlotIndex() "},{"id":160,"href":"/bakkesmod_api/Classes/Wrappers/Items/ProductTemplateWrapper/","title":"ProductTemplateWrapper","parent":"Items","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const ProductSlotWrapper GetSlot() unsigned char GetUnlockMethod() unsigned char GetQuality() ProductWrapper GetRequiredProduct() unsigned long GetbLicensed() "},{"id":161,"href":"/bakkesmod_api/Classes/Wrappers/Items/ProductTradeInWrapper/","title":"ProductTradeInWrapper","parent":"Items","content":" View Implementation ArrayWrapper GetProducts() const _NODISCARD bool IsNull() const operator bool() const "},{"id":162,"href":"/bakkesmod_api/Classes/Wrappers/Items/ProductWrapper/","title":"ProductWrapper","parent":"Items","content":" View Implementation bool IsNull() operator bool() bool IsFavorited() const std::string GetAssetPackageName() UnrealStringWrapper GetAssetPath() UnrealStringWrapper GetLabel() UnrealStringWrapper GetAsciiLabel() UnrealStringWrapper GetLongLabel() bool IsPaintable() UnrealStringWrapper GetDisplayLabelSlot() unsigned char GetQuality() bool IsContainerKey() bool IsCurrency() bool IsBlueprint() bool IsContainerUnlocked() bool IsContainer() bool IsSchematic() bool IsPlatformExclusive() bool IsLicensed() bool CanEquip() ArrayWrapper GetAttributes() UnrealStringWrapper GetSortLabel() UnrealStringWrapper GetThumbnailAssetPath() UnrealStringWrapper GetThumbnailPackageNameForLoad() std::string GetThumbnailPackageName() std::string GetThumbnailAssetName() UnrealStringWrapper GetTrademarkLabel() int GetID() "},{"id":163,"href":"/bakkesmod_api/Structs/Wrappers/ProfileCameraSettings/","title":"ProfileCameraSettings","parent":"Wrappers","content":" View Implementation A player's camera Settings. Access with CameraWrapper.GetCameraSettings()\nfloat FOV Default value: none\nfloat Height Default value: none\nfloat Pitch Default value: none\nfloat Distance Default value: none\nfloat Stiffness Default value: none\nfloat SwivelSpeed Default value: none\nfloat TransitionSpeed Default value: none\n"},{"id":164,"href":"/bakkesmod_api/Structs/Wrappers/Quat/","title":"Quat","parent":"Wrappers","content":" View Implementation A description of a 4D space. Just trust it works and don't think too hard. Used RotatorToQuat and RotateVectorWithQuat to rotate a vector in 3D space using a Rotator and Quat\nfloat X Default value: none\nfloat Y Default value: none\nfloat Z Default value: none\nfloat W Default value: none\n"},{"id":165,"href":"/bakkesmod_api/Constants/quat_norm/","title":"quat_norm","parent":"Constants","content":" View Implementation Used in linmath.h\nquat_norm = vec4_norm\n"},{"id":166,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RBActorWrapper/","title":"RBActorWrapper","parent":"Game Object","content":" View Implementation float GetMaxLinearSpeed() void SetMaxLinearSpeed(float newMaxLinearSpeed) Parameter Type Description newMaxLinearSpeed float \u0026mdash; float GetMaxAngularSpeed() void SetMaxAngularSpeed(float newMaxAngularSpeed) Parameter Type Description newMaxAngularSpeed float \u0026mdash; unsigned long GetbDisableSleeping() void SetbDisableSleeping(unsigned long newbDisableSleeping) Parameter Type Description newbDisableSleeping unsigned long \u0026mdash; unsigned long GetbReplayActor() void SetbReplayActor(unsigned long newbReplayActor) Parameter Type Description newbReplayActor unsigned long \u0026mdash; unsigned long GetbFrozen() void SetbFrozen(unsigned long newbFrozen) Parameter Type Description newbFrozen unsigned long \u0026mdash; unsigned long GetbIgnoreSyncing() void SetbIgnoreSyncing(unsigned long newbIgnoreSyncing) Parameter Type Description newbIgnoreSyncing unsigned long \u0026mdash; unsigned long GetbPhysInitialized() RBState GetOldRBState() void SetOldRBState(RBState newOldRBState) Parameter Type Description newOldRBState RBState \u0026mdash; RBState GetRBState() void SetRBState(RBState newRBState) Parameter Type Description newRBState RBState \u0026mdash; RBState GetReplicatedRBState() void SetReplicatedRBState(RBState newReplicatedRBState) Parameter Type Description newReplicatedRBState RBState \u0026mdash; RBState GetClientCorrectionRBState() void SetClientCorrectionRBState(RBState newClientCorrectionRBState) Parameter Type Description newClientCorrectionRBState RBState \u0026mdash; WorldContactData GetWorldContact() void SetWorldContact(WorldContactData newWorldContact) Parameter Type Description newWorldContact WorldContactData \u0026mdash; Vector GetSyncErrorLocation() float GetSyncErrorAngle() Vector GetSyncErrorAxis() FXActorWrapper GetFXActorArchetype() void SetFXActorArchetype(FXActorWrapper newFXActorArchetype) Parameter Type Description newFXActorArchetype FXActorWrapper \u0026mdash; FXActorWrapper GetFXActor() void SetFXActor(FXActorWrapper newFXActor) Parameter Type Description newFXActor FXActorWrapper \u0026mdash; int GetLastRBCollisionsFrame() RBActorWrapper GetWeldedActor() RBActorWrapper GetWeldedTo() float GetPreWeldMass() void SetMass(float NewMass) Parameter Type Description NewMass float \u0026mdash; void SetConstrained3D(Vector \u0026amp;LinearLower, Vector \u0026amp;LinearUpper, Vector \u0026amp;AngularLower, Vector \u0026amp;AngularUpper) Parameter Type Description LinearLower Vector \u0026mdash; LinearUpper Vector \u0026mdash; AngularLower Vector \u0026mdash; AngularUpper Vector \u0026mdash; void SetConstrained2D(unsigned long bConstrain2D) Parameter Type Description bConstrain2D unsigned long \u0026mdash; void SetPhysicsState(RBState \u0026amp;NewState) Parameter Type Description NewState RBState \u0026mdash; void SetFrozen(unsigned long bEnabled) Parameter Type Description bEnabled unsigned long \u0026mdash; void SetMaxAngularSpeed2(float NewMaxSpeed) Parameter Type Description NewMaxSpeed float \u0026mdash; void SetMaxLinearSpeed2(float NewMaxSpeed) Parameter Type Description NewMaxSpeed float \u0026mdash; void AddTorque(Vector \u0026amp;Torque, unsigned char ForceMode) Parameter Type Description Torque Vector \u0026mdash; ForceMode unsigned char \u0026mdash; void AddForce(Vector \u0026amp;Force, unsigned char ForceMode) Parameter Type Description Force Vector \u0026mdash; ForceMode unsigned char \u0026mdash; void UnWeldRBActor(RBActorWrapper Other) Parameter Type Description Other RBActorWrapper \u0026mdash; void WeldRBActor2(RBActorWrapper Other, Vector \u0026amp;WeldOffset, Rotator \u0026amp;WeldRotation) Parameter Type Description Other RBActorWrapper \u0026mdash; WeldOffset Vector \u0026mdash; WeldRotation Rotator \u0026mdash; void ReInitRBPhys() void TerminateRBPhys() Vector GetCurrentRBLocation() RBState GetCurrentRBState() int GetPhysicsFrame() float GetPhysicsTime() void InitAk() void eventPreBeginPlay() "},{"id":167,"href":"/bakkesmod_api/Structs/Wrappers/RBState/","title":"RBState","parent":"Wrappers","content":" View Implementation Quat Quaternion Default value: none\nVector Location Default value: none\nVector LinearVelocity Default value: none\nVector AngularVelocity Default value: none\nfloat Time Default value: none\nunsigned long bSleeping Default value: none\nunsigned long bNewData Default value: none\n"},{"id":168,"href":"/bakkesmod_api/Structs/Wrappers/RecordedSample/","title":"RecordedSample","parent":"Wrappers","content":" View Implementation A single sample of data recorded for performance graphs. Get with SampleHistoryWrapper\nfloat Low Default value: none\nfloat High Default value: none\n"},{"id":169,"href":"/bakkesmod_api/Enums/Region/","title":"Region","parent":"Enums","content":" View Implementation USE = 0\nEU = 1\nUSW = 2\nASC = 3\nASM = 4\nJPN = 5\nME = 6\nOCE = 7\nSAF = 8\nSAM = 9\nIND = 10\n"},{"id":170,"href":"/bakkesmod_api/Classes/Wrappers/GameEvent/ReplayDirectorWrapper/","title":"ReplayDirectorWrapper","parent":"Game Event","content":" View Implementation float GetSlomoPreScoreTime() void SetSlomoPreScoreTime(float newSlomoPreScoreTime) Parameter Type Description newSlomoPreScoreTime float \u0026mdash; float GetSlomoPostScoreTime() void SetSlomoPostScoreTime(float newSlomoPostScoreTime) Parameter Type Description newSlomoPostScoreTime float \u0026mdash; float GetSlomoDefendTime() void SetSlomoDefendTime(float newSlomoDefendTime) Parameter Type Description newSlomoDefendTime float \u0026mdash; float GetSlomoDefendDistance() void SetSlomoDefendDistance(float newSlomoDefendDistance) Parameter Type Description newSlomoDefendDistance float \u0026mdash; float GetSlomoTimeDilation() void SetSlomoTimeDilation(float newSlomoTimeDilation) Parameter Type Description newSlomoTimeDilation float \u0026mdash; float GetMinReplayTime() void SetMinReplayTime(float newMinReplayTime) Parameter Type Description newMinReplayTime float \u0026mdash; float GetMaxReplayTime() void SetMaxReplayTime(float newMaxReplayTime) Parameter Type Description newMaxReplayTime float \u0026mdash; float GetReplayPadding() void SetReplayPadding(float newReplayPadding) Parameter Type Description newReplayPadding float \u0026mdash; float GetHighlightReplayDuration() void SetHighlightReplayDuration(float newHighlightReplayDuration) Parameter Type Description newHighlightReplayDuration float \u0026mdash; float GetTimeBeforeHighlightReplay() void SetTimeBeforeHighlightReplay(float newTimeBeforeHighlightReplay) Parameter Type Description newTimeBeforeHighlightReplay float \u0026mdash; ReplaySoccarWrapper GetReplay() void SetReplay(ReplaySoccarWrapper newReplay) Parameter Type Description newReplay ReplaySoccarWrapper \u0026mdash; ActorWrapper GetFocusCar() void SetFocusCar(ActorWrapper newFocusCar) Parameter Type Description newFocusCar ActorWrapper \u0026mdash; float GetFocusCarChangeTime() void SetFocusCarChangeTime(float newFocusCarChangeTime) Parameter Type Description newFocusCarChangeTime float \u0026mdash; ActorWrapper GetFocusBall() void SetFocusBall(ActorWrapper newFocusBall) Parameter Type Description newFocusBall ActorWrapper \u0026mdash; float GetScoreTime() void SetScoreTime(float newScoreTime) Parameter Type Description newScoreTime float \u0026mdash; int GetScoreHitIndex() void SetScoreHitIndex(int newScoreHitIndex) Parameter Type Description newScoreHitIndex int \u0026mdash; GoalWrapper GetScoredGoal() void SetScoredGoal(GoalWrapper newScoredGoal) Parameter Type Description newScoredGoal GoalWrapper \u0026mdash; ReplayScoreData GetReplayScoreData() unsigned long GetbSlomo() void SetbSlomo(unsigned long newbSlomo) Parameter Type Description newbSlomo unsigned long \u0026mdash; unsigned long GetbSlomoForDefender() void SetbSlomoForDefender(unsigned long newbSlomoForDefender) Parameter Type Description newbSlomoForDefender unsigned long \u0026mdash; unsigned long GetbAutoSave() void SetbAutoSave(unsigned long newbAutoSave) Parameter Type Description newbAutoSave unsigned long \u0026mdash; int GetFocusHitIndex() void SetFocusHitIndex(int newFocusHitIndex) Parameter Type Description newFocusHitIndex int \u0026mdash; int GetFocusCarIdx() void SetFocusCarIdx(int newFocusCarIdx) Parameter Type Description newFocusCarIdx int \u0026mdash; float GetReplayStartGameTime() void SetReplayStartGameTime(float newReplayStartGameTime) Parameter Type Description newReplayStartGameTime float \u0026mdash; float GetBallSpawnTime() void SetBallSpawnTime(float newBallSpawnTime) Parameter Type Description newBallSpawnTime float \u0026mdash; ServerWrapper GetSoccarGame() void SetSoccarGame(ServerWrapper newSoccarGame) Parameter Type Description newSoccarGame ServerWrapper \u0026mdash; unsigned char GetScoredOnTeam() void SetScoredOnTeam(unsigned char newScoredOnTeam) Parameter Type Description newScoredOnTeam unsigned char \u0026mdash; int GetForceCutToFocusActors() void SetForceCutToFocusActors(int newForceCutToFocusActors) Parameter Type Description newForceCutToFocusActors int \u0026mdash; void HandleReplayFinished(ReplayWrapper InReplay) Parameter Type Description InReplay ReplayWrapper \u0026mdash; bool ShouldSlomo() void UpdateSlomo() void UpdateFocusActors() void PlayRandomHighlight() int GetNextHighlightFrame() void SetAutoSave() void SaveUserKeyframe() void BuildFocusCars() void SetSlomo2(unsigned long bNewSlomo) Parameter Type Description bNewSlomo unsigned long \u0026mdash; void eventTick(float DeltaTime) Parameter Type Description DeltaTime float \u0026mdash; void eventDestroyed() float GetReplayTimeSeconds() void SetFocusActors(ActorWrapper NewCar, ActorWrapper NewBall) Parameter Type Description NewCar ActorWrapper \u0026mdash; NewBall ActorWrapper \u0026mdash; float GetReplayStartTime() void SetSlomoForDefender(BallWrapper Ball, int DefendingTeam) Parameter Type Description Ball BallWrapper \u0026mdash; DefendingTeam int \u0026mdash; void OnScoreDataChanged() void HandleScoreUpdated(TeamWrapper Team) Parameter Type Description Team TeamWrapper \u0026mdash; void HandleAllTeamsCreated(TeamGameEventWrapper TeamGame) Parameter Type Description TeamGame TeamGameEventWrapper \u0026mdash; void RecordPlayers() void HandleGameStateChanged(GameEventWrapper G) Parameter Type Description G GameEventWrapper \u0026mdash; void OnSoccarGameSet() void SetGameEvent(ServerWrapper InGameEvent) Parameter Type Description InGameEvent ServerWrapper \u0026mdash; void EventFocusCarChanged(ActorWrapper NewFocusCar) Parameter Type Description NewFocusCar ActorWrapper \u0026mdash; void EventAutoSaveChanged(ReplayDirectorWrapper Director) Parameter Type Description Director ReplayDirectorWrapper \u0026mdash; void EventScoreDataChanged(ReplayDirectorWrapper Director) Parameter Type Description Director ReplayDirectorWrapper \u0026mdash; void EventReplayFinished(ReplayDirectorWrapper Director) Parameter Type Description Director ReplayDirectorWrapper \u0026mdash; "},{"id":171,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/ReplayManagerWrapper/","title":"ReplayManagerWrapper","parent":"Game Object","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const _NODISCARD bool LoadReplaysFromDemoFolder() const ReplaySoccarWrapper GetLoadedReplays() const _NODISCARD bool IsLoadingReplayHeaders() const void PlayReplay(const ReplayWrapper \u0026amp;replay, const std::string \u0026amp;map=\u0026quot;\u0026quot;, float start_time=0) const Parameter Type Description replay ReplayWrapper \u0026mdash; map const std::string \u0026amp; \u0026mdash; start_time float \u0026mdash; void PlayReplayFile(const std::string \u0026amp;file_path, const std::string \u0026amp;map=\u0026quot;\u0026quot;, float start_time=0) const Parameter Type Description file_path const std::string \u0026amp; \u0026mdash; map const std::string \u0026amp; \u0026mdash; start_time float \u0026mdash; void PlayReplayId(const std::string \u0026amp;replay_id, const std::string \u0026amp;map=\u0026quot;\u0026quot;, float start_time=0) const Parameter Type Description replay_id const std::string \u0026amp; \u0026mdash; map const std::string \u0026amp; \u0026mdash; start_time float \u0026mdash; "},{"id":172,"href":"/bakkesmod_api/Structs/Core/ReplayPlayerStats/","title":"ReplayPlayerStats","parent":"Core","content":" View Implementation std::string name Default value: none\nunsigned char platform Default value {}\nunsigned long long online_id Default value {}\nint team Default value {}\nint score Default value {}\nint goals Default value {}\nint assists Default value {}\nint saves Default value {}\nint shots Default value {}\nbool is_bot Default value {}\n"},{"id":173,"href":"/bakkesmod_api/Structs/Wrappers/ReplayScoreData/","title":"ReplayScoreData","parent":"Wrappers","content":" View Implementation Stats shown in a replay. Get with ReplayDirectorWrapper.GetReplayScoreData()\nuintptr_t ScoredBy Default value: none\nuintptr_t AssistedBy Default value: none\nfloat Speed Default value: none\nfloat Time Default value: none\nunsigned char ScoreTeam Default value: none\n"},{"id":174,"href":"/bakkesmod_api/Classes/Wrappers/ReplayServerWrapper/","title":"ReplayServerWrapper","parent":"Wrappers","content":" View Implementation ReplayServerWrapper(const ReplayServerWrapper \u0026amp;other) Parameter Type Description other ReplayServerWrapper \u0026mdash; ReplayServerWrapper operator=(ReplayServerWrapper rhs) Parameter Type Description rhs ReplayServerWrapper \u0026mdash; ~ReplayServerWrapper() ActorWrapper GetViewTarget() ReplayWrapper GetReplay() float GetReplayTimeElapsed() int GetReplayFPS() int GetCurrentReplayFrame() void AddKeyFrame(int frame, std::string name) Parameter Type Description frame int \u0026mdash; name std::string \u0026mdash; void RemoveKeyFrame(int frame) Parameter Type Description frame int \u0026mdash; void SkipToFrame(int frame) Parameter Type Description frame int \u0026mdash; void SkipToTime(float time) Parameter Type Description time float \u0026mdash; void StartPlaybackAtFrame(int frame) Parameter Type Description frame int \u0026mdash; void StartPlaybackAtTime(float time) Parameter Type Description time float \u0026mdash; "},{"id":175,"href":"/bakkesmod_api/Classes/Wrappers/GameEvent/ReplaySoccarWrapper/","title":"ReplaySoccarWrapper","parent":"Game Event","content":" View Implementation ScoredGoal GetGoals() const Highlight GetHighlights() const ReplayPlayerStats GetPlayerStats() const int GetTeamSize() void SetTeamSize(int newTeamSize) Parameter Type Description newTeamSize int \u0026mdash; int GetUnfairTeamSize() void SetUnfairTeamSize(int newUnfairTeamSize) Parameter Type Description newUnfairTeamSize int \u0026mdash; unsigned long GetbUnfairBots() void SetbUnfairBots(unsigned long newbUnfairBots) Parameter Type Description newbUnfairBots unsigned long \u0026mdash; int GetPrimaryPlayerTeam() void SetPrimaryPlayerTeam(int newPrimaryPlayerTeam) Parameter Type Description newPrimaryPlayerTeam int \u0026mdash; int GetTeam0Score() void SetTeam0Score(int newTeam0Score) Parameter Type Description newTeam0Score int \u0026mdash; int GetTeam1Score() void SetTeam1Score(int newTeam1Score) Parameter Type Description newTeam1Score int \u0026mdash; void eventPreExport() void RemoveTimelineKeyframe(int KeyframeIndex) Parameter Type Description KeyframeIndex int \u0026mdash; void RecordUserEvent() void AddPlayer(PriWrapper PRI) Parameter Type Description PRI PriWrapper \u0026mdash; "},{"id":176,"href":"/bakkesmod_api/Classes/Wrappers/GameEvent/ReplayWrapper/","title":"ReplayWrapper","parent":"Game Event","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const UnrealStringWrapper GetReplayName() int GetEngineVersion() void SetEngineVersion(int newEngineVersion) Parameter Type Description newEngineVersion int \u0026mdash; int GetLicenseeVersion() void SetLicenseeVersion(int newLicenseeVersion) Parameter Type Description newLicenseeVersion int \u0026mdash; int GetNetVersion() void SetNetVersion(int newNetVersion) Parameter Type Description newNetVersion int \u0026mdash; int GetReplayVersion() void SetReplayVersion(int newReplayVersion) Parameter Type Description newReplayVersion int \u0026mdash; int GetReplayLastSaveVersion() void SetReplayLastSaveVersion(int newReplayLastSaveVersion) Parameter Type Description newReplayLastSaveVersion int \u0026mdash; int GetGameVersion() void SetGameVersion(int newGameVersion) Parameter Type Description newGameVersion int \u0026mdash; int GetBuildID() void SetBuildID(int newBuildID) Parameter Type Description newBuildID int \u0026mdash; int GetChangelist() void SetChangelist(int newChangelist) Parameter Type Description newChangelist int \u0026mdash; UnrealStringWrapper GetBuildVersion() int GetReserveMegabytes() void SetReserveMegabytes(int newReserveMegabytes) Parameter Type Description newReserveMegabytes int \u0026mdash; float GetRecordFPS() void SetRecordFPS(float newRecordFPS) Parameter Type Description newRecordFPS float \u0026mdash; float GetKeyframeDelay() void SetKeyframeDelay(float newKeyframeDelay) Parameter Type Description newKeyframeDelay float \u0026mdash; int GetMaxChannels() void SetMaxChannels(int newMaxChannels) Parameter Type Description newMaxChannels int \u0026mdash; int GetMaxReplaySizeMB() void SetMaxReplaySizeMB(int newMaxReplaySizeMB) Parameter Type Description newMaxReplaySizeMB int \u0026mdash; UnrealStringWrapper GetFilename() UnrealStringWrapper GetFilePath() const UnrealStringWrapper GetId() UnrealStringWrapper GetDate() std::string GetMapName() const int GetNumFrames() void SetNumFrames(int newNumFrames) Parameter Type Description newNumFrames int \u0026mdash; std::string GetMatchType() const UnrealStringWrapper GetPlayerName() unsigned long GetbFileCorrupted() void SetbFileCorrupted(unsigned long newbFileCorrupted) Parameter Type Description newbFileCorrupted unsigned long \u0026mdash; unsigned long GetbForceKeyframe() void SetbForceKeyframe(unsigned long newbForceKeyframe) Parameter Type Description newbForceKeyframe unsigned long \u0026mdash; unsigned long GetbLoadedNetPackages() void SetbLoadedNetPackages(unsigned long newbLoadedNetPackages) Parameter Type Description newbLoadedNetPackages unsigned long \u0026mdash; unsigned long GetbDebug() void SetbDebug(unsigned long newbDebug) Parameter Type Description newbDebug unsigned long \u0026mdash; unsigned char GetReplayState() void SetReplayState(unsigned char newReplayState) Parameter Type Description newReplayState unsigned char \u0026mdash; int GetCurrentFrame() void SetCurrentFrame(int newCurrentFrame) Parameter Type Description newCurrentFrame int \u0026mdash; int GetNextKeyframe() void SetNextKeyframe(int newNextKeyframe) Parameter Type Description newNextKeyframe int \u0026mdash; float GetCurrentTime() void SetCurrentTime(float newCurrentTime) Parameter Type Description newCurrentTime float \u0026mdash; float GetAccumulatedDeltaTime() void SetAccumulatedDeltaTime(float newAccumulatedDeltaTime) Parameter Type Description newAccumulatedDeltaTime float \u0026mdash; float GetTimeToSkipTo() void SetTimeToSkipTo(float newTimeToSkipTo) Parameter Type Description newTimeToSkipTo float \u0026mdash; int GetFrameToSkipTo() void SetFrameToSkipTo(int newFrameToSkipTo) Parameter Type Description newFrameToSkipTo int \u0026mdash; int GetPlayersOnlyTicks() void SetPlayersOnlyTicks(int newPlayersOnlyTicks) Parameter Type Description newPlayersOnlyTicks int \u0026mdash; float GetPlaybackTime() bool IsFromBeforeGameVersion(unsigned char BeforeGameVersion) Parameter Type Description BeforeGameVersion unsigned char \u0026mdash; bool IsFromBeforeReplayVersion(unsigned char BeforeReplayVersion) Parameter Type Description BeforeReplayVersion unsigned char \u0026mdash; void SetReplayName(std::string NewName) Parameter Type Description NewName std::string \u0026mdash; void RemoveTimelineKeyframe(int KeyframeIndex) Parameter Type Description KeyframeIndex int \u0026mdash; void eventTrimData(int FirstKeyframe, int FirstFrame) Parameter Type Description FirstKeyframe int \u0026mdash; FirstFrame int \u0026mdash; ReplayWrapper CreateCopy(float StartTime) Parameter Type Description StartTime float \u0026mdash; void ImportReplay(std::string Path) Parameter Type Description Path std::string \u0026mdash; void ExportReplay(std::string Path) Parameter Type Description Path std::string \u0026mdash; void SkipToFrame(int frame) Parameter Type Description frame int \u0026mdash; void SkipToTime(float time) Parameter Type Description time float \u0026mdash; float GetReplayTimeSeconds() void StopPlayback() void StartPlaybackAtFrame(int frame) Parameter Type Description frame int \u0026mdash; void StartPlaybackAtTimeSeconds(float StartTime) Parameter Type Description StartTime float \u0026mdash; void StopRecord() void StartRecord() void Tick2(float DeltaTime) Parameter Type Description DeltaTime float \u0026mdash; void eventPreExport() void EventPlayedFrame(ReplayWrapper Replay) Parameter Type Description Replay ReplayWrapper \u0026mdash; void EventPostTimeSkip(ReplayWrapper Replay) Parameter Type Description Replay ReplayWrapper \u0026mdash; void EventPreTimeSkip(ReplayWrapper Replay) Parameter Type Description Replay ReplayWrapper \u0026mdash; void EventSpawned(ReplayWrapper Replay, ActorWrapper A) Parameter Type Description Replay ReplayWrapper \u0026mdash; A ActorWrapper \u0026mdash; void EventPlaybackStopped(ReplayWrapper Replay) Parameter Type Description Replay ReplayWrapper \u0026mdash; ReplayWrapper(const ReplayWrapper \u0026amp;other) Parameter Type Description other ReplayWrapper \u0026mdash; ReplayWrapper operator=(ReplayWrapper rhs) Parameter Type Description rhs ReplayWrapper \u0026mdash; ~ReplayWrapper() ActorWrapper GetViewTarget() float GetReplayTimeElapsed() int GetReplayFPS() int GetCurrentReplayFrame() void AddKeyFrame(int frame, string name) Parameter Type Description frame int \u0026mdash; name string \u0026mdash; void RemoveKeyFrame(int frame) Parameter Type Description frame int \u0026mdash; void StartPlaybackAtTime(float time) Parameter Type Description time float \u0026mdash; "},{"id":177,"href":"/bakkesmod_api/Structs/Wrappers/Rotator/","title":"Rotator","parent":"Wrappers","content":" View Implementation A description of the orientation of an object. This github page describes what 3D space is in Rocket League\nSome additional notes:\nRotator applies rotations in the order yaw-pitch-roll. The identity rotation for a car (i.e. P=Y=R=0) corresponds to the car being upright with its nose pointing towards the positive x-axis. If the car were at the center of the field, its nose would face towards the left mid-boost, from the blue team's perspective. Example: to get a car facing straight up, wheels toward the orange goal, you could yaw 90 degrees right, then pitch up 90 degrees. This corresponds to P=16383, Y=16383, R=0. You could also yaw 90 degrees left, pitch 90 degrees up, then roll 180 degrees. This corresponds to P=16383, Y=-16384, R=32767. int Pitch Default value: none\nint Yaw Default value: none\nint Roll Default value: none\n"},{"id":178,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/RugbyPickupWrapper/","title":"RugbyPickupWrapper","parent":"Rumble Component","content":" View Implementation float GetAttachTime() void SetAttachTime(float AttachTime) Parameter Type Description AttachTime float \u0026mdash; float GetMinDetachTime() void SetMinDetachTime(float MinDetachTime) Parameter Type Description MinDetachTime float \u0026mdash; float GetMinBreakTime() void SetMinBreakTime(float MinBreakTime) Parameter Type Description MinBreakTime float \u0026mdash; float GetMinBreakForce() void SetMinBreakForce(float MinBreakForce) Parameter Type Description MinBreakForce float \u0026mdash; float GetCheckLastTouchRate() void SetCheckLastTouchRate(float CheckLastTouchRate) Parameter Type Description CheckLastTouchRate float \u0026mdash; float GetKickOffActivationDelay() void SetKickOffActivationDelay(float KickOffActivationDelay) Parameter Type Description KickOffActivationDelay float \u0026mdash; BallWrapper GetWeldedBall() void SetWeldedBall(BallWrapper WeldedBall) Parameter Type Description WeldedBall BallWrapper \u0026mdash; float GetLastTouchCheckTime() void SetLastTouchCheckTime(float LastTouchCheckTime) Parameter Type Description LastTouchCheckTime float \u0026mdash; unsigned int GetbBallWelded() void SetbBallWelded(unsigned int bBallWelded) Parameter Type Description bBallWelded unsigned int \u0026mdash; bool DisableBallImpactForces() void DeactivationFX() void HandleBallExploded(BallWrapper Ball) Parameter Type Description Ball BallWrapper \u0026mdash; bool GetShouldHideActivateUI() void DoBreak() bool GetWasRecentlyAttached() void HandleCarTouch(BallWrapper InBall, CarWrapper InCar, unsigned char HitType) Parameter Type Description InBall BallWrapper \u0026mdash; InCar CarWrapper \u0026mdash; HitType unsigned char \u0026mdash; void HandleHitBall(CarWrapper InCar, BallWrapper InBall, Vector \u0026amp;HitLocation, Vector \u0026amp;HitNormal) Parameter Type Description InCar CarWrapper \u0026mdash; InBall BallWrapper \u0026mdash; HitLocation Vector \u0026mdash; HitNormal Vector \u0026mdash; void HandleBallWeldedChanged() void PickupTick(float DeltaTime) Parameter Type Description DeltaTime float \u0026mdash; void RemovePickupFX() void PickupEnd() void InitPickupFX() void PickupStart() bool GetCanDetach() bool TryActivate(RBActorWrapper TargetOverride) Parameter Type Description TargetOverride RBActorWrapper \u0026mdash; "},{"id":179,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/RumblePickupComponentWrapper/","title":"RumblePickupComponentWrapper","parent":"Rumble Component","content":" View Implementation UnrealStringWrapper GetPickupName() unsigned long GetbHudIgnoreUseTime() void SetbHudIgnoreUseTime(unsigned long newbHudIgnoreUseTime) Parameter Type Description newbHudIgnoreUseTime unsigned long \u0026mdash; unsigned long GetbHasActivated() void SetbHasActivated(unsigned long newbHasActivated) Parameter Type Description newbHasActivated unsigned long \u0026mdash; unsigned long GetbIsActive() void SetbIsActive(unsigned long newbIsActive) Parameter Type Description newbIsActive unsigned long \u0026mdash; float GetActivationDuration() void SetActivationDuration(float newActivationDuration) Parameter Type Description newActivationDuration float \u0026mdash; FXActorWrapper GetPickupFXArchetype() void SetPickupFXArchetype(FXActorWrapper newPickupFXArchetype) Parameter Type Description newPickupFXArchetype FXActorWrapper \u0026mdash; FXActorWrapper GetPickupFX() void SetPickupFX(FXActorWrapper newPickupFX) Parameter Type Description newPickupFX FXActorWrapper \u0026mdash; bool HasActivated2() RBActorWrapper GetClientTarget() void OnVehicleSetupComplete() float GetActiveTimePercent() void PickupEnd() void PickupStart() BoostWrapper GetBoostComponent() void DeactivatePickup() bool TryActivate(RBActorWrapper TargetOverride) Parameter Type Description TargetOverride RBActorWrapper \u0026mdash; void OnCreated() bool CanPickup(CarWrapper InCar) Parameter Type Description InCar CarWrapper \u0026mdash; void ApplyPickup(CarWrapper InCar) Parameter Type Description InCar CarWrapper \u0026mdash; "},{"id":180,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/PerformanceStats/SampleHistoryWrapper/","title":"SampleHistoryWrapper","parent":"Performance Stats","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const SampleRecordSettingsWrapper GetRecordSettings() void SetRecordSettings(SampleRecordSettingsWrapper newRecordSettings) Parameter Type Description newRecordSettings SampleRecordSettingsWrapper \u0026mdash; UnrealStringWrapper GetTitle() float GetYMin() void SetYMin(float newYMin) Parameter Type Description newYMin float \u0026mdash; float GetYMax() void SetYMax(float newYMax) Parameter Type Description newYMax float \u0026mdash; float GetGoodValue() void SetGoodValue(float newGoodValue) Parameter Type Description newGoodValue float \u0026mdash; float GetBadValue() void SetBadValue(float newBadValue) Parameter Type Description newBadValue float \u0026mdash; float GetBaseValue() void SetBaseValue(float newBaseValue) Parameter Type Description newBaseValue float \u0026mdash; StructArrayWrapper GetSamples() int GetSampleIndex() void SetSampleIndex(int newSampleIndex) Parameter Type Description newSampleIndex int \u0026mdash; float GetAccumTime() void SetAccumTime(float newAccumTime) Parameter Type Description newAccumTime float \u0026mdash; RecordedSample GetPendingSample() void SetPendingSample(RecordedSample newPendingSample) Parameter Type Description newPendingSample RecordedSample \u0026mdash; unsigned long GetbHasPendingSample() void SetbHasPendingSample(unsigned long newbHasPendingSample) Parameter Type Description newbHasPendingSample unsigned long \u0026mdash; void Tick(float DeltaTime) Parameter Type Description DeltaTime float \u0026mdash; void AddSample(float NewValue) Parameter Type Description NewValue float \u0026mdash; float GetSummaryValue(unsigned char Type, float MaxSampleAge, unsigned long bAbsoluteValue) Parameter Type Description Type unsigned char \u0026mdash; MaxSampleAge float \u0026mdash; bAbsoluteValue unsigned long \u0026mdash; SampleHistoryWrapper SetBaseValue2(float InBaseValue) Parameter Type Description InBaseValue float \u0026mdash; SampleHistoryWrapper SetGoodBadValues(float InGoodValue, float InBadValue) Parameter Type Description InGoodValue float \u0026mdash; InBadValue float \u0026mdash; SampleHistoryWrapper SetGraphMaxMin(float MaxValue, float MinValue) Parameter Type Description MaxValue float \u0026mdash; MinValue float \u0026mdash; SampleHistoryWrapper SetTitle(std::string InTitle) Parameter Type Description InTitle std::string \u0026mdash; "},{"id":181,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/PerformanceStats/SampleRecordSettingsWrapper/","title":"SampleRecordSettingsWrapper","parent":"Performance Stats","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const float GetMaxSampleAge() void SetMaxSampleAge(float newMaxSampleAge) Parameter Type Description newMaxSampleAge float \u0026mdash; float GetRecordRate() void SetRecordRate(float newRecordRate) Parameter Type Description newRecordRate float \u0026mdash; "},{"id":182,"href":"/bakkesmod_api/Classes/Wrappers/GameEvent/SaveData/SaveDataWrapper/","title":"SaveDataWrapper","parent":"Save Data","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const UnrealStringWrapper GetDirectoryPath() UnrealStringWrapper GetSaveType() UnrealStringWrapper GetSaveExt() unsigned long GetbExactFileMatch() void SetbExactFileMatch(unsigned long newbExactFileMatch) Parameter Type Description newbExactFileMatch unsigned long \u0026mdash; void Init() "},{"id":183,"href":"/bakkesmod_api/Structs/Core/ScoredGoal/","title":"ScoredGoal","parent":"Core","content":" View Implementation int frame Default value {}\nstd::string player_name Default value: none\nint player_team Default value {}\n"},{"id":184,"href":"/bakkesmod_api/Classes/Wrappers/Kismet/SequenceObjectWrapper/","title":"SequenceObjectWrapper","parent":"Kismet","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const SequenceWrapper GetParentSequence() UnrealStringWrapper GetObjName() UnrealStringWrapper GetObjCategory() UnrealStringWrapper GetObjComment() "},{"id":185,"href":"/bakkesmod_api/Classes/Wrappers/Kismet/SequenceOpWrapper/","title":"SequenceOpWrapper","parent":"Kismet","content":" View Implementation "},{"id":186,"href":"/bakkesmod_api/Classes/Wrappers/Kismet/SequenceVariableWrapper/","title":"SequenceVariableWrapper","parent":"Kismet","content":" View Implementation std::string GetVarName() bool IsInt() bool IsFloat() bool IsString() bool IsVector() bool IsBool() bool IsObjectList() bool IsActor() float GetFloat() int GetInt() std::string GetString() Vector GetVector() bool GetBool() ArrayWrapper GetObjectList() void SetFloat(float value) Parameter Type Description value float \u0026mdash; void SetInt(int value) Parameter Type Description value int \u0026mdash; void SetString(const std::string \u0026amp;value) Parameter Type Description value const std::string \u0026amp; \u0026mdash; void SetVector(Vector value) Parameter Type Description value Vector \u0026mdash; void SetBool(bool value) Parameter Type Description value bool \u0026mdash; ActorWrapper GetActor() "},{"id":187,"href":"/bakkesmod_api/Classes/Wrappers/Kismet/SequenceWrapper/","title":"SequenceWrapper","parent":"Kismet","content":" View Implementation ArrayWrapper GetSequenceObjects() ArrayWrapper GetNestedSequences() int ActivateRemoteEvents(const std::string \u0026amp;remote_event_name) const Parameter Type Description remote_event_name const std::string \u0026amp; \u0026mdash; SequenceVariableWrapper GetAllSequenceVariables(bool reqursive) Parameter Type Description reqursive bool \u0026mdash; "},{"id":188,"href":"/bakkesmod_api/Classes/Wrappers/GameEvent/ServerWrapper/","title":"ServerWrapper","parent":"Game Event","content":" View Implementation The server is the controller of the match. It tells you where cars and balls are, the time remaining, score, and so much more.\nIf not hosting the match (in an online or private match) all values are read-only. Some functions will also return garbage data in online matches to protect the competitive integrity of the game\nGet it with gameWrapper.GetCurrentGameState()\nBallWrapper GetBall() void SpawnCar(int carBody, std::string name) Parameter Type Description carBody int \u0026mdash; name std::string \u0026mdash; void SpawnBot(int carBody, std::string name) Parameter Type Description carBody int \u0026mdash; name std::string \u0026mdash; BallWrapper SpawnBall(const Vector position, bool wake, bool spawnCannon) Parameter Type Description position Vector \u0026mdash; wake bool \u0026mdash; spawnCannon bool \u0026mdash; bool HasAuthority() CarWrapper GetGameCar() bool IsBallMovingTowardsGoal(int goalNo, BallWrapper bw) Parameter Type Description goalNo int \u0026mdash; bw BallWrapper \u0026mdash; bool IsInGoal(Vector vec) Parameter Type Description vec Vector \u0026mdash; void DisableGoalReset() void EnableGoalReset() Vector GenerateShot(Vector startPos, Vector destination, float speed) Parameter Type Description startPos Vector \u0026mdash; destination Vector \u0026mdash; speed float \u0026mdash; Vector GenerateGoalAimLocation(int goalNumber, Vector currentBallLocation) Parameter Type Description goalNumber int \u0026mdash; currentBallLocation Vector \u0026mdash; Vector GetGoalExtent(int goalNumber=0) Parameter Type Description goalNumber int \u0026mdash; Vector GetGoalLocation(int goalNumber=0) Parameter Type Description goalNumber int \u0026mdash; CarWrapper GetTestCarArchetype() void SetTestCarArchetype(CarWrapper newTestCarArchetype) Parameter Type Description newTestCarArchetype CarWrapper \u0026mdash; BallWrapper GetBallArchetype() void SetBallArchetype(BallWrapper newBallArchetype) Parameter Type Description newBallArchetype BallWrapper \u0026mdash; ActorWrapper GetBallSpawnPoint() void SetBallSpawnPoint(ActorWrapper newBallSpawnPoint) Parameter Type Description newBallSpawnPoint ActorWrapper \u0026mdash; int GetSeriesLength() void SetSeriesLength(int newSeriesLength) Parameter Type Description newSeriesLength int \u0026mdash; int GetGameTime() void SetGameTime(int newGameTime) Parameter Type Description newGameTime int \u0026mdash; int GetWarmupTime() void SetWarmupTime(int newWarmupTime) Parameter Type Description newWarmupTime int \u0026mdash; int GetMaxScore() void SetMaxScore(int newMaxScore) Parameter Type Description newMaxScore int \u0026mdash; int GetAutoBalanceDifference() void SetAutoBalanceDifference(int newAutoBalanceDifference) Parameter Type Description newAutoBalanceDifference int \u0026mdash; float GetScoreSlomoTime() void SetScoreSlomoTime(float newScoreSlomoTime) Parameter Type Description newScoreSlomoTime float \u0026mdash; float GetGameTimeRemaining() void SetGameTimeRemaining(float newGameTimeRemaining) Parameter Type Description newGameTimeRemaining float \u0026mdash; int GetSecondsRemaining() void SetSecondsRemaining(int newSecondsRemaining) Parameter Type Description newSecondsRemaining int \u0026mdash; int GetWaitTimeRemaining() void SetWaitTimeRemaining(int newWaitTimeRemaining) Parameter Type Description newWaitTimeRemaining int \u0026mdash; float GetTotalGameTimePlayed() void SetTotalGameTimePlayed(float newTotalGameTimePlayed) Parameter Type Description newTotalGameTimePlayed float \u0026mdash; float GetOvertimeTimePlayed() void SetOvertimeTimePlayed(float newOvertimeTimePlayed) Parameter Type Description newOvertimeTimePlayed float \u0026mdash; unsigned long GetbRoundActive() void SetbRoundActive(unsigned long newbRoundActive) Parameter Type Description newbRoundActive unsigned long \u0026mdash; unsigned long GetbPlayReplays() void SetbPlayReplays(unsigned long newbPlayReplays) Parameter Type Description newbPlayReplays unsigned long \u0026mdash; unsigned long GetbBallHasBeenHit() void SetbBallHasBeenHit(unsigned long newbBallHasBeenHit) Parameter Type Description newbBallHasBeenHit unsigned long \u0026mdash; unsigned long GetbOverTime() void SetbOverTime(unsigned long newbOverTime) Parameter Type Description newbOverTime unsigned long \u0026mdash; unsigned long GetbUnlimitedTime() void SetbUnlimitedTime(unsigned long newbUnlimitedTime) Parameter Type Description newbUnlimitedTime unsigned long \u0026mdash; unsigned long GetbNoContest() void SetbNoContest(unsigned long newbNoContest) Parameter Type Description newbNoContest unsigned long \u0026mdash; unsigned long GetbDisableGoalDelay() void SetbDisableGoalDelay(unsigned long newbDisableGoalDelay) Parameter Type Description newbDisableGoalDelay unsigned long \u0026mdash; unsigned long GetbShowNoScorerGoalMessage() void SetbShowNoScorerGoalMessage(unsigned long newbShowNoScorerGoalMessage) Parameter Type Description newbShowNoScorerGoalMessage unsigned long \u0026mdash; unsigned long GetbMatchEnded() void SetbMatchEnded(unsigned long newbMatchEnded) Parameter Type Description newbMatchEnded unsigned long \u0026mdash; unsigned long GetbShowIntroScene() void SetbShowIntroScene(unsigned long newbShowIntroScene) Parameter Type Description newbShowIntroScene unsigned long \u0026mdash; unsigned long GetbClubMatch() void SetbClubMatch(unsigned long newbClubMatch) Parameter Type Description newbClubMatch unsigned long \u0026mdash; int GetNextSpawnIndex() void SetNextSpawnIndex(int newNextSpawnIndex) Parameter Type Description newNextSpawnIndex int \u0026mdash; ReplayDirectorWrapper GetReplayDirectorArchetype() void SetReplayDirectorArchetype(ReplayDirectorWrapper newReplayDirectorArchetype) Parameter Type Description newReplayDirectorArchetype ReplayDirectorWrapper \u0026mdash; ReplayDirectorWrapper GetReplayDirector() void SetReplayDirector(ReplayDirectorWrapper newReplayDirector) Parameter Type Description newReplayDirector ReplayDirectorWrapper \u0026mdash; ArrayWrapper GetGameBalls() int GetTotalGameBalls() void SetTotalGameBalls(int newTotalGameBalls) Parameter Type Description newTotalGameBalls int \u0026mdash; float GetPostGoalTime() void SetPostGoalTime(float newPostGoalTime) Parameter Type Description newPostGoalTime float \u0026mdash; ArrayWrapper GetGoals() int GetSecondsRemainingCountdown() void SetSecondsRemainingCountdown(int newSecondsRemainingCountdown) Parameter Type Description newSecondsRemainingCountdown int \u0026mdash; Vector GetFieldCenter() void SetFieldCenter(Vector newFieldCenter) Parameter Type Description newFieldCenter Vector \u0026mdash; TeamWrapper GetGameWinner() void SetGameWinner(TeamWrapper newGameWinner) Parameter Type Description newGameWinner TeamWrapper \u0026mdash; TeamWrapper GetMatchWinner() void SetMatchWinner(TeamWrapper newMatchWinner) Parameter Type Description newMatchWinner TeamWrapper \u0026mdash; PriWrapper GetMVP() void SetMVP(PriWrapper newMVP) Parameter Type Description newMVP PriWrapper \u0026mdash; PriWrapper GetFastestGoalPlayer() void SetFastestGoalPlayer(PriWrapper newFastestGoalPlayer) Parameter Type Description newFastestGoalPlayer PriWrapper \u0026mdash; PriWrapper GetSlowestGoalPlayer() void SetSlowestGoalPlayer(PriWrapper newSlowestGoalPlayer) Parameter Type Description newSlowestGoalPlayer PriWrapper \u0026mdash; PriWrapper GetFurthestGoalPlayer() void SetFurthestGoalPlayer(PriWrapper newFurthestGoalPlayer) Parameter Type Description newFurthestGoalPlayer PriWrapper \u0026mdash; float GetFastestGoalSpeed() void SetFastestGoalSpeed(float newFastestGoalSpeed) Parameter Type Description newFastestGoalSpeed float \u0026mdash; float GetSlowestGoalSpeed() void SetSlowestGoalSpeed(float newSlowestGoalSpeed) Parameter Type Description newSlowestGoalSpeed float \u0026mdash; float GetFurthestGoal() void SetFurthestGoal(float newFurthestGoal) Parameter Type Description newFurthestGoal float \u0026mdash; unsigned char GetReplicatedScoredOnTeam() void SetReplicatedScoredOnTeam(unsigned char newReplicatedScoredOnTeam) Parameter Type Description newReplicatedScoredOnTeam unsigned char \u0026mdash; unsigned char GetReplicatedServerPerformanceState() void SetReplicatedServerPerformanceState(unsigned char newReplicatedServerPerformanceState) Parameter Type Description newReplicatedServerPerformanceState unsigned char \u0026mdash; int GetRoundNum() void SetRoundNum(int newRoundNum) Parameter Type Description newRoundNum int \u0026mdash; float GetAssistMaxTime() void SetAssistMaxTime(float newAssistMaxTime) Parameter Type Description newAssistMaxTime float \u0026mdash; float GetBallHasBeenHitStartDelay() void SetBallHasBeenHitStartDelay(float newBallHasBeenHitStartDelay) Parameter Type Description newBallHasBeenHitStartDelay float \u0026mdash; float GetPodiumDelay() void SetPodiumDelay(float newPodiumDelay) Parameter Type Description newPodiumDelay float \u0026mdash; float GetPodiumTime() void SetPodiumTime(float newPodiumTime) Parameter Type Description newPodiumTime float \u0026mdash; int GetLobbyEndCountdown() void SetLobbyEndCountdown(int newLobbyEndCountdown) Parameter Type Description newLobbyEndCountdown int \u0026mdash; int GetLobbyCountdown() void SetLobbyCountdown(int newLobbyCountdown) Parameter Type Description newLobbyCountdown int \u0026mdash; float GetLobbyTime() void SetLobbyTime(float newLobbyTime) Parameter Type Description newLobbyTime float \u0026mdash; int GetLobbySpawnRestartTime() void SetLobbySpawnRestartTime(int newLobbySpawnRestartTime) Parameter Type Description newLobbySpawnRestartTime int \u0026mdash; PlayerControllerWrapper GetPauser() void SetPauser(PlayerControllerWrapper newPauser) Parameter Type Description newPauser PlayerControllerWrapper \u0026mdash; void SetNumPlayers(int numPlayers) Parameter Type Description numPlayers int \u0026mdash; int GetNumPlayers() int GetPlayerCarCount() void ReplicateSkillTiers() void RemoveTeamSelection() void CheckStart() void StartLobbyTimer() void HandleCountdownTick() void CheckForCountdownAction() void LobbyCountdownTick() bool CanSpawnBots() void StartRound() void EndRound() void SetBallEventListeners(BallWrapper Ball, unsigned long bListen) Parameter Type Description Ball BallWrapper \u0026mdash; bListen unsigned long \u0026mdash; bool CanAwardPoints() void HandleCarTouch(BallWrapper Ball, CarWrapper HitCar, unsigned char HitType) Parameter Type Description Ball BallWrapper \u0026mdash; HitCar CarWrapper \u0026mdash; HitType unsigned char \u0026mdash; void SetBallHasBeenHit2() int DetermineScoreTouchIndex(BallWrapper Ball, GoalWrapper Goal) Parameter Type Description Ball BallWrapper \u0026mdash; Goal GoalWrapper \u0026mdash; int DetermineAssistTouchIndex(BallWrapper Ball, int ScoreIdx) Parameter Type Description Ball BallWrapper \u0026mdash; ScoreIdx int \u0026mdash; void UpdateTotalGameTimePlayed(float DeltaTime) Parameter Type Description DeltaTime float \u0026mdash; void UpdateGameTime(float DeltaTime) Parameter Type Description DeltaTime float \u0026mdash; bool CanUpdateGameTime() void StartReplay() void HandleReplayFinished(ReplayDirectorWrapper InReplay) Parameter Type Description InReplay ReplayDirectorWrapper \u0026mdash; void GotoPodiumSpotlight() void UpdateSpotlight() void SpawnPodiumCars() bool CanEnableCarPodiumMovement() void FinishEvent() bool __GameEvent_Soccar_TA__UpdateTeamScores(TeamWrapper T) Parameter Type Description T TeamWrapper \u0026mdash; void __GameEvent_Soccar_TA__SubmitMatchComplete(PriWrapper PRI) Parameter Type Description PRI PriWrapper \u0026mdash; void __GameEvent_Soccar_TA__CheckStart(TeamWrapper T) Parameter Type Description T TeamWrapper \u0026mdash; void __GameEvent_Soccar_TA__EndState(TeamWrapper T) Parameter Type Description T TeamWrapper \u0026mdash; void __ReplicatedServerPerformanceState__ChangeNotifyFunc() void __bClubMatch__ChangeNotifyFunc() void __bShowIntroScene__ChangeNotifyFunc() void __WaitTimeRemaining__ChangeNotifyFunc() void CheckJoinInProgress(PriWrapper PRI) Parameter Type Description PRI PriWrapper \u0026mdash; bool AllowDynamicCrowd() void AddBallTrajectory(BallWrapper InBall) Parameter Type Description InBall BallWrapper \u0026mdash; bool ShowScorerGoalMessage() bool CanUseBallCam() bool DisableStatXP() void SetDisableGoalDelay(unsigned long bInDisableGoalDelay) Parameter Type Description bInDisableGoalDelay unsigned long \u0026mdash; void ForceMatchStart() void RemoveLocalPlayer(PlayerControllerWrapper Player) Parameter Type Description Player PlayerControllerWrapper \u0026mdash; void AddLocalPlayer(PlayerControllerWrapper Player) Parameter Type Description Player PlayerControllerWrapper \u0026mdash; void DestroyGoalIndicators(PlayerControllerWrapper Player) Parameter Type Description Player PlayerControllerWrapper \u0026mdash; void CreateGoalIndicators(PlayerControllerWrapper Player) Parameter Type Description Player PlayerControllerWrapper \u0026mdash; void BeginHighlightsReplay() bool ShouldCountUp() bool ShouldAllowVoteToForfeit() bool ShouldHaveLeaveMatchPenalty() void SetPaused(PlayerControllerWrapper InPauser, unsigned long bInPaused) Parameter Type Description InPauser PlayerControllerWrapper \u0026mdash; bInPaused unsigned long \u0026mdash; bool ShouldCountdownResumeFromPause() void SetScoreAndTime(PlayerControllerWrapper PC, int NewScoreTeam0, int NewScoreTeam1, int InGameTimeRemaining, unsigned long bInOvertime, unsigned long bRestartRound) Parameter Type Description PC PlayerControllerWrapper \u0026mdash; NewScoreTeam0 int \u0026mdash; NewScoreTeam1 int \u0026mdash; InGameTimeRemaining int \u0026mdash; bInOvertime unsigned long \u0026mdash; bRestartRound unsigned long \u0026mdash; void SaveLocalPlayerStats() bool ShouldPlayReplay() bool ShouldRecordReplay() void OnBallHasBeenHit() BallWrapper SpawnBall2(Vector \u0026amp;SpawnLoc, unsigned long bWake, unsigned long bSpawnCannon, std::string BallArch) Parameter Type Description SpawnLoc Vector \u0026mdash; bWake unsigned long \u0026mdash; bSpawnCannon unsigned long \u0026mdash; BallArch std::string \u0026mdash; int GetTotalScore() void HandleCarSet(PriWrapper InPRI) Parameter Type Description InPRI PriWrapper \u0026mdash; void RemovePlayer(ControllerWrapper Player) Parameter Type Description Player ControllerWrapper \u0026mdash; void RemovePRI(PriWrapper PRI) Parameter Type Description PRI PriWrapper \u0026mdash; void AddPRI(PriWrapper PRI) Parameter Type Description PRI PriWrapper \u0026mdash; void OnMatchWinnerSet() void OnGameWinnerSet() int MVPSort(PriWrapper A, PriWrapper B) Parameter Type Description A PriWrapper \u0026mdash; B PriWrapper \u0026mdash; void HandleHitGoal(BallWrapper Ball, GoalWrapper Goal) Parameter Type Description Ball BallWrapper \u0026mdash; Goal GoalWrapper \u0026mdash; void ClearReplicatedScoredOnTeam() void TriggerScoreChangedEvent() void HandleScoreUpdated(TeamWrapper Team) Parameter Type Description Team TeamWrapper \u0026mdash; void OnAllTeamsCreated() void TriggerGoalScoreEvent(int TeamScoredOn, CarWrapper Scorer) Parameter Type Description TeamScoredOn int \u0026mdash; Scorer CarWrapper \u0026mdash; void SetTotalGameBalls2(int TotalBalls) Parameter Type Description TotalBalls int \u0026mdash; void RecordRecentPlayers() void UpdateStats() void NotifyKismetOfCurrentTime() bool EnoughTimePassedToForfeit() void OnGameTimeUpdated() void OnOvertimeUpdated() void ForceOvertime() void StartOvertime() bool OnMyHalf(Vector \u0026amp;TestLocation, unsigned char TeamNum) Parameter Type Description TestLocation Vector \u0026mdash; TeamNum unsigned char \u0026mdash; TeamWrapper GetWinningTeam() void ResetPickups() void ResetPlayers() void OnBallSpawned(BallWrapper NewBall) Parameter Type Description NewBall BallWrapper \u0026mdash; void ResetBalls() void DestroyCars() void FreezePawns() void DestroyBalls() void RemoveGameBall(BallWrapper Ball) Parameter Type Description Ball BallWrapper \u0026mdash; void AddGameBall(BallWrapper Ball) Parameter Type Description Ball BallWrapper \u0026mdash; void StartNewRound() void CheckForAutoBalance() bool HasWinner() void SubmitMatch2() void SubmitMatchComplete2() void OnMatchEnded() bool ShouldDoPodiumSpotlight() void EndGame() void UpdateTeamScores2() void StartNewGame() void ResetGame() void ClearReplicatedStatEvent() void eventDestroyed() void InitBotDetection() void InitCrowdManager() void InitField() void InitGameObserver() void OnInit() void InitMutators() void OnClubMatch() bool CanInitClubMatch() void AssignCustomTeamSettings() void InitGame2(std::string Options) Parameter Type Description Options std::string \u0026mdash; std::string GetMatchGUID() void SetMatchGUID(std::string s) Parameter Type Description s std::string \u0026mdash; void EventGameWinnerSet(ServerWrapper GameEvent) Parameter Type Description GameEvent ServerWrapper \u0026mdash; void EventGoalScored(ServerWrapper GameEvent, BallWrapper Ball, GoalWrapper Goal, int ScoreIndex, int AssistIdx) Parameter Type Description GameEvent ServerWrapper \u0026mdash; Ball BallWrapper \u0026mdash; Goal GoalWrapper \u0026mdash; ScoreIndex int \u0026mdash; AssistIdx int \u0026mdash; "},{"id":189,"href":"/bakkesmod_api/Classes/Wrappers/SettingsWrapper/","title":"SettingsWrapper","parent":"Wrappers","content":" View Implementation SettingsWrapper() ~SettingsWrapper() ProfileCameraSettings GetCameraSettings() CameraSave GetCameraSaveSettings() std::map\u0026lt; std::string, std::string \u0026gt; GetPCBindings() std::map\u0026lt; std::string, std::string \u0026gt; GetGamepadBindings() std::vector\u0026lt; std::pair\u0026lt; std::string, std::string \u0026gt; \u0026gt; GetAllPCBindings() std::vector\u0026lt; std::pair\u0026lt; std::string, std::string \u0026gt; \u0026gt; GetAllGamepadBindings() GamepadSettings GetGamepadSettings() VideoSettings GetVideoSettings() _NODISCARD bool GetForceDefaultColors() const void SetForceDefaultColors(bool value) Parameter Type Description value bool \u0026mdash; "},{"id":190,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/MeshComponents/SkeletalMeshComponentWrapper/","title":"SkeletalMeshComponentWrapper","parent":"Mesh Components","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const "},{"id":191,"href":"/bakkesmod_api/Structs/Wrappers/SkillRank/","title":"SkillRank","parent":"Wrappers","content":" View Implementation Information on a player's rank. From MMRWrapper.GetPlayerRank()\nint Tier Default value: none\nint Division Default value: none\nint MatchesPlayed Default value: none\n"},{"id":192,"href":"/bakkesmod_api/Structs/Wrappers/SkillRating/","title":"SkillRating","parent":"Wrappers","content":" View Implementation Raw skill data used to calculate MMR with MMRWrapper.CalculateMMR()\nfloat Mu Default value: none\nfloat Sigma Default value: none\n"},{"id":193,"href":"/bakkesmod_api/Structs/Wrappers/Items/Attributes/SpecialEdition/","title":"SpecialEdition","parent":"Attributes","content":" View Implementation Info on an item's special edition. Not sure where to obtain\nint productId Default value: none\nint editionId Default value: none\nstd::string label Default value: none\n"},{"id":194,"href":"/bakkesmod_api/Classes/Wrappers/Items/Dbs/SpecialEditionDatabaseWrapper/","title":"SpecialEditionDatabaseWrapper","parent":"Dbs","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const std::string GetSpecialEditionName(int EditionID) Parameter Type Description EditionID int \u0026mdash; int GetSpecialEditionId(std::string \u0026amp;EditionName) Parameter Type Description EditionName std::string \u0026amp; \u0026mdash; "},{"id":195,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/SpringPickup/","title":"SpringPickup","parent":"Rumble Component","content":" View Implementation float GetForce() void SetForce(float newForce) Parameter Type Description newForce float \u0026mdash; float GetVerticalForce() void SetVerticalForce(float newVerticalForce) Parameter Type Description newVerticalForce float \u0026mdash; Vector GetTorque() void SetTorque(Vector newTorque) Parameter Type Description newTorque Vector \u0026mdash; unsigned long GetbApplyRelativeForce() void SetbApplyRelativeForce(unsigned long newbApplyRelativeForce) Parameter Type Description newbApplyRelativeForce unsigned long \u0026mdash; unsigned long GetbApplyConstantForce() void SetbApplyConstantForce(unsigned long newbApplyConstantForce) Parameter Type Description newbApplyConstantForce unsigned long \u0026mdash; unsigned long GetbBreakConstantForceWithHit() void SetbBreakConstantForceWithHit(unsigned long newbBreakConstantForceWithHit) Parameter Type Description newbBreakConstantForceWithHit unsigned long \u0026mdash; unsigned long GetbApplyRelativeConstantForce() void SetbApplyRelativeConstantForce(unsigned long newbApplyRelativeConstantForce) Parameter Type Description newbApplyRelativeConstantForce unsigned long \u0026mdash; unsigned long GetbInstant() void SetbInstant(unsigned long newbInstant) Parameter Type Description newbInstant unsigned long \u0026mdash; unsigned long GetbFollowAfterHit() void SetbFollowAfterHit(unsigned long newbFollowAfterHit) Parameter Type Description newbFollowAfterHit unsigned long \u0026mdash; unsigned long GetbSpringed() void SetbSpringed(unsigned long newbSpringed) Parameter Type Description newbSpringed unsigned long \u0026mdash; float GetRelativeForceNormalDirection() void SetRelativeForceNormalDirection(float newRelativeForceNormalDirection) Parameter Type Description newRelativeForceNormalDirection float \u0026mdash; float GetMaxSpringLength() void SetMaxSpringLength(float newMaxSpringLength) Parameter Type Description newMaxSpringLength float \u0026mdash; float GetConstantForce() void SetConstantForce(float newConstantForce) Parameter Type Description newConstantForce float \u0026mdash; Vector GetFromOffset() void SetFromOffset(Vector newFromOffset) Parameter Type Description newFromOffset Vector \u0026mdash; Vector GetSpringMeshScale() void SetSpringMeshScale(Vector newSpringMeshScale) Parameter Type Description newSpringMeshScale Vector \u0026mdash; float GetSpringMeshInitialSize() void SetSpringMeshInitialSize(float newSpringMeshInitialSize) Parameter Type Description newSpringMeshInitialSize float \u0026mdash; Rotator GetSpringRotationOffset() void SetSpringRotationOffset(Rotator newSpringRotationOffset) Parameter Type Description newSpringRotationOffset Rotator \u0026mdash; Vector GetHittingMeshScale() void SetHittingMeshScale(Vector newHittingMeshScale) Parameter Type Description newHittingMeshScale Vector \u0026mdash; Vector GetHittingMeshOffset() void SetHittingMeshOffset(Vector newHittingMeshOffset) Parameter Type Description newHittingMeshOffset Vector \u0026mdash; Rotator GetHittingRotationOffset() void SetHittingRotationOffset(Rotator newHittingRotationOffset) Parameter Type Description newHittingRotationOffset Rotator \u0026mdash; float GetHitDistanceOffset() void SetHitDistanceOffset(float newHitDistanceOffset) Parameter Type Description newHitDistanceOffset float \u0026mdash; float GetAfterSpringDuration() void SetAfterSpringDuration(float newAfterSpringDuration) Parameter Type Description newAfterSpringDuration float \u0026mdash; unsigned char GetBallHitType() void SetBallHitType(unsigned char newBallHitType) Parameter Type Description newBallHitType unsigned char \u0026mdash; float GetMinSpringLength() void SetMinSpringLength(float newMinSpringLength) Parameter Type Description newMinSpringLength float \u0026mdash; float GetWeldedForceScalar() void SetWeldedForceScalar(float newWeldedForceScalar) Parameter Type Description newWeldedForceScalar float \u0026mdash; float GetWeldedVerticalForce() void SetWeldedVerticalForce(float newWeldedVerticalForce) Parameter Type Description newWeldedVerticalForce float \u0026mdash; float GetCurrentSpringLength() void SetCurrentSpringLength(float newCurrentSpringLength) Parameter Type Description newCurrentSpringLength float \u0026mdash; float GetSpringedTime() void SetSpringedTime(float newSpringedTime) Parameter Type Description newSpringedTime float \u0026mdash; float GetAfterSpringTime() void SetAfterSpringTime(float newAfterSpringTime) Parameter Type Description newAfterSpringTime float \u0026mdash; float GetSpringToTime() void SetSpringToTime(float newSpringToTime) Parameter Type Description newSpringToTime float \u0026mdash; Vector GetSpringOrigin() void SetSpringOrigin(Vector newSpringOrigin) Parameter Type Description newSpringOrigin Vector \u0026mdash; Vector GetSpringedLocation() void SetSpringedLocation(Vector newSpringedLocation) Parameter Type Description newSpringedLocation Vector \u0026mdash; Vector GetSpringedNormal() void SetSpringedNormal(Vector newSpringedNormal) Parameter Type Description newSpringedNormal Vector \u0026mdash; float GetSpringedLength() void SetSpringedLength(float newSpringedLength) Parameter Type Description newSpringedLength float \u0026mdash; void PickupEnd() void HandleCarTouchedBall(BallWrapper Ball, CarWrapper OtherCar, unsigned char HitType) Parameter Type Description Ball BallWrapper \u0026mdash; OtherCar CarWrapper \u0026mdash; HitType unsigned char \u0026mdash; void ScaleSpringMeshToLocation(Vector \u0026amp;NewLocation, Vector \u0026amp;TargetLoction) Parameter Type Description NewLocation Vector \u0026mdash; TargetLoction Vector \u0026mdash; void ApplyForces(float ActiveTime) Parameter Type Description ActiveTime float \u0026mdash; Vector GetRelativeConstantForce(Vector \u0026amp;Direction) Parameter Type Description Direction Vector \u0026mdash; Vector GetRelativeImpulse(Vector \u0026amp;Direction) Parameter Type Description Direction Vector \u0026mdash; void DoSpring(unsigned long bFirstHit) Parameter Type Description bFirstHit unsigned long \u0026mdash; void PickupStart() "},{"id":196,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/PerformanceStats/StartGraphSystemWrapper/","title":"StartGraphSystemWrapper","parent":"Performance Stats","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const float GetGraphSampleTime() void SetGraphSampleTime(float newGraphSampleTime) Parameter Type Description newGraphSampleTime float \u0026mdash; unsigned char GetGraphLevel() void SetGraphLevel(unsigned char newGraphLevel) Parameter Type Description newGraphLevel unsigned char \u0026mdash; PerfStatGraphWrapper GetPerfStatGraph() void SetPerfStatGraph(PerfStatGraphWrapper newPerfStatGraph) Parameter Type Description newPerfStatGraph PerfStatGraphWrapper \u0026mdash; NetStatGraphWrapper GetNetStatGraph() void SetNetStatGraph(NetStatGraphWrapper newNetStatGraph) Parameter Type Description newNetStatGraph NetStatGraphWrapper \u0026mdash; InputBufferGraphWrapper GetInputBufferGraph() void SetInputBufferGraph(InputBufferGraphWrapper newInputBufferGraph) Parameter Type Description newInputBufferGraph InputBufferGraphWrapper \u0026mdash; ArrayWrapper GetStatGraphs() ArrayWrapper GetVisibleStatGraphs() void Graphtime(float Seconds) Parameter Type Description Seconds float \u0026mdash; void StatGraphNext() float GetGraphSampleTime2(unsigned char Level) Parameter Type Description Level unsigned char \u0026mdash; void SetGraphLevel2(unsigned char Level) Parameter Type Description Level unsigned char \u0026mdash; "},{"id":197,"href":"/plugin_tutorial/starting_a_plugin/","title":"Starting a plugin","parent":"Plugin Tutorial","content":"It will assume you\u0026rsquo;re using the template as linked in Setting Up. You can of course make a plugin without it, but it gives an easier basis to work off of. You can name it anything, but here we\u0026rsquo;ll be using a demo plugin named CoolPlugin\nThe template has a lot of commented out code that is designed to help you learn how to use the syntax. We\u0026rsquo;ll uncomment some of this as we go along.\nFirst we\u0026rsquo;ll look at your CoolPlugin.h file. It describes any functions your code will use. At the top are two lines that are required for plugins, and allow you to call BakkesMod SDK functions 1 2 #pragma once #include \u0026#34;bakkesmod/plugin/bakkesmodplugin.h\u0026#34; Next is the declaration of your class. Here you describe any functions you will be using. onLoad() is automatically called by BakkesMod when the plugin is loaded, and onUnload() is called when it is unloaded. The unLoad isn\u0026rsquo;t totally necessary, but we\u0026rsquo;ll uncomment it to demonstrate 1 2 3 4 5 class CoolPlugin: public BakkesMod::Plugin::BakkesModPlugin { void onLoad() override; void onUnload() override; }; Now we will look at the CoolPlugin.cpp file. Here you write the code that will define the functions\nFirst it includes your header so it can define the functions described above\n1 2 #include \u0026#34;pch.h\u0026#34; #include \u0026#34;CoolPlugin.h\u0026#34; Next it declares the plugin. The string in \u0026quot;\u0026quot; will be used in the plugin manager to describe the plugin, but it needs to be a short description. Keep it to 1 or two words. You can also define a plugin version, although the template handles that automatically. Finally is the plugin type. These don\u0026rsquo;t do anything, so just use PLUGINTYPE_FREEPLAY. Your plugin will still work in any playlist and mode.\n1 BAKKESMOD_PLUGIN(CoolPlugin, \u0026#34;Cool Plugin\u0026#34;, plugin_version, PLUGINTYPE_FREEPLAY) Next you define your functions, starting with onLoad(). The template already has an onload. As this is a demo, we\u0026rsquo;ll just do a hello world. 1 2 3 4 5 6 void CoolPlugin::onLoad() { // This line is required for LOG to work and must be before any use of LOG() _globalCvarManager = cvarManager; // do something when it loads LOG(\u0026#34;Hello I\u0026#39;m CoolPlugin B)\u0026#34;); } Next is onUnload(). Bakkesmod handles most of unloading, so only worry about this if your code is using some 3rd party library that needs unloading to be handled specially. For now this can just add the new function to the bottom of CoolPlugin.cpp and log that it unloaded 1 2 3 void CoolPlugin::onUnload() { LOG(\u0026#34;I was too cool for this world B\u0026#39;(\u0026#34;); } Now you\u0026rsquo;ve got a super basic plugin. Hit Build -\u0026gt; Build CoolPlugin or press ctrl + B to finalize the plugin. It will create CoolPlugin.dll in a plugins/ folder next to your plugin source code. It will also move it into your bakkesmod folder if you are using the template.\nNow open Rocket League and open the BakkesMod console with f6. Type plugin load CoolPlugin and you should see it load and say hello! If you unload it with plugin unload CoolPlugin you should see it say goodbye to you 😢\nNext we\u0026rsquo;ll make the plugin actually do something. We\u0026rsquo;ll reverse engineer the ballontop command, which puts the ball on top of your car in freeplay. In CoolPlugin.h add a new function 1 2 3 4 5 6 class CoolPlugin: public BakkesMod::Plugin::BakkesModPlugin { virtual void onLoad(); virtual void onUnload(); void ballOnTop(); }; We need to define that function in CoolPlugin.cpp. Just jump to the end of the file and add 1 2 3 void CoolPlugin::ballOnTop() { } ⠀ The next lines of code are all going to be within CoolPlugin::ballOnTop() in CoolPlugin.cpp\nFirst we need to make sure we should be running the plugin. We only want it to work in freeplay. The gameWrapper gives a ton of useful functions to figure out what context the code is being run from. The first line of CoolPlugin::ballOnTop() will be 1 if (!gameWrapper-\u0026gt;IsInFreeplay()) { return; } There are also gameWrapper-\u0026gt;IsInGame() and gameWrapper-\u0026gt;IsInOnlineGame() if you\u0026rsquo;d rather your plugin run elsewhere\nThe next line will be getting the ServerWrapper. This is what controls pretty much everything in the current game. You can get players, cars, the ball, the goals, and other things from it so it\u0026rsquo;s incredibly useful. We also nullcheck it. If you call functions on a null server Rocket League will crash 1 2 ServerWrapper server = gameWrapper-\u0026gt;GetCurrentGameState(); if (!server) { return; } Next we get the ball and nullcheck it 1 2 BallWrapper ball = server.GetBall(); if (!ball) { return; } And we get the car. As this is freeplay we only have one to worry about, but in any mode this will select your car. And we nullcheck it. If this seems redundant, it isn\u0026rsquo;t. What if your car was demolished? Without this nullcheck, you\u0026rsquo;d crash your game if you ran the command before the respawn. 1 2 CarWrapper car = gameWrapper-\u0026gt;GetLocalCar(); if (!car) { return; } Next we can start manipulating things. We can grab the car\u0026rsquo;s velocity and assign it to the ball so they match. If the ball is going slower or faster than the car, it\u0026rsquo;ll just fly off by itself 1 2 Vector carVelocity = car.GetVelocity(); ball.SetVelocity(carVelocity); Next we\u0026rsquo;ll actually move the ball. A Vector is a 3 dimensional point in space. The Z axis is up and down in Rocket League, so we can put the ball above the car by using the car\u0026rsquo;s location and adding distance on the Z axis. 1 2 3 Vector carLocation = car.GetLocation(); float ballRadius = ball.GetRadius(); ball.SetLocation(carLocation + Vector{0, 0, ballRadius * 2}); We\u0026rsquo;ve now defined CoolPlugin::ballOnTop() In full: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 void CoolPlugin::ballOnTop() { if (!gameWrapper-\u0026gt;IsInFreeplay()) { return; } ServerWrapper server = gameWrapper-\u0026gt;GetCurrentGameState(); if (!server) { return; } BallWrapper ball = server.GetBall(); if (!ball) { return; } CarWrapper car = gameWrapper-\u0026gt;GetLocalCar(); if (!car) { return; } Vector carVelocity = car.GetVelocity(); ball.SetVelocity(carVelocity); Vector carLocation = car.GetLocation(); float ballRadius = ball.GetRadius(); ball.SetLocation(carLocation + Vector{0, 0, ballRadius * 2}); } Now we need to call the function\nThis can be done with a notifier. These can be called with a console command to activate your code. Here we\u0026rsquo;ll define it as CoolerBallOnTop because Bakkes\u0026rsquo; ballontop is for the birds. When it\u0026rsquo;s called, it takes a vector (basically a list) of command arguments that were provided by the command. Here we don\u0026rsquo;t care about those, so they are unused. The code is called in a lambda [](){}. You can just copy the syntax here. Next is the notifier description, which does nothing, so it\u0026rsquo;ll be \u0026quot;\u0026quot;. Finally is the permissions, which decides when the notifier works. It should usually be PERMISSION_ALL, as that works anywhere. If you want to restrict the use to specific modes or game states, you can use any of the permissions listed here 1 2 3 cvarManager-\u0026gt;registerNotifier(\u0026#34;CoolerBallOnTop\u0026#34;, [this](std::vector\u0026lt;std::string\u0026gt; args) { ballOnTop(); }, \u0026#34;\u0026#34;, PERMISSION_ALL); Now we\u0026rsquo;ll put it all together 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // CoolPlugin.h #pragma once #include \u0026#34;bakkesmod/plugin/bakkesmodplugin.h\u0026#34; #include \u0026#34;bakkesmod/plugin/pluginwindow.h\u0026#34; #include \u0026#34;bakkesmod/plugin/PluginSettingsWindow.h\u0026#34; #include \u0026#34;version.h\u0026#34; constexpr auto plugin_version = stringify(VERSION_MAJOR) \u0026#34;.\u0026#34; stringify(VERSION_MINOR) \u0026#34;.\u0026#34; stringify(VERSION_PATCH) \u0026#34;.\u0026#34; stringify(VERSION_BUILD); class CoolPlugin: public BakkesMod::Plugin::BakkesModPlugin //,public SettingsWindowBase //,public PluginWindowBase { //std::shared_ptr\u0026lt;bool\u0026gt; enabled; //Boilerplate void onLoad() override; void onUnload() override; void ballOnTop(); public: //void RenderSettings() override; //void RenderWindow() override; }; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 // CoolPlugin.cpp #include \u0026#34;pch.h\u0026#34; #include \u0026#34;CoolPlugin.h\u0026#34; BAKKESMOD_PLUGIN(CoolPlugin, \u0026#34;Cool Plugin\u0026#34;, plugin_version, PLUGINTYPE_FREEPLAY) std::shared_ptr\u0026lt;CVarManagerWrapper\u0026gt; _globalCvarManager; void CoolPlugin::onLoad() { // This line is required for LOG to work and must be before any use of LOG() _globalCvarManager = cvarManager; // do something when it loads LOG(\u0026#34;Hello I\u0026#39;m CoolPlugin B)\u0026#34;); cvarManager-\u0026gt;registerNotifier(\u0026#34;CoolerBallOnTop\u0026#34;, [this](std::vector\u0026lt;std::string\u0026gt; args) { ballOnTop(); }, \u0026#34;\u0026#34;, PERMISSION_ALL); } void CoolPlugin::onUnload() { LOG(\u0026#34;I was too cool for this world B\u0026#39;(\u0026#34;); } void CoolPlugin::ballOnTop() { if (!gameWrapper-\u0026gt;IsInFreeplay()) { return; } ServerWrapper server = gameWrapper-\u0026gt;GetCurrentGameState(); if (!server) { return; } BallWrapper ball = server.GetBall(); if (!ball) { return; } CarWrapper car = gameWrapper-\u0026gt;GetLocalCar(); if (!car) { return; } Vector carVelocity = car.GetVelocity(); ball.SetVelocity(carVelocity); Vector carLocation = car.GetLocation(); float ballRadius = ball.GetRadius(); ball.SetLocation(carLocation + Vector{ 0, 0, ballRadius * 2 }); } Finally build the plugin with ctrl + b. Then start freeplay, load the plugin with plugin load CoolPlugin and call CoolerBallOnTop from the f6 console. The ball should teleport above you!\nIf you want your plugin to load automatically on startup, you can use the plugin manager in game (under the \u0026ldquo;Plugins\u0026rdquo; tab in the BakkesMod menu) and toggle the \u0026ldquo;Loaded\u0026rdquo; checkbox for your plugin.\nYou can find the final code here! https://github.com/ubelhj/BakkesModStarterPlugin/tree/new-starter-tutorial\nNow what if you wanted a user to be able to modify plugin behavior on the fly? Next are Plugin Variables\n"},{"id":198,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/Stats/StatEventWrapper/","title":"StatEventWrapper","parent":"Stats","content":" View Implementation A stat that was just recorded. Use this guide to hook them\n_NODISCARD bool IsNull() const operator bool() const int GetPoints() float GetCooldownSeconds() unsigned long GetbAddToScore() unsigned long GetbIsLeaderboardStat() unsigned long GetbNotifyTicker() unsigned long GetbShowOnHUD() unsigned long GetbPrimaryStat() unsigned long GetbSkipReplication() unsigned long GetbCanMute() unsigned long GetbCountMultiplied() UnrealStringWrapper GetLabel() UnrealStringWrapper GetPluralLabel() UnrealStringWrapper GetDescription() float GetNextCooldownTime() std::string GetGroupName() std::string GetEventName() "},{"id":199,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/PerformanceStats/StatGraphSystemWrapper/","title":"StatGraphSystemWrapper","parent":"Performance Stats","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const float GetGraphSampleTime() void SetGraphSampleTime(float newGraphSampleTime) Parameter Type Description newGraphSampleTime float \u0026mdash; unsigned char GetGraphLevel() void SetGraphLevel(unsigned char newGraphLevel) Parameter Type Description newGraphLevel unsigned char \u0026mdash; PerfStatGraphWrapper GetPerfStatGraph() void SetPerfStatGraph(PerfStatGraphWrapper newPerfStatGraph) Parameter Type Description newPerfStatGraph PerfStatGraphWrapper \u0026mdash; NetStatGraphWrapper GetNetStatGraph() void SetNetStatGraph(NetStatGraphWrapper newNetStatGraph) Parameter Type Description newNetStatGraph NetStatGraphWrapper \u0026mdash; InputBufferGraphWrapper GetInputBufferGraph() void SetInputBufferGraph(InputBufferGraphWrapper newInputBufferGraph) Parameter Type Description newInputBufferGraph InputBufferGraphWrapper \u0026mdash; ArrayWrapper GetStatGraphs() ArrayWrapper GetVisibleStatGraphs() int GetPreallocGraphLines() void SetPreallocGraphLines(int newPreallocGraphLines) Parameter Type Description newPreallocGraphLines int \u0026mdash; void __StatGraphSystem_TA__SetGraphLevel(StatGraphWrapper G) Parameter Type Description G StatGraphWrapper \u0026mdash; void PacketReceived(float Latency) Parameter Type Description Latency float \u0026mdash; void Graphtime(float Seconds) Parameter Type Description Seconds float \u0026mdash; void StatGraphNext() float GetGraphSampleTime2(unsigned char Level) Parameter Type Description Level unsigned char \u0026mdash; void SetGraphLevel2(unsigned char Level) Parameter Type Description Level unsigned char \u0026mdash; "},{"id":200,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/PerformanceStats/StatGraphWrapper/","title":"StatGraphWrapper","parent":"Performance Stats","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const SampleRecordSettingsWrapper GetRecordSettings() void SetRecordSettings(SampleRecordSettingsWrapper newRecordSettings) Parameter Type Description newRecordSettings SampleRecordSettingsWrapper \u0026mdash; double GetLastTickTime() void SetLastTickTime(double newLastTickTime) Parameter Type Description newLastTickTime double \u0026mdash; ArrayWrapper GetSampleHistories() void StopDrawing() SampleHistoryWrapper CreateSampleHistory(std::string Title) Parameter Type Description Title std::string \u0026mdash; SampleHistoryWrapper AddSampleHistory(SampleHistoryWrapper History) Parameter Type Description History SampleHistoryWrapper \u0026mdash; void eventConstruct() "},{"id":201,"href":"/bakkesmod_api/Structs/Wrappers/SteamID/","title":"SteamID","parent":"Wrappers","content":" View Implementation Mostly depreciated. When possible use the epic and steam friendly UniqueIDWrapper\nunsigned long long ID Default value: none\n"},{"id":202,"href":"/bakkesmod_api/Structs/Wrappers/StickyForceData/","title":"StickyForceData","parent":"Wrappers","content":" View Implementation Info on stickiness to wall. Get with VehicleWrapper.GetStickyForce()\nfloat Ground Default value: none\nfloat Wall Default value: none\n"},{"id":203,"href":"/bakkesmod_api/Classes/Wrappers/StructArrayWrapper/","title":"StructArrayWrapper","parent":"Wrappers","content":" View Implementation StructArrayWrapper(const StructArrayWrapper\u0026lt; T \u0026gt; \u0026amp;other) Parameter Type Description other StructArrayWrapper \u0026mdash; StructArrayWrapper operator=(StructArrayWrapper\u0026lt; T \u0026gt; rhs) Parameter Type Description rhs StructArrayWrapper \u0026mdash; ~StructArrayWrapper() int Count() T Get(int index) Parameter Type Description index int \u0026mdash; "},{"id":204,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/SwapperPickup/","title":"SwapperPickup","parent":"Rumble Component","content":" View Implementation CarWrapper GetOtherCar() void SetOtherCar(CarWrapper newOtherCar) Parameter Type Description newOtherCar CarWrapper \u0026mdash; void PickupEnd() void OnTargetChanged() void PickupStart() "},{"id":205,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/TargetedPickup/","title":"TargetedPickup","parent":"Rumble Component","content":" View Implementation unsigned long GetbCanTargetBall() void SetbCanTargetBall(unsigned long newbCanTargetBall) Parameter Type Description newbCanTargetBall unsigned long \u0026mdash; unsigned long GetbCanTargetCars() void SetbCanTargetCars(unsigned long newbCanTargetCars) Parameter Type Description newbCanTargetCars unsigned long \u0026mdash; unsigned long GetbCanTargetEnemyCars() void SetbCanTargetEnemyCars(unsigned long newbCanTargetEnemyCars) Parameter Type Description newbCanTargetEnemyCars unsigned long \u0026mdash; unsigned long GetbCanTargetTeamCars() void SetbCanTargetTeamCars(unsigned long newbCanTargetTeamCars) Parameter Type Description newbCanTargetTeamCars unsigned long \u0026mdash; unsigned long GetbUseDirectionalTargeting() void SetbUseDirectionalTargeting(unsigned long newbUseDirectionalTargeting) Parameter Type Description newbUseDirectionalTargeting unsigned long \u0026mdash; unsigned long GetbRequireTrace() void SetbRequireTrace(unsigned long newbRequireTrace) Parameter Type Description newbRequireTrace unsigned long \u0026mdash; float GetRange() void SetRange(float newRange) Parameter Type Description newRange float \u0026mdash; float GetDirectionalTargetingAccuracy() void SetDirectionalTargetingAccuracy(float newDirectionalTargetingAccuracy) Parameter Type Description newDirectionalTargetingAccuracy float \u0026mdash; RBActorWrapper GetClientTarget() void SetClientTarget(RBActorWrapper newClientTarget) Parameter Type Description newClientTarget RBActorWrapper \u0026mdash; RBActorWrapper GetTargeted() void SetTargeted(RBActorWrapper newTargeted) Parameter Type Description newTargeted RBActorWrapper \u0026mdash; RBActorWrapper GetClientTarget2() void TargetChanged() void OnTargetChanged() bool TryActivate(RBActorWrapper TargetOverride) Parameter Type Description TargetOverride RBActorWrapper \u0026mdash; bool ValidateTargetTrace(RBActorWrapper InTarget) Parameter Type Description InTarget RBActorWrapper \u0026mdash; bool ValidateTarget2(RBActorWrapper InTarget) Parameter Type Description InTarget RBActorWrapper \u0026mdash; RBActorWrapper GetTarget2() "},{"id":206,"href":"/bakkesmod_api/Classes/Wrappers/GameEvent/TeamGameEventWrapper/","title":"TeamGameEventWrapper","parent":"Game Event","content":" View Implementation ArrayWrapper GetTeamArchetypes() ArrayWrapper GetTeams() int GetMaxTeamSize() void SetMaxTeamSize(int newMaxTeamSize) Parameter Type Description newMaxTeamSize int \u0026mdash; int GetNumBots() void SetNumBots(int newNumBots) Parameter Type Description newNumBots int \u0026mdash; unsigned long GetbMuteOppositeTeams() void SetbMuteOppositeTeams(unsigned long newbMuteOppositeTeams) Parameter Type Description newbMuteOppositeTeams unsigned long \u0026mdash; unsigned long GetbDisableMutingOtherTeam() void SetbDisableMutingOtherTeam(unsigned long newbDisableMutingOtherTeam) Parameter Type Description newbDisableMutingOtherTeam unsigned long \u0026mdash; unsigned long GetbForfeit() void SetbForfeit(unsigned long newbForfeit) Parameter Type Description newbForfeit unsigned long \u0026mdash; unsigned long GetbUnfairTeams() void SetbUnfairTeams(unsigned long newbUnfairTeams) Parameter Type Description newbUnfairTeams unsigned long \u0026mdash; unsigned long GetbAlwaysAutoSelectTeam() void SetbAlwaysAutoSelectTeam(unsigned long newbAlwaysAutoSelectTeam) Parameter Type Description newbAlwaysAutoSelectTeam unsigned long \u0026mdash; void StartRematchVote() void CheckRematchVote() bool __GameEvent_Team_TA__AllTeamsHaveHumans(TeamWrapper Team) Parameter Type Description Team TeamWrapper \u0026mdash; void UpdatePlayerShortcuts() void ClearTemporarySpawnSpots() bool ChooseTeam(int TeamIndex, PlayerControllerWrapper Player) Parameter Type Description TeamIndex int \u0026mdash; Player PlayerControllerWrapper \u0026mdash; bool CanChangeTeam() void OnPenaltyChanged() void OnTeamForfeited(TeamWrapper Team) Parameter Type Description Team TeamWrapper \u0026mdash; void HandleTeamForfeit(TeamWrapper Team) Parameter Type Description Team TeamWrapper \u0026mdash; void MuteOppositeTeams2(unsigned long bMute) Parameter Type Description bMute unsigned long \u0026mdash; void UpdateBotCount() bool FindBotReplacement(PriWrapper PRI) Parameter Type Description PRI PriWrapper \u0026mdash; void EndGame() void ForceNoContest() void AddTemporarySpawnSpot(TeamWrapper Team, CarWrapper Car) Parameter Type Description Team TeamWrapper \u0026mdash; Car CarWrapper \u0026mdash; void HandleSelectedLoadout(PriWrapper PlayerPRI) Parameter Type Description PlayerPRI PriWrapper \u0026mdash; void DestroyTeams() void OnAllTeamsCreated() void AssignCustomTeamSettings() void OnMatchSettingsChanged() bool AllTeamsHaveHumans2() bool AllTeamsCreated2() void SetTeam(int TeamNum, TeamWrapper NewTeam) Parameter Type Description TeamNum int \u0026mdash; NewTeam TeamWrapper \u0026mdash; void CreateTeams() void PreloadBots() void OnInit() void SetMaxTeamSize2(int MaxSize) Parameter Type Description MaxSize int \u0026mdash; void UpdateMaxTeamSize() void SetUnfairTeams(unsigned long bUnfair) Parameter Type Description bUnfair unsigned long \u0026mdash; void InitBotSkill() void eventInitGame(std::string Options) Parameter Type Description Options std::string \u0026mdash; "},{"id":207,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/TeamInfoWrapper/","title":"TeamInfoWrapper","parent":"Game Object","content":" View Implementation UnrealStringWrapper GetTeamName() int GetSize() void SetSize(int newSize) Parameter Type Description newSize int \u0026mdash; int GetScore() void SetScore(int newScore) Parameter Type Description newScore int \u0026mdash; int GetTeamIndex() void SetTeamIndex(int newTeamIndex) Parameter Type Description newTeamIndex int \u0026mdash; UnrealColor GetTeamColor() void SetTeamColor(UnrealColor newTeamColor) Parameter Type Description newTeamColor UnrealColor \u0026mdash; unsigned char GetTeamNum() void eventDestroyed() "},{"id":208,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/TeamWrapper/","title":"TeamWrapper","parent":"Game Object","content":" View Implementation LinearColor GetPrimaryColor() LinearColor GetSecondaryColor() LinearColor GetFontColor() void SetFontColor(LinearColor newFontColor) Parameter Type Description newFontColor LinearColor \u0026mdash; LinearColor GetColorBlindFontColor() void SetColorBlindFontColor(LinearColor newColorBlindFontColor) Parameter Type Description newColorBlindFontColor LinearColor \u0026mdash; UnrealColor GetTeamControllerColor() void SetTeamControllerColor(UnrealColor newTeamControllerColor) Parameter Type Description newTeamControllerColor UnrealColor \u0026mdash; UnrealColor GetTeamScoreStrobeColor() void SetTeamScoreStrobeColor(UnrealColor newTeamScoreStrobeColor) Parameter Type Description newTeamScoreStrobeColor UnrealColor \u0026mdash; StructArrayWrapper GetDefaultColorList() StructArrayWrapper GetColorBlindColorList() StructArrayWrapper GetCurrentColorList() TeamGameEventWrapper GetGameEvent() void SetGameEvent(TeamGameEventWrapper newGameEvent) Parameter Type Description newGameEvent TeamGameEventWrapper \u0026mdash; ArrayWrapper GetMembers() UnrealStringWrapper GetCustomTeamName() UnrealStringWrapper GetSanitizedTeamName() unsigned long long GetClubID() void SetClubID(unsigned long long newClubID) Parameter Type Description newClubID unsigned long long \u0026mdash; unsigned long GetbForfeit() void SetbForfeit(unsigned long newbForfeit) Parameter Type Description newbForfeit unsigned long \u0026mdash; bool __Team_TA__GetHumanPlayers(PriWrapper PRI) Parameter Type Description PRI PriWrapper \u0026mdash; bool __Team_TA__GetHumanPrimaryPlayers(PriWrapper PRI) Parameter Type Description PRI PriWrapper \u0026mdash; bool __Team_TA__GetNumOfMembersThatCanStartForfeit(PriWrapper P) Parameter Type Description P PriWrapper \u0026mdash; void __Team_TA__EnableAllMembersStartVoteToForfeit(PriWrapper Member) Parameter Type Description Member PriWrapper \u0026mdash; void OnClubColorsChanged() void Forfeit2() void EnableAllMembersStartVoteToForfeit2() void EnableAllMembersStartVoteToForfeitIfNecessary() void VoteToForfeit22(PriWrapper PRI) Parameter Type Description PRI PriWrapper \u0026mdash; void NotifyKismetTeamColorChanged() void UpdateColors() void SetLogo(int LogoID, unsigned long bSwapColors) Parameter Type Description LogoID int \u0026mdash; bSwapColors unsigned long \u0026mdash; void HandleTeamNameSanitized(std::string Original, std::string Sanitized) Parameter Type Description Original std::string \u0026mdash; Sanitized std::string \u0026mdash; void SetClubID2(unsigned long long InClubID) Parameter Type Description InClubID unsigned long long \u0026mdash; void SetCustomTeamName(std::string NewName) Parameter Type Description NewName std::string \u0026mdash; void SetDefaultColors() bool IsSingleParty() PriWrapper GetTeamMemberNamed(std::string PlayerName) Parameter Type Description PlayerName std::string \u0026mdash; int GetNumBots() int GetNumHumans() void OnScoreUpdated() void ResetScore() void RemovePoints(int Points) Parameter Type Description Points int \u0026mdash; void SetScore(int Points) Parameter Type Description Points int \u0026mdash; void ScorePoint(int AdditionalScore) Parameter Type Description AdditionalScore int \u0026mdash; void MuteOtherTeam(TeamWrapper OtherTeam, unsigned long bMute) Parameter Type Description OtherTeam TeamWrapper \u0026mdash; bMute unsigned long \u0026mdash; void ClearTemporarySpawnSpots() void ExpireTemporarySpawnSpots() void AddTemporarySpawnSpot(ActorWrapper AtActor) Parameter Type Description AtActor ActorWrapper \u0026mdash; void OnGameEventSet() void SetGameEvent2(TeamGameEventWrapper InGameEvent) Parameter Type Description InGameEvent TeamGameEventWrapper \u0026mdash; "},{"id":209,"href":"/bakkesmod_api/Classes/Wrappers/Modals/TextInputModalWrapper/","title":"TextInputModalWrapper","parent":"Modals","content":" View Implementation void SetTextInput(const std::string \u0026amp;defaultText, int32_t max_text_length, bool password, std::function\u0026lt; void(std::string, bool)\u0026gt; input_callback) Parameter Type Description defaultText const std::string \u0026amp; \u0026mdash; max_text_length int32_t \u0026mdash; password bool \u0026mdash; input_callback std::function\u0026lt; void(std::string, bool)\u0026gt; \u0026mdash; "},{"id":210,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/TimeBombPickup/","title":"TimeBombPickup","parent":"Rumble Component","content":" View Implementation float GetRadius() void SetRadius(float newRadius) Parameter Type Description newRadius float \u0026mdash; float GetAlmostReadyDuration() void SetAlmostReadyDuration(float newAlmostReadyDuration) Parameter Type Description newAlmostReadyDuration float \u0026mdash; float GetStartMatSpeed() void SetStartMatSpeed(float newStartMatSpeed) Parameter Type Description newStartMatSpeed float \u0026mdash; float GetAlmostReadyMatSpeed() void SetAlmostReadyMatSpeed(float newAlmostReadyMatSpeed) Parameter Type Description newAlmostReadyMatSpeed float \u0026mdash; float GetImpulseForce() void SetImpulseForce(float newImpulseForce) Parameter Type Description newImpulseForce float \u0026mdash; float GetCarVerticalForce() void SetCarVerticalForce(float newCarVerticalForce) Parameter Type Description newCarVerticalForce float \u0026mdash; float GetCarTorque() void SetCarTorque(float newCarTorque) Parameter Type Description newCarTorque float \u0026mdash; unsigned long GetbDemolish() void SetbDemolish(unsigned long newbDemolish) Parameter Type Description newbDemolish unsigned long \u0026mdash; unsigned long GetbImpulse() void SetbImpulse(unsigned long newbImpulse) Parameter Type Description newbImpulse unsigned long \u0026mdash; void PickupEnd() void AlmostReady2() void PickupStart() "},{"id":211,"href":"/bakkesmod_api/Enums/ToastType/","title":"ToastType","parent":"Enums","content":" View Implementation Possible colors for Toasts.\nToastType_Info is black, ToastType_OK is green, ToastType_Warning is orange, and ToastType_Error is red\nToastType_Info = 0\nToastType_OK = 1\nToastType_Warning = 2\nToastType_Error = 3\n"},{"id":212,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/TornadoPickup/","title":"TornadoPickup","parent":"Rumble Component","content":" View Implementation float GetHeight() void SetHeight(float newHeight) Parameter Type Description newHeight float \u0026mdash; float GetRadius() void SetRadius(float newRadius) Parameter Type Description newRadius float \u0026mdash; Vector GetOffset() void SetOffset(Vector newOffset) Parameter Type Description newOffset Vector \u0026mdash; float GetRotationalForce() void SetRotationalForce(float newRotationalForce) Parameter Type Description newRotationalForce float \u0026mdash; float GetTorque() void SetTorque(float newTorque) Parameter Type Description newTorque float \u0026mdash; Vector GetFXScale() void SetFXScale(Vector newFXScale) Parameter Type Description newFXScale Vector \u0026mdash; Vector GetFXOffset() void SetFXOffset(Vector newFXOffset) Parameter Type Description newFXOffset Vector \u0026mdash; Vector GetMeshOffset() void SetMeshOffset(Vector newMeshOffset) Parameter Type Description newMeshOffset Vector \u0026mdash; Vector GetMeshScale() void SetMeshScale(Vector newMeshScale) Parameter Type Description newMeshScale Vector \u0026mdash; float GetMaxVelocityOffset() void SetMaxVelocityOffset(float newMaxVelocityOffset) Parameter Type Description newMaxVelocityOffset float \u0026mdash; float GetBallMultiplier() void SetBallMultiplier(float newBallMultiplier) Parameter Type Description newBallMultiplier float \u0026mdash; unsigned long GetbDebugVis() void SetbDebugVis(unsigned long newbDebugVis) Parameter Type Description newbDebugVis unsigned long \u0026mdash; float GetVelocityEase() void SetVelocityEase(float newVelocityEase) Parameter Type Description newVelocityEase float \u0026mdash; Vector GetVel() void SetVel(Vector newVel) Parameter Type Description newVel Vector \u0026mdash; ArrayWrapper GetAffecting() void ApplyForces(float ActiveTime) Parameter Type Description ActiveTime float \u0026mdash; void PlayCarSFX(RBActorWrapper InActor) Parameter Type Description InActor RBActorWrapper \u0026mdash; void PlayBallSFX(RBActorWrapper InActor) Parameter Type Description InActor RBActorWrapper \u0026mdash; "},{"id":213,"href":"/bakkesmod_api/Enums/TRADEHOLD/","title":"TRADEHOLD","parent":"Enums","content":" View Implementation TRADEHOLD_P2P = -2\nTRADEHOLD_ALL = -1\nTRADEHOLD_NONE = 0\n"},{"id":214,"href":"/bakkesmod_api/Classes/Wrappers/Items/TradeWrapper/","title":"TradeWrapper","parent":"Items","content":" View Implementation Currency GetReceivingCurrency() const Currency GetSendingCurrency() const ArrayWrapper GetReceivingProducts() ArrayWrapper GetSendingProducts() UniqueIDWrapper GetTradingPlayer() const GUIDWrapper GetTradeGuid() const bool IsNull() operator bool() "},{"id":215,"href":"/bakkesmod_api/Classes/Wrappers/GameEvent/SaveData/TrainingEditorSaveDataWrapper/","title":"TrainingEditorSaveDataWrapper","parent":"Save Data","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const UnrealStringWrapper GetCode() UnrealStringWrapper GetTM_Name() unsigned char GetType() void SetType(unsigned char newType) Parameter Type Description newType unsigned char \u0026mdash; unsigned char GetDifficulty() void SetDifficulty(unsigned char newDifficulty) Parameter Type Description newDifficulty unsigned char \u0026mdash; UnrealStringWrapper GetCreatorName() UnrealStringWrapper GetDescription() int GetNumRounds() void SetNumRounds(int newNumRounds) Parameter Type Description newNumRounds int \u0026mdash; unsigned long long GetCreatedAt() void SetCreatedAt(unsigned long long newCreatedAt) Parameter Type Description newCreatedAt unsigned long long \u0026mdash; unsigned long long GetUpdatedAt() void SetUpdatedAt(unsigned long long newUpdatedAt) Parameter Type Description newUpdatedAt unsigned long long \u0026mdash; SteamID GetCreatorPlayerID() void SetCreatorPlayerID(SteamID newCreatorPlayerID) Parameter Type Description newCreatorPlayerID SteamID \u0026mdash; void Init() UniqueIDWrapper GetCreatorPlayerUniqueID() "},{"id":216,"href":"/bakkesmod_api/Classes/Wrappers/GameEvent/TrainingEditorWrapper/","title":"TrainingEditorWrapper","parent":"Game Event","content":" View Implementation float GetMinRoundTime() void SetMinRoundTime(float newMinRoundTime) Parameter Type Description newMinRoundTime float \u0026mdash; float GetMaxRoundTime() void SetMaxRoundTime(float newMaxRoundTime) Parameter Type Description newMaxRoundTime float \u0026mdash; unsigned long GetbNoEditor() void SetbNoEditor(unsigned long newbNoEditor) Parameter Type Description newbNoEditor unsigned long \u0026mdash; unsigned long GetbDisplayedRedoPenaltyMessage() void SetbDisplayedRedoPenaltyMessage(unsigned long newbDisplayedRedoPenaltyMessage) Parameter Type Description newbDisplayedRedoPenaltyMessage unsigned long \u0026mdash; unsigned long GetbUnsavedChanges() void SetbUnsavedChanges(unsigned long newbUnsavedChanges) Parameter Type Description newbUnsavedChanges unsigned long \u0026mdash; int GetPointsScoredThisRound() void SetPointsScoredThisRound(int newPointsScoredThisRound) Parameter Type Description newPointsScoredThisRound int \u0026mdash; int GetShotAttempt() void SetShotAttempt(int newShotAttempt) Parameter Type Description newShotAttempt int \u0026mdash; int GetGoalieScore() void SetGoalieScore(int newGoalieScore) Parameter Type Description newGoalieScore int \u0026mdash; unsigned char GetPlayTestType() void SetPlayTestType(unsigned char newPlayTestType) Parameter Type Description newPlayTestType unsigned char \u0026mdash; ArrayWrapper GetGoalMeshBlockers() ActorWrapper GetGoalMeshBlockerArchetype() void SetGoalMeshBlockerArchetype(ActorWrapper newGoalMeshBlockerArchetype) Parameter Type Description newGoalMeshBlockerArchetype ActorWrapper \u0026mdash; GameEditorSaveDataWrapper GetTrainingData() void SetTrainingData(GameEditorSaveDataWrapper newTrainingData) Parameter Type Description newTrainingData GameEditorSaveDataWrapper \u0026mdash; float GetSaveDelayTime() void SetSaveDelayTime(float newSaveDelayTime) Parameter Type Description newSaveDelayTime float \u0026mdash; float GetSaveCooldown() void SetSaveCooldown(float newSaveCooldown) Parameter Type Description newSaveCooldown float \u0026mdash; UnrealStringWrapper GetTrainingFileName() void OnLoadingMovieClosed() void TagHistoryChanges() void MarkAsDirty() void ForceTagHistoryChanges() void SetTracedCrosshairActor(PlayerControllerWrapper PC, ActorWrapper NewActor) Parameter Type Description PC PlayerControllerWrapper \u0026mdash; NewActor ActorWrapper \u0026mdash; bool DestroyBall(BallWrapper Ball) Parameter Type Description Ball BallWrapper \u0026mdash; bool AllowDynamicCrowd() void BroadcastGoMessage() int GetTotalRounds() unsigned char GetDifficulty() unsigned char GetTrainingType() void Save2() void OnTrainingModeLoaded() void DuplicateRound(int Index) Parameter Type Description Index int \u0026mdash; void ReorderRound(int FromIndex, int ToIndex) Parameter Type Description FromIndex int \u0026mdash; ToIndex int \u0026mdash; void SetRoundTimeLimit(float NewRoundTime) Parameter Type Description NewRoundTime float \u0026mdash; bool HandleNextGame() void ResetBalls() void Load2(std::string SaveName, PlayerControllerWrapper PC) Parameter Type Description SaveName std::string \u0026mdash; PC PlayerControllerWrapper \u0026mdash; void DestroyGoalMeshBlockers() void UpdateGoalMeshBlocker() int GetScore() void RemovePointsFromScore(int PointsToRemove, int TeamIndex) Parameter Type Description PointsToRemove int \u0026mdash; TeamIndex int \u0026mdash; bool ShowScorerGoalMessage() void ShowResetRoundMessage() bool ShowPenaltyMessage() int GetPlayerTeamNumber() int GetBallGoalScoreNumber() void RemoveAllPointsFromScore(int TeamIndex) Parameter Type Description TeamIndex int \u0026mdash; bool IncrementRound(unsigned long bLoop) Parameter Type Description bLoop unsigned long \u0026mdash; Vector AdjustToFloorLocation(Vector \u0026amp;TraceStart, Vector \u0026amp;CollsionExtent) Parameter Type Description TraceStart Vector \u0026mdash; CollsionExtent Vector \u0026mdash; ActorWrapper SpawnArchetypeAtAndAdjustToFloor(ActorWrapper Archetype, Vector \u0026amp;SpawnLocation, Rotator \u0026amp;SpawnRotation) Parameter Type Description Archetype ActorWrapper \u0026mdash; SpawnLocation Vector \u0026mdash; SpawnRotation Rotator \u0026mdash; void SpawnBallAndStartPointAt(Vector \u0026amp;BallSpawnLocation, Rotator \u0026amp;BallSpawnRotation, Vector \u0026amp;StartPointSpawnLocation, Rotator \u0026amp;StartPointSpawnRotation) Parameter Type Description BallSpawnLocation Vector \u0026mdash; BallSpawnRotation Rotator \u0026mdash; StartPointSpawnLocation Vector \u0026mdash; StartPointSpawnRotation Rotator \u0026mdash; void SetupDefaultRound() void SwitchToRoundNumber(int RoundNumber, unsigned long BackupCurrentRound) Parameter Type Description RoundNumber int \u0026mdash; BackupCurrentRound unsigned long \u0026mdash; void DeleteRound(int RoundToDelete) Parameter Type Description RoundToDelete int \u0026mdash; void RestartPlayTest() void EndPlayTest() void StartPlayTest(unsigned char InPlayTestType) Parameter Type Description InPlayTestType unsigned char \u0026mdash; bool CanPlayTestRoundNumber(int RoundNumber) Parameter Type Description RoundNumber int \u0026mdash; void SetUnsavedChanges(unsigned long bInUnsavedChanges) Parameter Type Description bInUnsavedChanges unsigned long \u0026mdash; void UpdateActiveRoundData() void StartNewRound() bool IsValidRoundIndex(int ArrayIndex) Parameter Type Description ArrayIndex int \u0026mdash; void AddLocalPlayer(PlayerControllerWrapper Player) Parameter Type Description Player PlayerControllerWrapper \u0026mdash; void OnInit() void eventDestroyed() void eventPostBeginPlay() void EventSaveResult(unsigned long bSuccess) Parameter Type Description bSuccess unsigned long \u0026mdash; void EventUnsavedChanges(unsigned long bOutUnsavedChanges) Parameter Type Description bOutUnsavedChanges unsigned long \u0026mdash; void EventPlaytestStarted(TrainingEditorWrapper GamEvent) Parameter Type Description GamEvent TrainingEditorWrapper \u0026mdash; void EventRoundChanged(TrainingEditorWrapper GamEvent) Parameter Type Description GamEvent TrainingEditorWrapper \u0026mdash; void EventRoundTimeChanged(TrainingEditorWrapper GameEvent) Parameter Type Description GameEvent TrainingEditorWrapper \u0026mdash; "},{"id":217,"href":"/bakkesmod_api/Structs/Wrappers/TrainingRoundProgress/","title":"TrainingRoundProgress","parent":"Wrappers","content":" View Implementation int RoundNumber Default value: none\nunsigned char Status Default value: none\nunsigned char Padding Default value: none\n"},{"id":218,"href":"/bakkesmod_api/Classes/Wrappers/GameEvent/TutorialWrapper/","title":"TutorialWrapper","parent":"Game Event","content":" View Implementation void Redo() Vector GetCarSpawnLocation() void SetCarSpawnLocation(Vector v) Parameter Type Description v Vector \u0026mdash; Rotator GetCarSpawnRotation() void SetCarSpawnRotation(Rotator v) Parameter Type Description v Rotator \u0026mdash; CarWrapper GetGameCar() bool IsBallMovingTowardsGoal(int goalNo, BallWrapper bw) Parameter Type Description goalNo int \u0026mdash; bw BallWrapper \u0026mdash; bool IsInGoal(Vector vec) Parameter Type Description vec Vector \u0026mdash; void DisableGoalReset() void EnableGoalReset() Vector GenerateShot(Vector startPos, Vector destination, float speed) Parameter Type Description startPos Vector \u0026mdash; destination Vector \u0026mdash; speed float \u0026mdash; Vector GenerateGoalAimLocation(int goalNumber, Vector currentBallLocation) Parameter Type Description goalNumber int \u0026mdash; currentBallLocation Vector \u0026mdash; Vector GetGoalExtent(int goalNumber=0) Parameter Type Description goalNumber int \u0026mdash; Vector GetGoalLocation(int goalNumber=0) Parameter Type Description goalNumber int \u0026mdash; Vector GetTotalFieldExtent() void SetTotalFieldExtent(Vector newTotalFieldExtent) Parameter Type Description newTotalFieldExtent Vector \u0026mdash; int GetTeamNum() void SetTeamNum(int newTeamNum) Parameter Type Description newTeamNum int \u0026mdash; int GetBallGoalNum() void SetBallGoalNum(int newBallGoalNum) Parameter Type Description newBallGoalNum int \u0026mdash; unsigned long GetbOnlyScoreInBallGoalNum() void SetbOnlyScoreInBallGoalNum(unsigned long newbOnlyScoreInBallGoalNum) Parameter Type Description newbOnlyScoreInBallGoalNum unsigned long \u0026mdash; unsigned long GetbRedoRound() void SetbRedoRound(unsigned long newbRedoRound) Parameter Type Description newbRedoRound unsigned long \u0026mdash; unsigned long GetbAllowSuperBoost() void SetbAllowSuperBoost(unsigned long newbAllowSuperBoost) Parameter Type Description newbAllowSuperBoost unsigned long \u0026mdash; unsigned long GetbDisplayedRedoPenaltyMessage() void SetbDisplayedRedoPenaltyMessage(unsigned long newbDisplayedRedoPenaltyMessage) Parameter Type Description newbDisplayedRedoPenaltyMessage unsigned long \u0026mdash; unsigned long GetbShowBoostMeter() void SetbShowBoostMeter(unsigned long newbShowBoostMeter) Parameter Type Description newbShowBoostMeter unsigned long \u0026mdash; unsigned char GetDifficulty() void SetDifficulty(unsigned char newDifficulty) Parameter Type Description newDifficulty unsigned char \u0026mdash; unsigned char GetDebugRotationType() void SetDebugRotationType(unsigned char newDebugRotationType) Parameter Type Description newDebugRotationType unsigned char \u0026mdash; float GetGoalDepth() void SetGoalDepth(float newGoalDepth) Parameter Type Description newGoalDepth float \u0026mdash; int GetGameEventRounds() void SetGameEventRounds(int newGameEventRounds) Parameter Type Description newGameEventRounds int \u0026mdash; float GetEventStartTime() void SetEventStartTime(float newEventStartTime) Parameter Type Description newEventStartTime float \u0026mdash; Vector GetBallInitialVelocity() void SetBallInitialVelocity(Vector newBallInitialVelocity) Parameter Type Description newBallInitialVelocity Vector \u0026mdash; int GetSpawnIndexTypeOverride() void SetSpawnIndexTypeOverride(int newSpawnIndexTypeOverride) Parameter Type Description newSpawnIndexTypeOverride int \u0026mdash; int GetWaveIndex() void SetWaveIndex(int newWaveIndex) Parameter Type Description newWaveIndex int \u0026mdash; int GetWaveSpawnCount() void SetWaveSpawnCount(int newWaveSpawnCount) Parameter Type Description newWaveSpawnCount int \u0026mdash; int GetRandomSpawnIndex() void SetRandomSpawnIndex(int newRandomSpawnIndex) Parameter Type Description newRandomSpawnIndex int \u0026mdash; UnrealStringWrapper GetStartMessageArchetype() Vector GetBallSpawnLocation() void SetBallSpawnLocation(Vector newBallSpawnLocation) Parameter Type Description newBallSpawnLocation Vector \u0026mdash; int GetPointsScoredThisRound() void SetPointsScoredThisRound(int newPointsScoredThisRound) Parameter Type Description newPointsScoredThisRound int \u0026mdash; int GetBallSpawnCount() void SetBallSpawnCount(int newBallSpawnCount) Parameter Type Description newBallSpawnCount int \u0026mdash; float GetBallBounceScale() void SetBallBounceScale(float newBallBounceScale) Parameter Type Description newBallBounceScale float \u0026mdash; int GetCurrentDebugStepX() void SetCurrentDebugStepX(int newCurrentDebugStepX) Parameter Type Description newCurrentDebugStepX int \u0026mdash; int GetCurrentDebugStepY() void SetCurrentDebugStepY(int newCurrentDebugStepY) Parameter Type Description newCurrentDebugStepY int \u0026mdash; int GetCurrentDebugStepZ() void SetCurrentDebugStepZ(int newCurrentDebugStepZ) Parameter Type Description newCurrentDebugStepZ int \u0026mdash; int GetRedoCount() void SetRedoCount(int newRedoCount) Parameter Type Description newRedoCount int \u0026mdash; int GetRedoTotal() void SetRedoTotal(int newRedoTotal) Parameter Type Description newRedoTotal int \u0026mdash; void InitIntro() void OnLoadingMovieClosed() void StartTimers() void UpdateMVP() bool AllowDynamicCrowd() void SetTutorialTip(std::string NewTip) Parameter Type Description NewTip std::string \u0026mdash; void SetShowBoostMeter(unsigned long bShow) Parameter Type Description bShow unsigned long \u0026mdash; float GetStepLoc(int Steps, float TotalDist, unsigned long bIncrement, int *Out_CurrentStep) Parameter Type Description Steps int \u0026mdash; TotalDist float \u0026mdash; bIncrement unsigned long \u0026mdash; Out_CurrentStep int * \u0026mdash; Vector GetDebugLocationInExtent(Vector \u0026amp;Extent) Parameter Type Description Extent Vector \u0026mdash; void InitDebugSetup(CarWrapper Car) Parameter Type Description Car CarWrapper \u0026mdash; void SkipTutorial() void UpdateBotCount() void InitMutators() bool IsPrimaryPlayer(CarWrapper Car) Parameter Type Description Car CarWrapper \u0026mdash; bool CanAwardPoints() void ShowResetRoundMessage() void Destroyed() bool EndTutorial() void CommitRedoRound() void RedoRound2() bool CanRedoRound() void StartNewRound() void SaveLocalPlayerStats() TeamWrapper GetWinningTeam() void CleanupRoundActors() bool CanQueSaveReplay() void ResetBalls() int GetScore() void StartRound() int GetGameEventRounds2() int GetTotalRounds() void ResetRoundTime() void OnPlayerRestarted(CarWrapper PlayerCar) Parameter Type Description PlayerCar CarWrapper \u0026mdash; unsigned char GetTrainingType() void EndGame() Vector GetRandomLocationInExtent(Vector \u0026amp;Extent) Parameter Type Description Extent Vector \u0026mdash; bool Chance(int Chances) Parameter Type Description Chances int \u0026mdash; int GetOppositeTeamNum() Vector GetDirectionToGoal(int GoalNum) Parameter Type Description GoalNum int \u0026mdash; bool IsGameEventComplete() Vector ClampPointToExtent(Vector \u0026amp;ExtentCenter, Vector \u0026amp;Point, Vector \u0026amp;Extent) Parameter Type Description ExtentCenter Vector \u0026mdash; Point Vector \u0026mdash; Extent Vector \u0026mdash; Vector PredictInitialVelocity(Vector \u0026amp;StartLoc, Vector \u0026amp;EndLoc, float Z) Parameter Type Description StartLoc Vector \u0026mdash; EndLoc Vector \u0026mdash; Z float \u0026mdash; BallWrapper GetGameBall() CarWrapper GetGamePawn() void ResetGameEvent() void CheckForReset() float GetGoalViewWidth(GoalWrapper Goal, Vector \u0026amp;ViewerLoc) Parameter Type Description Goal GoalWrapper \u0026mdash; ViewerLoc Vector \u0026mdash; bool IsBallMovingTowardsGoal2(GoalWrapper Goal, BallWrapper Ball, float MinVelocityForDestroy, float InGoalDepth) Parameter Type Description Goal GoalWrapper \u0026mdash; Ball BallWrapper \u0026mdash; MinVelocityForDestroy float \u0026mdash; InGoalDepth float \u0026mdash; void SetGoalDepth2() int GetShuffledSpawnIndex() void DestroyCannon() void SetCannonOrientation(Vector \u0026amp;NewLocation, Rotator \u0026amp;NewRotation) Parameter Type Description NewLocation Vector \u0026mdash; NewRotation Rotator \u0026mdash; BallWrapper SpawnBall(Vector \u0026amp;SpawnLoc, unsigned long bWake, unsigned long bSpawnCannon, std::string BallArch) Parameter Type Description SpawnLoc Vector \u0026mdash; bWake unsigned long \u0026mdash; bSpawnCannon unsigned long \u0026mdash; BallArch std::string \u0026mdash; void InitBallEffects() void InitBallVelocity() Vector GetRandomGoalAimLocation(int InTeamNum, Vector \u0026amp;BallLoc) Parameter Type Description InTeamNum int \u0026mdash; BallLoc Vector \u0026mdash; Vector GetGoalExtent2(GoalWrapper Goal) Parameter Type Description Goal GoalWrapper \u0026mdash; void SetBallVelocity(Vector \u0026amp;InitialVelocity, BallWrapper Ball) Parameter Type Description InitialVelocity Vector \u0026mdash; Ball BallWrapper \u0026mdash; void InitGameSetup(CarWrapper Car) Parameter Type Description Car CarWrapper \u0026mdash; bool ShouldAllowSuperBoost() void OnVehicleSetup(CarWrapper Car) Parameter Type Description Car CarWrapper \u0026mdash; void HandleVehicleSetup(CarWrapper Car) Parameter Type Description Car CarWrapper \u0026mdash; void InitCrowdManager() void HandleScoreUpdated(TeamWrapper Team) Parameter Type Description Team TeamWrapper \u0026mdash; void SetDifficulty2(int InDifficulty) Parameter Type Description InDifficulty int \u0026mdash; void UpdateStats() void AddLocalPlayer(PlayerControllerWrapper Player) Parameter Type Description Player PlayerControllerWrapper \u0026mdash; void HandlePlayerResetTraining(GameEventWrapper GameEvent) Parameter Type Description GameEvent GameEventWrapper \u0026mdash; void OnInit() void EventTutorialTipChanged(TutorialWrapper GameEvent, std::string NewTip) Parameter Type Description GameEvent TutorialWrapper \u0026mdash; NewTip std::string \u0026mdash; "},{"id":219,"href":"/bakkesmod_api/Classes/Wrappers/UniqueIDWrapper/","title":"UniqueIDWrapper","parent":"Wrappers","content":" View Implementation UniqueIDWrapper(const UniqueIDWrapper \u0026amp;other) Parameter Type Description other UniqueIDWrapper \u0026mdash; UniqueIDWrapper operator=(UniqueIDWrapper rhs) Parameter Type Description rhs UniqueIDWrapper \u0026mdash; ~UniqueIDWrapper() OnlinePlatform GetPlatform() const std::string GetEpicAccountID() const unsigned long long GetUID() const unsigned char GetSplitscreenID() const std::string str() const std::string GetIdString() const bool operator\u0026lt;(const UniqueIDWrapper \u0026amp;rhs) const Parameter Type Description rhs UniqueIDWrapper \u0026mdash; bool operator==(const UniqueIDWrapper \u0026amp;rhs) const Parameter Type Description rhs UniqueIDWrapper \u0026mdash; bool operator!=(const UniqueIDWrapper \u0026amp;rhs) const Parameter Type Description rhs UniqueIDWrapper \u0026mdash; UniqueIDWrapper FromEpicAccountID(std::string epicAccountID, unsigned long long uid, OnlinePlatform platform, unsigned char splitscreenID=0) Parameter Type Description epicAccountID std::string \u0026mdash; uid unsigned long long \u0026mdash; platform OnlinePlatform \u0026mdash; splitscreenID unsigned char \u0026mdash; "},{"id":220,"href":"/bakkesmod_api/Enums/UNLOCKMETHOD/","title":"UNLOCKMETHOD","parent":"Enums","content":" View Implementation Ways an item can be earned\nDefault = 0\nDrop = 1\nSpecial = 2\nReward = 3\nDLC = 4\nNever = 5\nMAX_ = 6\n"},{"id":221,"href":"/bakkesmod_api/Structs/Wrappers/UnrealColor/","title":"UnrealColor","parent":"Wrappers","content":" View Implementation RGBA stored in 0-255 values for each. A is alpha or opacity. 255 Alpha is max opacity\nunsigned char B Default value: none\nunsigned char G Default value: none\nunsigned char R Default value: none\nunsigned char A Default value: none\n"},{"id":222,"href":"/bakkesmod_api/Classes/Wrappers/Engine/UnrealStringWrapper/","title":"UnrealStringWrapper","parent":"Engine","content":" View Implementation std::string ToString() std::wstring ToWideString() bool IsNull() operator bool() "},{"id":223,"href":"/bakkesmod_api/Structs/Wrappers/Vector/","title":"Vector","parent":"Wrappers","content":" View Implementation A 3D vector. This can define a location, direction or a velocity. This github page describes what 3D space is in Rocket League\nfloat X Default value: none\nfloat Y Default value: none\nfloat Z Default value: none\n"},{"id":224,"href":"/bakkesmod_api/Structs/Wrappers/Vector2/","title":"Vector2","parent":"Wrappers","content":" View Implementation A 2D vector. This is two ints, and can often be used to describe a location on the screen. (0, 0) is the top left corner. +x is to the right, and +y is down\nint X Default value: none\nint Y Default value: none\n"},{"id":225,"href":"/bakkesmod_api/Structs/Wrappers/Vector2F/","title":"Vector2F","parent":"Wrappers","content":" View Implementation A 2D vector, but x and y are floats\nfloat X Default value: none\nfloat Y Default value: none\n"},{"id":226,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/VehiclePickupWrapper/","title":"VehiclePickupWrapper","parent":"Game Object","content":" View Implementation float GetRespawnDelay() void SetRespawnDelay(float newRespawnDelay) Parameter Type Description newRespawnDelay float \u0026mdash; FXActorWrapper GetFXActorArchetype() void SetFXActorArchetype(FXActorWrapper newFXActorArchetype) Parameter Type Description newFXActorArchetype FXActorWrapper \u0026mdash; FXActorWrapper GetFXActor() void SetFXActor(FXActorWrapper newFXActor) Parameter Type Description newFXActor FXActorWrapper \u0026mdash; unsigned long GetbPickedUp() void SetbPickedUp(unsigned long newbPickedUp) Parameter Type Description newbPickedUp unsigned long \u0026mdash; unsigned long GetbNetRelevant() void SetbNetRelevant(unsigned long newbNetRelevant) Parameter Type Description newbNetRelevant unsigned long \u0026mdash; unsigned long GetbNoPickup() void SetbNoPickup(unsigned long newbNoPickup) Parameter Type Description newbNoPickup unsigned long \u0026mdash; void PlayPickedUpFX() bool IsTouchingAVehicle() void UpdateTickDisabled() void SetNetRelevant(unsigned long bRelevant) Parameter Type Description bRelevant unsigned long \u0026mdash; void Respawn2() void SetPickedUp(unsigned long bNewPickedUp, CarWrapper InInstigator) Parameter Type Description bNewPickedUp unsigned long \u0026mdash; InInstigator CarWrapper \u0026mdash; void Pickup2(CarWrapper Car) Parameter Type Description Car CarWrapper \u0026mdash; bool CanPickup(CarWrapper Car) Parameter Type Description Car CarWrapper \u0026mdash; void OnTouch(CarWrapper Car) Parameter Type Description Car CarWrapper \u0026mdash; void eventTouch(ActorWrapper Other, PrimitiveComponentWrapper OtherComp, Vector \u0026amp;HitLocation, Vector \u0026amp;HitNormal) Parameter Type Description Other ActorWrapper \u0026mdash; OtherComp PrimitiveComponentWrapper \u0026mdash; HitLocation Vector \u0026mdash; HitNormal Vector \u0026mdash; void OnPickUp() void OnSpawn() void SetNoPickup() void SetupReplicateNoPickup() void InitFX() void eventPostBeginPlay() void eventPreBeginPlay() void EventPickedUp(VehiclePickupWrapper Pickup) Parameter Type Description Pickup VehiclePickupWrapper \u0026mdash; void EventSpawned(VehiclePickupWrapper Pickup) Parameter Type Description Pickup VehiclePickupWrapper \u0026mdash; "},{"id":227,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/CarComponent/VehicleSimWrapper/","title":"VehicleSimWrapper","parent":"Car Component","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const ArrayWrapper GetWheels() float GetDriveTorque() void SetDriveTorque(float newDriveTorque) Parameter Type Description newDriveTorque float \u0026mdash; float GetBrakeTorque() void SetBrakeTorque(float newBrakeTorque) Parameter Type Description newBrakeTorque float \u0026mdash; float GetStopThreshold() void SetStopThreshold(float newStopThreshold) Parameter Type Description newStopThreshold float \u0026mdash; float GetIdleBrakeFactor() void SetIdleBrakeFactor(float newIdleBrakeFactor) Parameter Type Description newIdleBrakeFactor float \u0026mdash; float GetOppositeBrakeFactor() void SetOppositeBrakeFactor(float newOppositeBrakeFactor) Parameter Type Description newOppositeBrakeFactor float \u0026mdash; unsigned long GetbUseAckermannSteering() void SetbUseAckermannSteering(unsigned long newbUseAckermannSteering) Parameter Type Description newbUseAckermannSteering unsigned long \u0026mdash; unsigned long GetbWasAttached() void SetbWasAttached(unsigned long newbWasAttached) Parameter Type Description newbWasAttached unsigned long \u0026mdash; float GetOutputThrottle() void SetOutputThrottle(float newOutputThrottle) Parameter Type Description newOutputThrottle float \u0026mdash; float GetOutputSteer() void SetOutputSteer(float newOutputSteer) Parameter Type Description newOutputSteer float \u0026mdash; float GetOutputBrake() void SetOutputBrake(float newOutputBrake) Parameter Type Description newOutputBrake float \u0026mdash; float GetOutputHandbrake() void SetOutputHandbrake(float newOutputHandbrake) Parameter Type Description newOutputHandbrake float \u0026mdash; VehicleWrapper GetVehicle() void SetVehicle(VehicleWrapper newVehicle) Parameter Type Description newVehicle VehicleWrapper \u0026mdash; CarWrapper GetCar() void SetCar(CarWrapper newCar) Parameter Type Description newCar CarWrapper \u0026mdash; float GetSteeringSensitivity() void SetSteeringSensitivity(float newSteeringSensitivity) Parameter Type Description newSteeringSensitivity float \u0026mdash; "},{"id":228,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/VehicleWrapper/","title":"VehicleWrapper","parent":"Game Object","content":" View Implementation unsigned long GetbCanJump() void SetbCanJump(unsigned long newbCanJump) Parameter Type Description newbCanJump unsigned long \u0026mdash; VehicleSimWrapper GetVehicleSim() void SetVehicleSim(VehicleSimWrapper newVehicleSim) Parameter Type Description newVehicleSim VehicleSimWrapper \u0026mdash; StickyForceData GetStickyForce() void SetStickyForce(StickyForceData newStickyForce) Parameter Type Description newStickyForce StickyForceData \u0026mdash; unsigned long GetbDriving() void SetbDriving(unsigned long newbDriving) Parameter Type Description newbDriving unsigned long \u0026mdash; unsigned long GetbReplicatedHandbrake() void SetbReplicatedHandbrake(unsigned long newbReplicatedHandbrake) Parameter Type Description newbReplicatedHandbrake unsigned long \u0026mdash; unsigned long GetbJumped() void SetbJumped(unsigned long newbJumped) Parameter Type Description newbJumped unsigned long \u0026mdash; unsigned long GetbDoubleJumped() void SetbDoubleJumped(unsigned long newbDoubleJumped) Parameter Type Description newbDoubleJumped unsigned long \u0026mdash; unsigned long GetbOnGround() void SetbOnGround(unsigned long newbOnGround) Parameter Type Description newbOnGround unsigned long \u0026mdash; unsigned long GetbSuperSonic() void SetbSuperSonic(unsigned long newbSuperSonic) Parameter Type Description newbSuperSonic unsigned long \u0026mdash; unsigned long GetbPodiumMode() void SetbPodiumMode(unsigned long newbPodiumMode) Parameter Type Description newbPodiumMode unsigned long \u0026mdash; ControllerInput GetInput() void SetInput(ControllerInput newInput) Parameter Type Description newInput ControllerInput \u0026mdash; unsigned char GetReplicatedThrottle() void SetReplicatedThrottle(unsigned char newReplicatedThrottle) Parameter Type Description newReplicatedThrottle unsigned char \u0026mdash; unsigned char GetReplicatedSteer() void SetReplicatedSteer(unsigned char newReplicatedSteer) Parameter Type Description newReplicatedSteer unsigned char \u0026mdash; AIControllerWrapper GetAIController() PlayerControllerWrapper GetPlayerController() void SetPlayerController(PlayerControllerWrapper newPlayerController) Parameter Type Description newPlayerController PlayerControllerWrapper \u0026mdash; PriWrapper GetPRI() void SetPRI(PriWrapper newPRI) Parameter Type Description newPRI PriWrapper \u0026mdash; int GetVehicleUpdateTag() void SetVehicleUpdateTag(int newVehicleUpdateTag) Parameter Type Description newVehicleUpdateTag int \u0026mdash; Vector GetLocalCollisionOffset() void SetLocalCollisionOffset(Vector newLocalCollisionOffset) Parameter Type Description newLocalCollisionOffset Vector \u0026mdash; Vector GetLocalCollisionExtent() void SetLocalCollisionExtent(Vector newLocalCollisionExtent) Parameter Type Description newLocalCollisionExtent Vector \u0026mdash; int GetLastBallTouchFrame() void SetLastBallTouchFrame(int newLastBallTouchFrame) Parameter Type Description newLastBallTouchFrame int \u0026mdash; int GetLastBallImpactFrame() void SetLastBallImpactFrame(int newLastBallImpactFrame) Parameter Type Description newLastBallImpactFrame int \u0026mdash; BoostWrapper GetBoostComponent() DodgeComponentWrapper GetDodgeComponent() AirControlComponentWrapper GetAirControlComponent() JumpComponentWrapper GetJumpComponent() DoubleJumpComponentWrapper GetDoubleJumpComponent() void SetDoubleJumpComponent(DoubleJumpComponentWrapper newDoubleJumpComponent) Parameter Type Description newDoubleJumpComponent DoubleJumpComponentWrapper \u0026mdash; float GetTimeBelowSupersonicSpeed() void SetTimeBelowSupersonicSpeed(float newTimeBelowSupersonicSpeed) Parameter Type Description newTimeBelowSupersonicSpeed float \u0026mdash; void ForceNetPacketIfNearBall() bool IsCarWithinForwardEllipticalCone(VehicleWrapper OtherCar, float YawAngleDegrees, float PitchAngleDegrees) Parameter Type Description OtherCar VehicleWrapper \u0026mdash; YawAngleDegrees float \u0026mdash; PitchAngleDegrees float \u0026mdash; float GetForwardSpeed() float GetTimeOffGround() float GetTimeOnGround() Vector GetGroundNormal() bool IsOnWall() bool IsOnGround() int GetNumWheelWorldContacts() int GetNumWheelContacts() void ZeroMovementVariables() void eventSetVehicleInput(ControllerInput \u0026amp;NewInput) Parameter Type Description NewInput ControllerInput \u0026mdash; void EnablePodiumMode() void SetDriving(unsigned long bDrive) Parameter Type Description bDrive unsigned long \u0026mdash; void InitAudioParams() void OnPRIChanged() void OnControllerChanged() void UnPossessed() void EventPRIChanged(VehicleWrapper Vehicle) Parameter Type Description Vehicle VehicleWrapper \u0026mdash; "},{"id":229,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/RumbleComponent/VelcroPickup/","title":"VelcroPickup","parent":"Rumble Component","content":" View Implementation Vector GetBallOffset() void SetBallOffset(Vector newBallOffset) Parameter Type Description newBallOffset Vector \u0026mdash; unsigned long GetbUseRealOffset() void SetbUseRealOffset(unsigned long newbUseRealOffset) Parameter Type Description newbUseRealOffset unsigned long \u0026mdash; unsigned long GetbHit() void SetbHit(unsigned long newbHit) Parameter Type Description newbHit unsigned long \u0026mdash; unsigned long GetbBroken() void SetbBroken(unsigned long newbBroken) Parameter Type Description newbBroken unsigned long \u0026mdash; float GetAfterHitDuration() void SetAfterHitDuration(float newAfterHitDuration) Parameter Type Description newAfterHitDuration float \u0026mdash; float GetPostBreakDuration() void SetPostBreakDuration(float newPostBreakDuration) Parameter Type Description newPostBreakDuration float \u0026mdash; float GetMinBreakForce() void SetMinBreakForce(float newMinBreakForce) Parameter Type Description newMinBreakForce float \u0026mdash; float GetMinBreakTime() void SetMinBreakTime(float newMinBreakTime) Parameter Type Description newMinBreakTime float \u0026mdash; float GetCheckLastTouchRate() void SetCheckLastTouchRate(float newCheckLastTouchRate) Parameter Type Description newCheckLastTouchRate float \u0026mdash; BallWrapper GetWeldedBall() void SetWeldedBall(BallWrapper newWeldedBall) Parameter Type Description newWeldedBall BallWrapper \u0026mdash; float GetOldBallMass() void SetOldBallMass(float newOldBallMass) Parameter Type Description newOldBallMass float \u0026mdash; float GetAttachTime() void SetAttachTime(float newAttachTime) Parameter Type Description newAttachTime float \u0026mdash; float GetLastTouchCheckTime() void SetLastTouchCheckTime(float newLastTouchCheckTime) Parameter Type Description newLastTouchCheckTime float \u0026mdash; float GetBreakTime() void SetBreakTime(float newBreakTime) Parameter Type Description newBreakTime float \u0026mdash; void DoBreak() void HandleCarTouch(BallWrapper InBall, CarWrapper InCar, unsigned char HitType) Parameter Type Description InBall BallWrapper \u0026mdash; InCar CarWrapper \u0026mdash; HitType unsigned char \u0026mdash; void PickupEnd() void OnBallHit() void PickupStart() "},{"id":230,"href":"/bakkesmod_api/Structs/Wrappers/VideoSettings/","title":"VideoSettings","parent":"Wrappers","content":" View Implementation The video settings. Get from SettingsWrapper.GetVideoSettings()\nbool bVsync Default value: none\nbool bShowWeatherFX Default value: none\nbool bShowLightShafts Default value: none\nbool bTranslucentArenaShaders Default value: none\nbool bShowLensFlares Default value: none\nbool bEnableHDRSideBySideVisualizer Default value: none\nbool bUncappedFramerate Default value: none\nfloat HDRBrightnessScale Default value: none\nfloat HDRPaperWhiteScale Default value: none\nfloat HDRGammaScale Default value: none\nint WindowMode Default value: none\nstd::string Resolution Default value: none\nint MaxFPS Default value: none\nstd::map\u0026lt; std::string, std::string \u0026gt; VideoOptions Default value: none\n"},{"id":231,"href":"/bakkesmod_api/Structs/Wrappers/ViewTarget/","title":"ViewTarget","parent":"Wrappers","content":" View Implementation Target of a camera. Target can be wrapped in an ActorWrapper wrappedTarget(((uintptr_t) struct-\u0026amp;gt;Target)) Similarly controller is safe to cast to PlayerControllerWrapper and PRI can be cast to PriWrapper\nvoid * Target Default value: none\nvoid * Controller Default value: none\nPOV POV Default value: none\nfloat AspectRatio Default value: none\nvoid * PRI Default value: none\n"},{"id":232,"href":"/bakkesmod_api/Structs/Wrappers/GameObject/CameraStates/ViewTargetTransitionParams/","title":"ViewTargetTransitionParams","parent":"Camera States","content":" View Implementation float blend_time Default value: none\nunsigned char blend_function Default value: none\nfloat blend_exp Default value: none\nbool lock_outgoing Default value: none\n"},{"id":233,"href":"/bakkesmod_api/Structs/Wrappers/WheelContactData/","title":"WheelContactData","parent":"Wrappers","content":" View Implementation Info on a single wheel's contact with stuff. Get with WheelWrapper.GetContact()\nunsigned long bHasContact Default value: none\nunsigned long bHasContactWithWorldGeometry Default value: none\nfloat HasContactChangeTime Default value: none\nvoid * Actor Default value: none\nvoid * Component Default value: none\nVector Location Default value: none\nVector Normal Default value: none\nVector LatDirection Default value: none\nVector LongDirection Default value: none\nvoid * PhysMatProp Default value: none\n"},{"id":234,"href":"/bakkesmod_api/Classes/Wrappers/GameObject/CarComponent/WheelWrapper/","title":"WheelWrapper","parent":"Car Component","content":" View Implementation _NODISCARD bool IsNull() const operator bool() const float GetSteerFactor() void SetSteerFactor(float newSteerFactor) Parameter Type Description newSteerFactor float \u0026mdash; float GetWheelRadius() void SetWheelRadius(float newWheelRadius) Parameter Type Description newWheelRadius float \u0026mdash; float GetSuspensionStiffness() void SetSuspensionStiffness(float newSuspensionStiffness) Parameter Type Description newSuspensionStiffness float \u0026mdash; float GetSuspensionDampingCompression() void SetSuspensionDampingCompression(float newSuspensionDampingCompression) Parameter Type Description newSuspensionDampingCompression float \u0026mdash; float GetSuspensionDampingRelaxation() void SetSuspensionDampingRelaxation(float newSuspensionDampingRelaxation) Parameter Type Description newSuspensionDampingRelaxation float \u0026mdash; float GetSuspensionTravel() void SetSuspensionTravel(float newSuspensionTravel) Parameter Type Description newSuspensionTravel float \u0026mdash; float GetSuspensionMaxRaise() void SetSuspensionMaxRaise(float newSuspensionMaxRaise) Parameter Type Description newSuspensionMaxRaise float \u0026mdash; float GetContactForceDistance() void SetContactForceDistance(float newContactForceDistance) Parameter Type Description newContactForceDistance float \u0026mdash; float GetSpinSpeedDecayRate() void SetSpinSpeedDecayRate(float newSpinSpeedDecayRate) Parameter Type Description newSpinSpeedDecayRate float \u0026mdash; Vector GetBoneOffset() void SetBoneOffset(Vector newBoneOffset) Parameter Type Description newBoneOffset Vector \u0026mdash; Vector GetPresetRestPosition() void SetPresetRestPosition(Vector newPresetRestPosition) Parameter Type Description newPresetRestPosition Vector \u0026mdash; Vector GetLocalSuspensionRayStart() void SetLocalSuspensionRayStart(Vector newLocalSuspensionRayStart) Parameter Type Description newLocalSuspensionRayStart Vector \u0026mdash; Vector GetLocalRestPosition() void SetLocalRestPosition(Vector newLocalRestPosition) Parameter Type Description newLocalRestPosition Vector \u0026mdash; VehicleSimWrapper GetVehicleSim() void SetVehicleSim(VehicleSimWrapper newVehicleSim) Parameter Type Description newVehicleSim VehicleSimWrapper \u0026mdash; int GetWheelIndex() void SetWheelIndex(int newWheelIndex) Parameter Type Description newWheelIndex int \u0026mdash; WheelContactData GetContact() void SetContact(WheelContactData newContact) Parameter Type Description newContact WheelContactData \u0026mdash; unsigned long GetbDrawDebug() void SetbDrawDebug(unsigned long newbDrawDebug) Parameter Type Description newbDrawDebug unsigned long \u0026mdash; unsigned long GetbHadContact() void SetbHadContact(unsigned long newbHadContact) Parameter Type Description newbHadContact unsigned long \u0026mdash; float GetFrictionCurveInput() void SetFrictionCurveInput(float newFrictionCurveInput) Parameter Type Description newFrictionCurveInput float \u0026mdash; float GetAerialThrottleToVelocityFactor() void SetAerialThrottleToVelocityFactor(float newAerialThrottleToVelocityFactor) Parameter Type Description newAerialThrottleToVelocityFactor float \u0026mdash; float GetAerialAccelerationFactor() void SetAerialAccelerationFactor(float newAerialAccelerationFactor) Parameter Type Description newAerialAccelerationFactor float \u0026mdash; float GetSpinSpeed() void SetSpinSpeed(float newSpinSpeed) Parameter Type Description newSpinSpeed float \u0026mdash; Vector GetRefWheelLocation() float GetSuspensionDistance() float GetSteer2() Vector GetLinearVelocity() void EventContactChanged(WheelWrapper Wheel) Parameter Type Description Wheel WheelWrapper \u0026mdash; "},{"id":235,"href":"/bakkesmod_api/Structs/Wrappers/WorldContactData/","title":"WorldContactData","parent":"Wrappers","content":" View Implementation Info on an actors contact with the world. Get with RBActor.GetWorldContact()\nunsigned long bHasContact Default value: none\nVector Location Default value: none\nVector Velocity Default value: none\nVector Normal Default value: none\n"},{"id":236,"href":"/bakkesmod_api/Classes/Wrappers/Engine/WorldInfoWrapper/","title":"WorldInfoWrapper","parent":"Engine","content":" View Implementation float GetTimeDilation() float GetDemoPlayTimeDilation() float GetTimeSeconds() float GetRealTimeSeconds() float GetRealDeltaSeconds() float GetAudioTimeSeconds() float GetDeltaSeconds() float GetPauseDelay() float GetRealTimeToUnPause() float GetStallZ() float GetWorldGravityZ() float GetDefaultGravityZ() float GetGlobalGravityZ() float GetRBPhysicsGravityScaling() "},{"id":237,"href":"/functions/commonly_hooked_functions/","title":"Commonly Hooked Functions","parent":"Functions","content":"This is a list of functions that we use regularly, as well as when they fire. We\u0026rsquo;ll never be able to document them all but hopefully this helps. Hook them with Function Hooks\nThe Bakkesmod caller will be based off of the Rocket League calling class / calling object name. Most functions are called by classes named Something_TA. Remove the _TA at the end and look for any wrappers with similar names. If a wrapper matches, that is the caller. For example, \u0026quot;Function TAGame.Car_TA.OnHitBall\u0026quot; is called by a Car_TA. The prefix is Car, so it\u0026rsquo;s wrapped by CarWrapper. Not all callers are wrapped though.\nThis image shows the breakdown of the function name. The class shown is GameEvent_TA, which can be cast to a ServerWrapper\nBallWrapper Caller \u0026quot;Function TAGame.Ball_TA.OnCarTouch\u0026quot;\nThis event is called when a ball hits a car. The caller is the ball that hit, and the first parameter is the CarWrapper touched\nstruct BallCarTouchParams { uintptr_t car; } \u0026quot;Function TAGame.Ball_TA.OnHitGoal\u0026quot;\nHappens when a goal is scored.\nNote that this event is also called during the goal replay, if the player does not cancel it. If you want to filter out the event during goal replay, you can hook to \u0026quot;Function GameEvent_Soccar_TA.ReplayPlayback.BeginState and \u0026quot;Function GameEvent_Soccar_TA.ReplayPlayback.EndState\u0026quot; in order to e.g. set a bool flag while replay playback is active.\n\u0026quot;Function TAGame.Ball_TA.Explode\u0026quot;\nHappens when a ball explodes. Usually this means a goal was scored\nBoostWrapper Caller \u0026quot;Function TAGame.VehiclePickup_Boost_TA.Pickup\u0026quot; Happens when a car picks up a boost\nstruct BoostPickupParams { uintptr_t car; } CarWrapper Caller \u0026quot;Function TAGame.Car_TA.SetVehicleInput\u0026quot;\nThis event is called every physics tick while you are playing. This is 120 times per second. This can be highly useful but isn\u0026rsquo;t perfect. It doesn\u0026rsquo;t fire while spectating matches. While hosting a match it fires once per tick per car in the match\n\u0026quot;Function TAGame.Car_TA.OnHitBall\u0026quot;\nThis event is called when a car hits a ball. The caller is the CarWrapper that hit, and the first parameter is the BallWrapper touched\nstruct CarBallTouchParams { uintptr_t ball; } ReplayDirectorWrapper Caller \u0026quot;Function TAGame.ReplayDirector_TA.OnScoreDataChanged\u0026quot;\nHappens when a goal replay shows a goal\u0026rsquo;s scorer, assister, speed, and other information\nServerWrapper Caller \u0026quot;Function TAGame.GameEvent_Soccar_TA.EventMatchEnded\u0026quot;\nHappens at the end of a match when the podium is shown. If someone quits early it is not called\n\u0026quot;Function TAGame.GameEvent_Soccar_TA.OnGameTimeUpdated\u0026quot;\nHappens when the time on the game clock changes. Note that this is not real time. At 0:00 with the ball up it won\u0026rsquo;t be called\n\u0026quot;Function TAGame.GameEvent_Soccar_TA.OnOvertimeUpdated\u0026quot;\nHappens when overtime begins\n\u0026quot;Function GameEvent_Soccar_TA.ReplayPlayback.BeginState\u0026quot;\nHappens when a goal replay begins\n\u0026quot;Function GameEvent_Soccar_TA.ReplayPlayback.EndState\u0026quot;\nHappens when a goal replay ends\n\u0026quot;Function GameEvent_Soccar_TA.Active.StartRound\u0026quot;\nHappens when all players are set for a kickoff. This happens at every single kickoff\n\u0026quot;Function GameEvent_Soccar_TA.Countdown.BeginState\u0026quot;\nHappens at the start of a kickoff countdown or at the beginning/reset of freeplay\n\u0026quot;Function TAGame.GameEvent_Soccar_TA.Destroyed\u0026quot;\nHappens when a match is left or quit by the player. The caller may be null or unsafe to use as the match is destroyed\n\u0026quot;Function TAGame.GameEvent_TA.AddCar\u0026quot; Happens whenenever a car spawns. Useful if modifying car physics that may reset after a respawn\nStatEventWrapper Caller StatEventWrapper functions are explained here \u0026quot;Function TAGame.GFxHUD_TA.HandleStatTickerMessage\u0026quot;\nCalled any time a stat should appear on the top right ticker, even if it\u0026rsquo;s disabled\n\u0026quot;Function TAGame.GFxHUD_TA.HandleStatEvent\u0026quot;\nCalled any time a stat should appear in the center of the screen, even if it\u0026rsquo;s disabled\nTeamWrapper Caller \u0026quot;Function TAGame.Team_TA.PostBeginPlay\u0026quot;\nHappens twice at the start of a match, once per team that is totally joined and ready. It can be used to detect the start of a match. This only works when the player is in the match as it starts, so it\u0026rsquo;s inconsistent in casual where you can join matches in progress\nTrainingEditor Caller \u0026quot;Function TAGame.TrainingEditorMetrics_TA.TrainingShotAttempt\u0026quot;\nCalled whenever an attempt is started in a custom training pack. An attempt counts as started if the player starts moving in any way. Selecting a different shot, or resetting the shot does not fire this event (until the player moves). If you are only interested in the initial ball touch for each shot, you can react to only the first \u0026quot;Function TAGame.Ball_TA.OnCarTouch\u0026quot; event after each TrainingShotAttempt for example.\n\u0026quot;Function TAGame.GameEvent_TrainingEditor_TA.OnInit\u0026quot;\nCalled whenever a new training pack is being loaded, or the current training pack was restarted.\nBe aware that _gameWrapper-\u0026gt;IsInCustomTraining() will not yet return true at this point.\nUnwrapped callers \u0026quot;Function TAGame.GFxData_MainMenu_TA.MainMenuAdded\u0026quot;\nHappens when the main menu is opened, either through booting the game or leaving a mode\n\u0026quot;Function Engine.GameViewportClient.Tick\u0026quot;\nThis event is called every rendered frame. This is very powerful, but again can have issues. Different framerates and stutters can make the number of ticks different on different PCs\n"},{"id":238,"href":"/plugin_tutorial/plugin_variables/","title":"Plugin Variables","parent":"Plugin Tutorial","content":"Next we will make your plugin alterable by a user. They might want to enable/disable the plugin, change how it acts, and pretty much infinite options. I\u0026rsquo;ll be using a fairly simple plugin I\u0026rsquo;ve made as an example. I\u0026rsquo;ll only be focusing on the settings, not the actual code that makes it work. We\u0026rsquo;ll continue the CoolPlugin from Starting a Plugin\nWe give the users control with the Console Variables, CVars. They allow a user to set a variable\u0026rsquo;s value, and for our code to know when those values are changed. These can be used for string, int, bool, float, or color values. They also can persist across multiple sessions, so user settings are saved. If something being changed to the wrong value can break your plugin, don\u0026rsquo;t use a CVar. Any internal plugin logic that can do unintended things if modified should be stored and controlled with class variables declared in your .cpp or .h files.\nTo create one, we call cvarManager-\u0026gt;registerCvar() There are 2-9 arguments. The first 2 are required, but the others are not\nThe name. This should include your plugin name and make sense The default value as a string. If it\u0026rsquo;s a boolean, remember 0 is false and 1 is true A description of the CVar as a string. The name can describe your variable well, so this isn\u0026rsquo;t super necessary Whether your CVar is searchable. If someone starts typing the name of your CVar, and this is true it suggests the CVar. Defaults to true Whether your CVar has a minimum value. Defaults to false The minimum value of your CVar if it exists. If the previous is false this value can be anything and is ignored Whether your CVar has a maximum value. Defaults to false The maximum value of your CVar if it exists. If the previous is false this value can be anything and is ignored Whether the CVar\u0026rsquo;s value is stored between sessions. Defaults to true To create an enable/disable CVar for the plugin and a ball distance CVar 1 2 cvarManager-\u0026gt;registerCvar(\u0026#34;cool_enabled\u0026#34;, \u0026#34;0\u0026#34;, \u0026#34;Enable Cool\u0026#34;, true, true, 0, true, 1); cvarManager-\u0026gt;registerCvar(\u0026#34;cool_distance\u0026#34;, \u0026#34;200.0\u0026#34;, \u0026#34;Distance to place the ball above\u0026#34;); A user can use these by typing into the f6 console cool_enabled 1 to enable cool, or cool_distance 300 to move the ball away\nNow we\u0026rsquo;ve got the CVar. But what do we do with it? There\u0026rsquo;s two good ways to use it. Either we can do something when the value is changed, or we can get the value from the CVar as we use the value\nFirst is CVarWrapper.addOnValueChanged() This creates a function that is called when the value is changed. Quite simple. The string simply is what the old value was. The CVarWrapper holds the new value. The [](){} is called a lambda, and is basically just a helper function. We put [this] so we can access our global variables inside the lambda. (std::string oldValue, CVarWrapper cvar) are the values passed to the lambda by the addOnValueChanged function. Every time the value changes and the lambda is called, the code inside {} happens. The most common use is to change the value of a global variable. If I had a variable bool coolEnabled, I could call coolEnabled = cvar.getBoolValue(); inside the brackets to change its value 1 2 3 4 cvarManager-\u0026gt;registerCvar(\u0026#34;cool_enabled\u0026#34;, \u0026#34;0\u0026#34;, \u0026#34;Enable Cool\u0026#34;, true, true, 0, true, 1) .addOnValueChanged([this](std::string oldValue, CVarWrapper cvar) { coolEnabled = cvar.getBoolValue(); }); The second is by getting the CVar and then its value in another function. We can call cvarManager-\u0026gt;getCvar() with the name of any CVar to get and/or set the value of that CVar, even ones that aren\u0026rsquo;t from our plugin. 1 2 3 CVarWrapper distanceCVar = cvarManager-\u0026gt;getCvar(\u0026#34;cool_distance\u0026#34;); if (!distanceCVar) { return; } float distance = distanceCVar.getFloatValue(); We can put together this knowledge to add to CoolPlugin.cpp\nhttps://github.com/ubelhj/BakkesModStarterPlugin/blob/plugin-variables/CoolPlugin/CoolPlugin.cpp\nThis isn\u0026rsquo;t enough though. Who wants to be changing an integer value with a console command? Gross. What if we had sliders? Checkboxes? Buttons? Next we\u0026rsquo;ll add a simple GUI\nPlugin Interface\n"},{"id":239,"href":"/functions/hook_event_with_any_caller/","title":"Hook Event With Any Caller","parent":"Functions","content":"Add this to your plugin header and you can hook with caller for \u0026ldquo;anything\u0026rdquo;. This will do a blind cast, so make absolutely sure you\u0026rsquo;re hooking the right function or you will crash. There are no type checks here!\n1 2 3 4 5 6 7 8 9 10 template \u0026lt;typename T, typename std::enable_if\u0026lt;std::is_base_of\u0026lt;ObjectWrapper, T\u0026gt;::value\u0026gt;::type*\u0026gt; void GameWrapper::HookEventWithCaller(std::string eventName, std::function\u0026lt;void(T caller, void* params, std::string eventName)\u0026gt; callback) { auto wrapped_callback = [callback](ActorWrapper caller, void* params, std::string eventName) { callback(T(caller.memory_address), params, eventName); }; HookEventWithCaller\u0026lt;ActorWrapper\u0026gt;(eventName, wrapped_callback); } And this for Post 1 2 3 4 5 6 7 8 9 10 template \u0026lt;typename T, typename std::enable_if\u0026lt;std::is_base_of\u0026lt;ObjectWrapper, T\u0026gt;::value\u0026gt;::type*\u0026gt; void GameWrapper::HookEventWithCallerPost(std::string eventName, std::function\u0026lt;void(T caller, void* params, std::string eventName)\u0026gt; callback) { auto wrapped_callback = [callback](ActorWrapper caller, void* params, std::string eventName) { callback(T(caller.memory_address), params, eventName); }; HookEventWithCallerPost\u0026lt;ActorWrapper\u0026gt;(eventName, wrapped_callback); } "},{"id":240,"href":"/plugin_tutorial/plugin_interface/","title":"Plugin Interface","parent":"Plugin Tutorial","content":"This channel will go over creating a user-friendly interface. There\u0026rsquo;s buttons, sliders, checkboxes, dropdowns, and all sorts of options. It also assumes you\u0026rsquo;re using the template, as the template automatically includes the ImGui GUI library we\u0026rsquo;ll be using. It also adds a file we\u0026rsquo;ll be editing\nYet again we have the CoolPlugin from Plugin Variables and we want to add a button to activate our cooler ball on top, a checkbox to enable cool, and a slider to choose the distance that the ball is placed from your car\nFirst we need to uncomment some code in CoolPlugin.h\nAt the class declaration, uncomment SettingsWindowBase and RenderSettings 1 2 3 4 5 class CoolPlugin: public BakkesMod::Plugin::BakkesModPlugin, public BakkesMod::Plugin::PluginSettingsWindow // ... void RenderSettings() override; Now we can define those 3 functions to create the interface. We will put these in a new file CoolPluginSettings.cpp but they can be in any .cpp file that includes CoolPlugin.h, such as CoolPlugin.cpp\nTo add a file, right click the src (or any other) folder in the solution explorer, then add a new item\nAdd a .cpp file with the name of your choice.\nIn the file, make sure to include pch.h and CoolPlugin.h at the top 1 2 #include \u0026#34;pch.h\u0026#34; #include \u0026#34;CoolPlugin.h\u0026#34; Now you can create the interface. We\u0026rsquo;ll start with simple text but this is what we\u0026rsquo;ll be modifying in the rest of this page\nThere\u0026rsquo;s a hugely important thing to consider with this function. Never call on or change any Rocket League / Bakkesmod values here. If you do, you will crash. It\u0026rsquo;s happening outside of the game, and cannot safely alter it. That means that if you have a CVarWrapper.addOnValueChanged() that alters the state of the game, it will be unsafe to use here\n1 2 3 void CoolPlugin::RenderSettings() { ImGui::TextUnformatted(\u0026#34;A really cool plugin\u0026#34;); } Lets start building the plugin interface. First we\u0026rsquo;ll have a button that\u0026rsquo;ll call CoolerBallOnTop. The button as well as most other interactable ImGui components has a boolean property. If it\u0026rsquo;s true, that means it\u0026rsquo;s been interacted with. So when the button has been clicked, we\u0026rsquo;ll use the cvarManager to call CoolerBallOnTop. But CoolerBallOnTop uses the ServerWrapper and alters the game. It\u0026rsquo;ll crash! We can wrap it inside gameWrapper-\u0026gt;Execute(). We\u0026rsquo;ll also add hover text because why not 1 2 3 4 5 6 7 8 if (ImGui::Button(\u0026#34;Ball On Top\u0026#34;)) { gameWrapper-\u0026gt;Execute([this](GameWrapper* gw) { cvarManager-\u0026gt;executeCommand(\u0026#34;CoolerBallOnTop\u0026#34;); }); } if (ImGui::IsItemHovered()) { ImGui::SetTooltip(\u0026#34;Activate Ball On Top\u0026#34;); } Now let\u0026rsquo;s do a checkbox for cool_enabled. First we need to get the CVar, then use it. The bool enabled is necessary, as the checkbox uses that to store whether or not the checkbox should be checked. You can\u0026rsquo;t just use the CVar 1 2 3 4 5 6 7 8 9 CVarWrapper enableCvar = cvarManager-\u0026gt;getCvar(\u0026#34;cool_enabled\u0026#34;); if (!enableCvar) { return; } bool enabled = enableCvar.getBoolValue(); if (ImGui::Checkbox(\u0026#34;Enable plugin\u0026#34;, \u0026amp;enabled)) { enableCvar.setValue(enabled); } if (ImGui::IsItemHovered()) { ImGui::SetTooltip(\u0026#34;Toggle Cool Plugin\u0026#34;); } And finally a slider for the distance CVar. ImGui elements use char * instead of std::string You can easily convert between with std::string.c_str() and std::string newStringVariableName(char *) 1 2 3 4 5 6 7 8 9 10 CVarWrapper distanceCvar = cvarManager-\u0026gt;getCvar(\u0026#34;cool_distance\u0026#34;); if (!distanceCvar) { return; } float distance = distanceCvar.getFloatValue(); if (ImGui::SliderFloat(\u0026#34;Distance\u0026#34;, \u0026amp;distance, 0.0, 500.0)) { distanceCvar.setValue(distance); } if (ImGui::IsItemHovered()) { std::string hoverText = \u0026#34;distance is \u0026#34; + std::to_string(distance); ImGui::SetTooltip(hoverText.c_str()); } We finally have a settings file using all of our CVars. There\u0026rsquo;s a load more things you can do with ImGui, but hopefully this is enough to get the right idea and get started. I hope that by covering these three elements I covered most of what plugins need to use. ImGui is complicated and most plugins don\u0026rsquo;t use it yet. Feel free to ask questions\nHere\u0026rsquo;s the final code\nhttps://github.com/ubelhj/BakkesModStarterPlugin/blob/plugin-interface/CoolPlugin/CoolPluginSettings.cpp\nhttps://github.com/ubelhj/BakkesModStarterPlugin/tree/plugin-interface/\nAnd here\u0026rsquo;s a useful interactable imgui demo\nhttps://pthom.github.io/imgui_manual_online/manual/imgui_manual.html\n"},{"id":241,"href":"/functions/stat_events/","title":"Stat Events","parent":"Functions","content":"Stat events are a great way to show a slightly more complicated plugin logic. They are fairly common to use, use multiple wrappers, event hooks, and have some unique caveats. Also I made a plugin with them so I know how they work. Hopefully this helps someone\nFirst add this include to the top of your .h\n#include \u0026quot;bakkesmod/wrappers/GameObject/Stats/StatEventWrapper.h\u0026quot;\nYou need to hook some events to use stat events. This depends on your use case.\n\u0026quot;Function TAGame.GFxHUD_TA.HandleStatTickerMessage\u0026quot; is called any time a stat should appear on the top right ticker, even if it\u0026rsquo;s disabled.\n\u0026quot;Function TAGame.GFxHUD_TA.HandleStatEvent\u0026quot; is called any time a stat should appear in the center of the screen, even if it\u0026rsquo;s disabled.\nThe stat ticker catches stat events from all players, but fails to see first touches, clears, and centers. HandleStatEvent catches all stats, but only for the primary player. Depending on your use case you may need to only hook one or both. The ServerWrappers in these hooks are placeholders and we won\u0026rsquo;t use them, as there is no GFxHUD_TA wrapper. Check using function hooks for more details\n1 2 3 4 5 6 7 8 9 10 11 // We need the params so we hook with caller, but there is no wrapper for the HUD gameWrapper-\u0026gt;HookEventWithCallerPost\u0026lt;ServerWrapper\u0026gt;(\u0026#34;Function TAGame.GFxHUD_TA.HandleStatTickerMessage\u0026#34;, [this](ServerWrapper caller, void* params, std::string eventname) { onStatTickerMessage(params); }); // hooked whenever the primary player earns a stat gameWrapper-\u0026gt;HookEventWithCallerPost\u0026lt;ServerWrapper\u0026gt;(\u0026#34;Function TAGame.GFxHUD_TA.HandleStatEvent\u0026#34;, [this](ServerWrapper caller, void* params, std::string eventname) { onStatEvent(params); }); Now we have the functions hooked, and we need the parameters. Either define these in your .h or right before using them in your .cpp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 // The structure of a ticker stat event struct StatTickerParams { // person who got a stat uintptr_t Receiver; // person who is victim of a stat (only exists for demos afaik) uintptr_t Victim; // wrapper for the stat event uintptr_t StatEvent; }; // structure of a stat event struct StatEventParams { // always primary player uintptr_t PRI; // wrapper for the stat event uintptr_t StatEvent; }; Now you can use them. For reference see StatEventWrapper and PriWrapper 1 2 3 4 5 6 7 8 9 10 11 12 void ClassName::onStatTickerMessage(void* params) { StatTickerParams* pStruct = (StatTickerParams*)params; PriWrapper receiver = PriWrapper(pStruct-\u0026gt;Receiver); PriWrapper victim = PriWrapper(pStruct-\u0026gt;Victim); StatEventWrapper statEvent = StatEventWrapper(pStruct-\u0026gt;StatEvent); } void ClassName::onStatEvent(void* params) { StatEventParams* pStruct = (StatEventParams*)params; PriWrapper playerPRI = PriWrapper(pStruct-\u0026gt;PRI); StatEventWrapper statEvent = StatEventWrapper(pStruct-\u0026gt;StatEvent); } Now you probably want to do something special with a specific event. Get the event\u0026rsquo;s name with StatEventWrapper.GetEventName(). This gets the stat\u0026rsquo;s internal names regardless of game language. This is safest to use for string comparisons. For logging or displaying in the game\u0026rsquo;s current language you can use StatEventWrapper.GetLabel(). Here\u0026rsquo;s a list of all the GetEventNames. The only confusing one is that a \u0026ldquo;Demolish\u0026rdquo; is one demolition and a \u0026ldquo;Demolition\u0026rdquo; is an extermination. OwnGoal is a fun ticker event that does exactly what you\u0026rsquo;d expect, yet is never displayed anywhere in game. KO_ stats belong to the Knockout gamemode\n\u0026#34;Demolish\u0026#34; \u0026#34;Demolition\u0026#34; \u0026#34;Goal\u0026#34; \u0026#34;Win\u0026#34; \u0026#34;MVP\u0026#34; \u0026#34;AerialGoal\u0026#34; \u0026#34;BackwardsGoal\u0026#34; \u0026#34;BicycleGoal\u0026#34; \u0026#34;LongGoal\u0026#34; \u0026#34;TurtleGoal\u0026#34; \u0026#34;PoolShot\u0026#34; \u0026#34;OvertimeGoal\u0026#34; \u0026#34;HatTrick\u0026#34; \u0026#34;Assist\u0026#34; \u0026#34;Playmaker\u0026#34; \u0026#34;Save\u0026#34; \u0026#34;EpicSave\u0026#34; \u0026#34;Savior\u0026#34; \u0026#34;Shot\u0026#34; \u0026#34;Center\u0026#34; \u0026#34;Clear\u0026#34; \u0026#34;FirstTouch\u0026#34; \u0026#34;BreakoutDamage\u0026#34; \u0026#34;BreakoutDamageLarge\u0026#34; \u0026#34;LowFive\u0026#34; \u0026#34;HighFive\u0026#34; \u0026#34;HoopsSwishGoal\u0026#34; \u0026#34;BicycleHit\u0026#34; \u0026#34;OwnGoal\u0026#34; \u0026#34;KO_Winner\u0026#34; \u0026#34;KO_Knockout\u0026#34; \u0026#34;KO_DoubleKO\u0026#34; \u0026#34;KO_TripleKO\u0026#34; \u0026#34;KO_Death\u0026#34; \u0026#34;KO_LightHit\u0026#34; \u0026#34;KO_HeavyHit\u0026#34; \u0026#34;KO_AerialLightHit\u0026#34; \u0026#34;KO_AerialHeavyHit\u0026#34; \u0026#34;KO_HitTaken\u0026#34; \u0026#34;KO_BlockTaken\u0026#34; \u0026#34;KO_Grabbed\u0026#34; \u0026#34;KO_Thrown\u0026#34; \u0026#34;KO_LightBlock\u0026#34; \u0026#34;KO_HeavyBlock\u0026#34; \u0026#34;KO_PlayerGrabbed\u0026#34; \u0026#34;KO_PlayerThrown\u0026#34; Now I\u0026rsquo;ll just put together a simple example to track if the main player is demoed. As always this is assuming this is using the template 1 2 3 4 5 // add to onload gameWrapper-\u0026gt;HookEventWithCallerPost\u0026lt;ServerWrapper\u0026gt;(\u0026#34;Function TAGame.GFxHUD_TA.HandleStatTickerMessage\u0026#34;, [this](ServerWrapper caller, void* params, std::string eventname) { onStatTickerMessage(params); }); 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 // defined elsewhere in .cpp void ClassName::onStatTickerMessage(void* params) { struct StatTickerParams { uintptr_t Receiver; uintptr_t Victim; uintptr_t StatEvent; }; StatTickerParams* pStruct = (StatTickerParams*)params; PriWrapper receiver = PriWrapper(pStruct-\u0026gt;Receiver); PriWrapper victim = PriWrapper(pStruct-\u0026gt;Victim); StatEventWrapper statEvent = StatEventWrapper(pStruct-\u0026gt;StatEvent); if (statEvent.GetEventName() == \u0026#34;Demolish\u0026#34;) { LOG(\u0026#34;a demolition happened \u0026gt;:(\u0026#34;); if (!receiver) { LOG(\u0026#34;Null reciever PRI\u0026#34;); return; } if (!victim) { LOG(\u0026#34;Null victim PRI\u0026#34;); return; } // Find the primary player\u0026#39;s PRI PlayerControllerWrapper playerController = gameWrapper-\u0026gt;GetPlayerController(); if (!playerController) { LOG(\u0026#34;Null controller\u0026#34;); return; } PriWrapper playerPRI = playerController.GetPRI(); if (!playerPRI) { LOG(\u0026#34;Null player PRI\u0026#34;); return; } // Compare the primary player to the victim if (playerPRI.memory_address != victim.memory_address) { LOG(\u0026#34;Hah you got demoed get good {}\u0026#34;, victim.GetPlayerName().ToString()); return; } // Primary player is the victim! LOG(\u0026#34;I was demoed!!! {} is toxic I\u0026#39;m uninstalling\u0026#34;, receiver.GetPlayerName().ToString()); } } Hopefully all of this is useful to someone using stat events in the future!\n"},{"id":242,"href":"/bakkesmod_api/","title":"BakkesMod API","parent":"Welcome to the BakkesMod Programming Wiki!","content":" About BakkesMod provides a powerful SDK, accessible in c++. Visit the Plugin Tutorial sections to get started!\nLinks C++ Reference "},{"id":243,"href":"/plugin_tutorial/best_practices/","title":"Best Practices","parent":"Plugin Tutorial","content":"These practices are super important to follow to make sure you don\u0026rsquo;t accidentally crash the game.\nNullchecking\nAny BakkesMod wrapper is a pointer under the hood, and that pointer could be null! If you try and use a null wrapper, you\u0026rsquo;ll crash. This is super simple, just make sure you nullcheck every time you obtain a new wrapper. 1 2 3 4 5 6 7 8 9 10 11 12 ServerWrapper server = gameWrapper-\u0026gt;GetCurrentGameState(); // Just check if the server is null if (!server) { // The server is null! Maybe you want to log here // LOG(\u0026#34;Null Server!\u0026#34;); // Otherwise just return out of the function return; } // Now you\u0026#39;re safe and the server is valid Don\u0026rsquo;t store wrappers\nAs the game is played, the pointers underneath wrappers might become invalid or point to unexpected memory locations. Imagine you stored a ServerWrapper for use later, but by the time you use it you\u0026rsquo;re in a new match.\nSolve this by obtaining wrappers as you use them.\nWrappers are safe to pass to functions or lambdas for immediate use, but should never be stored as class variables.\nAlso don\u0026rsquo;t pass them to any callbacks or timeouts where the wrappers will be used later in time "},{"id":244,"href":"/code_snippets/canvas/","title":"Canvas","parent":"Code Snippets","content":"The CanvasWrapper is a powerful tool that allows you to draw GUI elements on the screen\nFor example this is used by the Hitbox Plugin by mega and HalfwayDead/Rocket Science\nYou can also do more basic things, like text in my stat counter plugin OBSCounter\nFirst in your .h, define a function that will take a canvas.\nvoid Render(CanvasWrapper canvas);\nThen you need to register the function in your .cpp code. This can be done in OnLoad or any other place where you want to start the rendering loop 1 2 3 gameWrapper-\u0026gt;RegisterDrawable([this](CanvasWrapper canvas) { Render(canvas); }); Now every single frame, the Render function is called with a valid canvas to draw on.\nIn Render you can do a ton of stuff with the canvas. Here\u0026rsquo;s a quick definition of one. Look for plugin homepages on BakkesPlugins for examples and source code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // in a .cpp file void CoolPlugin::Render(CanvasWrapper canvas) { // defines colors in RGBA 0-255 LinearColor colors; colors.R = 255; colors.G = 255; colors.B = 0; colors.A = 255; canvas.SetColor(colors); // sets position to top left // x moves to the right // y moves down // bottom right would be 1920, 1080 for 1080p monitors canvas.SetPosition(Vector2F{ 0.0, 0.0 }); // says hi // draws from the last set position // the two floats are text x and y scale // the false turns off the drop shadow canvas.DrawString(\u0026#34;Hi Cool Dude\u0026#34;, 2.0, 2.0, false); } The result is a bit underwhelming, but there\u0026rsquo;s loads more you can do with this awesome tool.\nYou can include images too\nI highly recommend checking the Hitbox Plugin Source if you want to render things relative to locations on the field\nCanvasTool Plugin also lets you test out some canvas things easier\n"},{"id":245,"href":"/categories/","title":"Categories","parent":"Welcome to the BakkesMod Programming Wiki!","content":""},{"id":246,"href":"/useful_info/crash_dumps/","title":"Crash Dumps","parent":"Useful Info","content":"Modding RL is finnicky. You\u0026rsquo;re going to crash the game at some point. This will tell you how to learn from a crash and solve your issue.\nCrashes are often logged in .dmp files. They are found at My Documents/My Games/rocketleague/TAGame/Logs\nUnfortunately sometimes there is no .dmp file. That often means you crashed in a non-game thread, like rendering or websockets. For those you might just need to do some logging to find out where you crashed\nMake sure you have the exact version of the source code that crashed the game and the .pdb of that exact build loaded in a visual studio project. For this I highly recommend using git. Even for private projects, this can save you when you have to look back at old versions of code. Make a commit for the source code that you\u0026rsquo;ve uploaded to bakkesplugins.\nDrag the .dmp over the visual studio window\nYou\u0026rsquo;ll get a Minidump File Summary, which explains in super basic terms what the issue was. It won\u0026rsquo;t be specific though, so hit the green \u0026ldquo;Debug with Native Only\u0026rdquo; button\nNext it will try to load symbols. If this is taking more than a couple seconds, it\u0026rsquo;s loading too many symbols. Cancel the loading and go to Debug -\u0026gt; Options -\u0026gt; Symbols\nMake sure that Microsoft Symbol Servers is the only symbol location selected and that Load only specified modules is selected\nThen try to debug with native again. Be aware that these settings mysteriously can reset themselves (they did so in the time it took me to write this up) so you might have to refer back here fairly often.\nIf Visual Studio can find the issue, it will then tell you the issue and automatically jump to it. I dereferenced a null pointer! Oops\nSometimes it\u0026rsquo;s a little less easy, and the issue happens in pluginsdk.dll or RocketLeague.exe. In this case Visual Studio will try its best to find it but may fail\nThis crash happened because of a null ball! Remember the best practices! Whenever you use any type that ends with Wrapper like this BallWrapper you must nullcheck it before using it. These 4 lines of code will save your plugin from crashing\n1 2 3 4 5 6 7 8 9 10 BallWrapper* ball = (BallWrapper*) nullptr; if (!ball) { LOG(\u0026#34;null ball\u0026#34;); // I am saved from crashing! return; } // guaranteed to only happen on valid balls and not crash ball-\u0026gt;SetLocation(Vector(0, 0, 0)); Once you\u0026rsquo;ve found the issue, hit the red square up top\nHopefully you\u0026rsquo;ve found your issue. If not, try adding many LOG(\u0026quot;\u0026quot;); in places where you\u0026rsquo;re suspicious a crash may have happened. If a log doesn\u0026rsquo;t happen that you expected to, you likely crashed before that statement. Debugging can be tedious, but hopefully the .dmp files can help\n"},{"id":247,"href":"/code_snippets/creating_image_wrapper/","title":"Creating an ImageWrapper","parent":"Code Snippets","content":" Creating an ImageWrapper You should use some kind of reference type that manages the memory. std::shared_ptr\u0026lt;ImageWrapper\u0026gt; is my recommendation. The ImageWrapper is a resource managing class. This means that you have to keep this object \u0026ldquo;alive\u0026rdquo; as long as you want to use the image. When the object goes out of scope \\ gets destructed it cleans up the resource it manages. Stick to std::shared_ptr and you almost can\u0026rsquo;t mess up. See all ImageWrapper functions here Add the declaration to your .h 1 std::shared_ptr\u0026lt;ImageWrapper\u0026gt; myImage; Using an ImageWrapper Use the constructor with the second or third argument true (or both). This can cause stuttering based on the size of the image. This is best done in your plugin\u0026rsquo;s onLoad. You only need to load the image once, and onLoad is expected to be a bit stuttery already 1 2 // ImageWrapper(std::string path, bool canvasLoad = false, bool ImGuiLoad = false); myImage = std::make_shared\u0026lt;ImageWrapper\u0026gt;(gameWrapper-\u0026gt;GetDataFolder() / \u0026#34;MyPluginFolder\u0026#34; / \u0026#34;MyImage.png\u0026#34;, true, true); Load the resource if you didn\u0026rsquo;t use the optional args. This also causes lag so it\u0026rsquo;s best to do this in onLoad or in a place that isn\u0026rsquo;t called often 1 2 myImage-\u0026gt;LoadForCanvas(); myImage-\u0026gt;LoadForImGui(); a. Pass it to the canvas wrapper in a drawable callback after ensuring it\u0026rsquo;s loaded 1 2 3 4 if (myImage-\u0026gt;IsLoadedForCanvas()) { canvas.DrawTexture(myImage.get(), 1); // there are multiple functions in the canvaswrapper that accept ImageWrapper* } b. Use it in your imgui render code. Again checking that it\u0026rsquo;s loaded 1 2 3 4 if (myImage-\u0026gt;IsLoadedForImGui() \u0026amp;\u0026amp; auto pTex = myImage-\u0026gt;GetImguiTex()) { auto rect = myImage-\u0026gt;GetSizeF(); ImGui::Image(pTex, { rect.width, rect.height }); } PS: The backend will load in the resource whenever you try to use the images if it hasn\u0026rsquo;t already been loaded. So you actually don\u0026rsquo;t have to worry about it, but the loading can cause some lag\\stutters. So it\u0026rsquo;s better to do it during loading the plugin - when such behaviour can be expected.\n"},{"id":248,"href":"/useful_info/github_plugin_template/","title":"GitHub Plugin Template","parent":"Useful Info","content":"As an easier alternative to the traditional Visual Studio template, you can use this other template to make a plugin. https://github.com/Martinii89/BakkesmodPluginTemplateV2\nInstructions copied from the README:\nCreate a repository from this template Click the big green button Use this template or click here. Enter a Repository name and click Create repository from template Head over to the created repository and complete the setup. Complete setup In the a new repository, complete the project setup by editing the cookiecutter.json file. Hit cmd + S and then Enter to perform a commit (the commit message doesn\u0026rsquo;t really matter). Wait for Setup Repository Action to complete. That\u0026rsquo;s it, easy isn\u0026rsquo;t it? Video of Steps "},{"id":249,"href":"/code_snippets/how_cvars_work/","title":"How CVars Work","parent":"Code Snippets","content":"Cvars are the global variables of the mod. Bakkesmod has many pre-defined CVars that your plugin can also set/unset. Cvars are strings, but can represent bool/float values in string form. The declaration of a CVar is: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // in include\\bakkesmod\\wrappers\\cvarmanagerwrapper.h // \u0026lt;summary\u0026gt;Register a CVar.\u0026lt;/summary\u0026gt; // \u0026lt;param name=\u0026#34;cvar\u0026#34;\u0026gt;The string name of your CVar\u0026lt;/param\u0026gt; // \u0026lt;param name=\u0026#34;defaultValue\u0026#34;\u0026gt;The default value of your CVar\u0026lt;/param\u0026gt; // \u0026lt;param name=\u0026#34;desc\u0026#34;\u0026gt;A description of your Cvar which is logged\u0026lt;/param\u0026gt; // \u0026lt;param name=\u0026#34;searchAble\u0026#34;\u0026gt;If the cvar will pop-up when entering values in the console.\u0026lt;/param\u0026gt; // \u0026lt;param name=\u0026#34;hasMin\u0026#34;\u0026gt;If there is a minumum value (i.e. a float slider)\u0026lt;/param\u0026gt; // \u0026lt;param name=\u0026#34;min\u0026#34;\u0026gt;if hasMin=true, this is the value.\u0026lt;/param\u0026gt; // \u0026lt;param name=\u0026#34;hasMax\u0026#34;\u0026gt;If there is a maximum value\u0026lt;/param\u0026gt; // \u0026lt;param name=\u0026#34;max\u0026#34;\u0026gt;if hasmax=true, this is the value.\u0026lt;/param\u0026gt; // \u0026lt;param name=\u0026#34;saveToCfg\u0026#34;\u0026gt;If true, will add the Cvar and default value to config.cfg\u0026lt;/param\u0026gt; // \u0026lt;returns\u0026gt; Vector of std::string keybinds.\u0026lt;/returns\u0026gt; registerCvar(std::string cvar, std::string defaultValue, std::string desc = \u0026#34;\u0026#34;, bool searchAble = true, bool hasMin = false, float min = 0, bool hasMax = false, float max = 0, bool saveToCfg = true); Notice the min/max arguments. The BM rebound plugin uses this i.e. \u0026ldquo;rebound_shotspeed\u0026rdquo; as a value between 0-2000.\nIn plugin onLoad(), cvarManager-\u0026gt;registerCVar() is called, this is where you tell bakkesmod details about your CVar and give it a default string values.\nWhen bakkesmod loads, it\u0026rsquo;ll execute plugins.cfg which loads each plugin. This is where onLoad() is fired, CVars are created and default values are set for each plugin. Then config.cfg will execute, which will set saved-values.\nTo save a value, you need to call \u0026lsquo;writeconfig\u0026rsquo; in the console, or programmatically with:\n1 cvarManager-\u0026gt;executeCommand(\u0026#34;writeconfig\u0026#34;, false); //false just means don\u0026#39;t log the writeconfig The config.cfg file containes all cvars/alias. Find this file in bakkesmod/cfg/config.cfg. This file is your route to easily saving CVars across sessions. Note that \u0026lsquo;writeconfig\u0026rsquo; will also execute binds.cfg, and save current keybinds.\nIf you want to reload a plugin while BM is running already but keep its values, make sure you use writeconfig before the plugin is unloaded, then unload/load or reload the plugin, now the plugin will have registered it cvars, but with default values. Then execute config.cfg to get your stored values back. In the console: \u0026rsquo;exec config.cfg\u0026rsquo;.\nHere is a typical example changing a CVar with ImGui checkbox: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 // myplugin.h class MyPlugin : public BakkesMod::Plugin::BakkesModPlugin, public BakkesMod::Plugin::PluginWindow { std::shared_ptr\u0026lt;bool\u0026gt; enabled; virtual void onLoad(); virtual void onUnload(); //... public: //... private: //... } // myplugin.cpp enabled = std::make_shared\u0026lt;bool\u0026gt;(true); cvarManager-\u0026gt;registerCvar(\u0026#34;plugin_enabled\u0026#34;, \u0026#34;0\u0026#34;, \u0026#34;Enable/Disable the plugin. 0 = false = disabled, 1 = true = enabled\u0026#34;) .bindTo(enabled); // bind the global shared pointer to this CVar cvarManager-\u0026gt;getCvar(\u0026#34;plugin_enabled\u0026#34;).addOnValueChanged([this](std::string oldValue, CVarWrapper cvar) { //addOnValueChanged is a callback, where everything in this block will be called whenever the cvar value is changed. You can call functions, or just log information. if (cvar.getStringValue() == \u0026#34;1\u0026#34;) { LOG(\u0026#34;Plugin Enabled\u0026#34;); }; if (cvar.getStringValue() == \u0026#34;0\u0026#34;) { LOG(\u0026#34;Plugin Disabled\u0026#34;); }; } ); // mypluginGUI.cpp static auto pluginCvar = cvarManager-\u0026gt;getCvar(\u0026#34;plugin_enabled\u0026#34;); auto pluginEnabled = pluginCvar.getBoolValue(); if (ImGui::Checkbox(\u0026#34;Enable Plugin\u0026#34;, \u0026amp;pluginEnabled)) { pluginCvar.setValue(pluginEnabled); cvarManager-\u0026gt;executeCommand(\u0026#34;writeconfig\u0026#34;, false); // save CVar to config.cfg } After registering the CVar, we bind it to the global bool. Bind to is pretty much a wrapper for: 1 2 3 4 5 6 void bindTo(CVar cvar, std::shared_ptr\u0026lt;T\u0026gt; abc) { cvar.addOnValueChanged([this](std::string, CVarWrapper cvar) { *abc = cvar.getTValue(); }); } Here\u0026rsquo;s another way: 1 2 3 4 5 6 7 // myplugin.h: static constexpr const char\\* pluginEnabled = \u0026#34;1\u0026#34;; // 1 is the default value here // myplugin.cpp cvarManager-\u0026gt;registerCvar(pluginEnabled, \u0026#34;1\u0026#34;, \u0026#34;Enable/Disable the plugin. 0 = false = disabled, 1 = true = enabled\u0026#34;, true, true, 0, true, 1); // all default values for registerCvar are used as arguments here, but not needed if they\u0026#39;re just defaults // usage would be the same. In addition to these methods, you can just make functions to call within .addOnValueChanged() to set Cvar values.\n"},{"id":250,"href":"/imgui/imgui_begin/","title":"ImGui Basics","parent":"Imgui","content":"This section is dedicated to ImGui, a library used for creating a user-friendly interface. There\u0026rsquo;s buttons, sliders, checkboxes, dropdowns, and all sorts of options. It also assumes you\u0026rsquo;re using the template, as the template automatically includes the ImGui library.\nAnd here\u0026rsquo;s a useful interactable imgui demo to see what these look like in action\nhttps://pthom.github.io/imgui_manual_online/manual/imgui_manual.html\n"},{"id":251,"href":"/code_snippets/playlist_id/","title":"Known Playlist IDs","parent":"Code Snippets","content":"All (known) playlist IDs - 2020\n-2: Intermission // Used internally to indicate to the server the client is switching playlists. 0: Casual // Generic id to indicate ALL casual playlists, commonly used in API responses related to player skill/mmr. 1: Duel 2: Doubles 3: Standard 4: Chaos 6: Private Match 7: Season 8: Exhibition 9: Training 10: Duel (Ranked) 11: Doubles (Ranked) 13: Standard (Ranked) 15: Snow Day 16: Rocket Labs 17: Hoops 18: Rumble 19: Workshop 20: Custom Training Editor 21: Custom Training 22: Tournament Match (Custom) 23: Dropshot 24: Local Match 26: External Match (Ranked) 27: Hoops (Ranked) 28: Rumble (Ranked) 29: Dropshot (Ranked) 30: Snow Day (Ranked) 31: Ghost Hunt 32: Beach Ball 33: Spike Rush 34: Tournament Match (Automatic) 35: Rocket Labs 37: Dropshot Rumble 38: Heatseeker 41: Boomer Ball 43: Heatseeker Doubles 44: Winter Breakaway 46: Gridiron 47: Super Cube 48: Tactical Rumble 49: Spring Loaded 50: Speed Demon 52: Gotham City Rumble 54: Knockout 55: confidential_thirdwheel_test Find the ID of the current playlist with this code. Click here for GameSettingPlaylistWrapper reference\n1 2 3 4 5 ServerWrapper sw = gameWrapper-\u0026gt;GetCurrentGameState(); if (!sw) return; GameSettingPlaylistWrapper playlist = sw.GetPlaylist(); if (!playlist) return; int playlistID = playlist.GetPlaylistId(); "},{"id":252,"href":"/useful_info/live_debugging/","title":"Live Debugging","parent":"Useful Info","content":"You can live debug your code by attaching Rocket League to visual studio and stepping through it\nThis page explains how\nhttps://github.com/MicrosoftDocs/visualstudio-docs/blob/main/docs/debugger/attach-to-running-processes-with-the-visual-studio-debugger.md\nFor rocket league, you need to attach to the process \u0026ldquo;RocketLeague.exe\u0026rdquo; (see capture, sorry for the french UI ^^) If you\u0026rsquo;re in an infinte loop (which never happens to me 😏), you can press the \u0026ldquo;interrupt\u0026rdquo; button, and Visual Studio will jump to the part of the code that is currently being executed\nIf you have a critical crash (if it\u0026rsquo;s your code) Visual will jump to the line that raised the exception\nFinally, you can put breakpoints by clicking the column before a line, and Visual will stop here and let you inspect the different values in your code.\n"},{"id":253,"href":"/useful_info/logging/","title":"Logging","parent":"Useful Info","content":"Hitting f6 in Rocket League with BakkesMod running opens the console. You can log to this with a helpful template function, LOG().\nLOG uses a really smart formatting library to make your life easier called fmt\nHere\u0026rsquo;s an example. Simply put, it replaces any {} in the string with whatever arguments you put after 1 2 3 4 5 6 7 float a = 10.10; int b = 11; std::string c = \u0026#34;12\u0026#34;; bool d = false; LOG(\u0026#34;a = {}, b = {}, c = {}, d = {}\u0026#34;, a, b, c, d); // outputs [class OBSCounter] a = 10.1, b = 11, c = 12, d = false There\u0026rsquo;s one tiny caveat. Make sure that you only use LOG after the line _globalCvarManager = cvarManager; is run in onLoad(), as it depends on _globalCvarManager. You can use it immediately after that line.\nCheck out fmt docs here for more features\n"},{"id":254,"href":"/useful_info/mmr/","title":"MMR","parent":"Useful Info","content":"These code snippets will help you track a player\u0026rsquo;s MMR. BakkesMod only gets player MMR in matches you\u0026rsquo;re in, so it\u0026rsquo;s best used for the primary player or any players in your party. You can\u0026rsquo;t get any arbitrary player\u0026rsquo;s MMR.\nIn yourplugin.h, create a smart pointer for the token. Even if you don\u0026rsquo;t use the token, BakkesMod uses it to ensure that MMR is still being tracked. If you don\u0026rsquo;t declare it using a C++ pointer, you might not get any MMR updates. 1 std::unique_ptr\u0026lt;MMRNotifierToken\u0026gt; notifierToken; When you want to start tracking MMR, likely in onLoad(), register the notifier. Each time BakkesMod gets any player\u0026rsquo;s MMR, it will do whatever is inside the {}. For best style, it calls a function written elsewhere. 1 2 3 4 5 notifierToken = gameWrapper-\u0026gt;GetMMRWrapper().RegisterMMRNotifier( [this](UniqueIDWrapper id) { updateStats(id); } ); Here\u0026rsquo;s an example callback function called updateStats. You can get any playlist\u0026rsquo;s MMR for that player now, see playlist IDs here 1 2 3 4 5 void PluginName::updateStats(UniqueIDWrapper id) { float mmr = gameWrapper-\u0026gt;GetMMRWrapper().GetPlayerMMR(id, playlistID); LOG(\u0026#34;{} MMR is: {}\u0026#34;, id.GetIdString(), mmr); } To ensure the player is someone you care about, you can compare their ID to the primary or any other player\u0026rsquo;s PRI 1 2 3 4 5 6 7 8 9 PlayerControllerWrapper pc = gameWrapper-\u0026gt;GetPlayerController(); if (!pc) { return; } PriWrapper pri = pc.GetPRI(); if (!pri) { return; } UniqueIDWrapper primaryID = pri.GetUniqueIdWrapper(); if (id == primaryID) { // This is Player 1\u0026#39;s new MMR! } "},{"id":255,"href":"/useful_info/multiplayer_plugins/","title":"Multiplayer Plugins","parent":"Useful Info","content":"Netcode plugins are a powerful way to handle asymmetrical multiplayer plugins. It can allow clients to control the match, when normally only the host can. This is much better described in this video by CinderBlock\nhttps://youtu.be/jyFuN8k2uIs\nIf you want to make your own netcode plugin, there\u0026rsquo;s a template for it just like normal plugins. It does all the setup shown in the above video automatically. Follow the README to install it\nhttps://github.com/ubelhj/BakkesmodNetcodePluginTemplate\n"},{"id":256,"href":"/useful_info/other_languages/","title":"Other Languages","parent":"Useful Info","content":"There\u0026rsquo;s a couple super useful libraries that let you write plugins in other programming languages. We can\u0026rsquo;t really guarantee any tutorials in this server as we don\u0026rsquo;t have anyone with much experience in them. If you use them feel free to add help and make a pull request. You\u0026rsquo;re still welcome to ask for help with them in the discord, but most people here use the standard C++ library and it may be hard to get specific help\nPython by Stanbroek https://github.com/Stanbroek/BakkesModSDK-Python\nRust by Arator https://docs.rs/bakkesmod/0.2.1/bakkesmod/\n"},{"id":257,"href":"/code_snippets/persistent_storage/","title":"Persistent Storage","parent":"Code Snippets","content":"Use these files in your plugin files to store persistent data with cvars but without risking the cvars being cleared\nUsage 1 2 3 4 5 // preferably in onload but at least before you use it (genious advice) persistent_storage_ = std::make_shared\u0026lt;PersistentStorage\u0026gt;(this, \u0026#34;Hats\u0026#34;, true, true); //register the cvar like \u0026#34;normal\u0026#34; auto cvar = persistent_storage_-\u0026gt;RegisterPersistentCvar(\u0026#34;hats_preset\u0026#34;, \u0026#34;\u0026#34;, \u0026#34;The selected preset\u0026#34;, true); Download these files to use\nPersistentStorage.h\nPersistentStorage.cpp\n"},{"id":258,"href":"/code_snippets/plugin_exclusive_logging/","title":"Plugin Exclusive Logging","parent":"Code Snippets","content":"Want to see the console logging from just your plugin? Open a new PowerShell window and use this command\n1 Get-Content (-join($env:APPDATA, \u0026#34;\\bakkesmod\\bakkesmod\\bakkesmod.log\u0026#34;)) -wait -tail 1 | select-string -pattern \u0026#34;PLUGIN_NAME\u0026#34; "},{"id":259,"href":"/code_snippets/plugin_types/","title":"Plugin Types","parent":"Code Snippets","content":"BAKKESMOD_PLUGIN(CoolPlugin, \u0026#34;Cool Plugin\u0026#34;, plugin_version, PLUGINTYPE_FREEPLAY) These are a relic of an unrealized feature. Most do nothing.\nIt\u0026rsquo;s easiest to just leave it as PLUGINTYPE_FREEPLAY from the template, but you can use any of the non-threaded options interchangeably.\nPLUGINTYPE_FREEPLAY through PLUGINTYPE_REPLAY plugins all work in any gamemode or playlist\nPLUGINTYPE_THREADED means that the plugin\u0026rsquo;s onLoad() is called in its own thread\nPLUGINTYPE_THREADEDUNLOAD means that the plugin\u0026rsquo;s onUnload() is called in its own thread\nThese are only necessary if you have something very complicated and time consuming in your onload or unload.\nAll of the others do nothing.\n1 2 3 4 5 6 7 PLUGINTYPE_FREEPLAY = 0x01, // Plugin works everywhere PLUGINTYPE_CUSTOM_TRAINING = 0x02, // Plugin works everywhere PLUGINTYPE_SPECTATOR = 0x04, // Plugin works everywhere PLUGINTYPE_BOTAI = 0x08, // Plugin works everywhere PLUGINTYPE_REPLAY = 0x10, // Plugin works everywhere PLUGINTYPE_THREADED = 0x20, // Plugin works everywhere and onLoad() is called in its own thread PLUGINTYPE_THREADEDUNLOAD = 0x40 // Plugin works everywhere and onUnload() is called in its own thread "},{"id":260,"href":"/useful_info/submitting_to_bakkesplugins/","title":"Submitting to Bakkesplugins","parent":"Useful Info","content":"You\u0026rsquo;ve looked through the docs in desperation, angrily screamed at your computer, crashed a couple times, but it\u0026rsquo;s all worth it! You have made a super cool plugin that you want to share! Nice job!\nFirst open your DMs in the Programming or BakkesMod server. This will allow moderators to contact you through our bot. If you plugin is denied, this is how you\u0026rsquo;ll find out why.\nPlugins are officially hosted at https://bakkesplugins.com/. Go there and sign up for an account. Please make the username similar to a discord or github you can be contacted at.\nOnce you\u0026rsquo;re logged in, hover over your name in the top right, hit Account, and then hit Add New Plugin\nYou\u0026rsquo;ll come to a new page asking for details. Give your plugin a title, a one-sentence description, and a longer description. Add any relevant tags too. You can also add a plugin homepage, which will be included as a link from the plugin page. This is a great place to link to the plugin\u0026rsquo;s source code on github, gitlab, or other version control host!\nAlso choose if it\u0026rsquo;s visible and publically listed. If not visible, nobody but you can see the plugin. If not listed your plugin will be accessible through the URL directly but not searchable. It is still easy to find a not listed plugin though, so only make a plugin visible if you\u0026rsquo;re comfortable with it being public\nNext upload a .png banner for the plugin. It should be below 50 MB? and wider than it is tall. 16 x 9 is a reasonable ratio.\nFinally is the plugin .zip. Make a .zip file including all of your source files and nothing else. You should include the .sln, the .vcxproj, any .cpp, .h, or .hpp files, and any other additional data files like .set or images to be included.\nIf you have the .sln outside the solution folder, include the green checked files\nIf you have the .sln inside the solution folder, include the green checked files\nOnce you have everything just hit submit! All plugins are manually reviewed and built by volunteer moderators. It may take a couple days to a couple weeks depending on moderator availability. Please be respectful of the time it may take. Please use the plugin template to make building to .dll smooth and easy for the moderators.\nIf your plugin includes any .dll files from outside sources or has weird build steps, please make it clear through a README or by asking in the discord. We will do our best to accomodate special exceptions if the plugin clearly needs it and moderators are capable of getting files from a safe source. For example Nvidia Highlights requires a pre-built .dll from Nvidia themselves, as it was easily accessible we were able to package that in a plugin download. If it\u0026rsquo;s unreasonably difficult to obtain outside source files or build the plugin, it will be denied\nBakkesplugins retains the right to deny or remove any plugin. A plugin will not be approved if it can be considered malicious, downloads and/or runs potentally dangerous files, breaks the Rocket League Code of Conduct\u0026rsquo;s rules for mods, or is otherwise not allowed by Psyonix\n"},{"id":261,"href":"/tags/","title":"Tags","parent":"Welcome to the BakkesMod Programming Wiki!","content":""},{"id":262,"href":"/code_snippets/toasts/","title":"Toasts","parent":"Code Snippets","content":"Toasts are cool little popups that show on the top right of your game\nThese are useful for quick notifications that you want to disappear quickly\nFirst you need to enable them in f2 - Misc - Enable notifications\nWatch out though! Every user also has to enable this, so make sure your plugin page or interface is quite clear that this is necessary\nNow to the code\nMake a toast pop up with GameWrapper.Toast()\nThere are 7 parameters. The first two are required. They are\nThe title, which is the word on top The text, which is the smaller text below The texture name which I\u0026rsquo;ll explain in the next paragraph The time to show the toast, which defaults to 3.5 seconds The ToastType, which chooses the color and defaults to black The width in pixels. The toast automatically resizes to fit your text, so don\u0026rsquo;t worry about these too much The height in pixels If you want to have a custom image, load it in your onLoad() using GameWrapper.LoadToastTexture(). Provide the function with a name for your toast, and the path to the image. Most likely you\u0026rsquo;ll want it to be in the data folder.\nToasts can be one of 4 colors based on the ToastType\nI\u0026rsquo;ve made an example using CoolPlugin. I put this code in the onLoad() in CoolPlugin.cpp and cool.png in the bakkesmod/data folder 1 2 3 4 5 gameWrapper-\u0026gt;LoadToastTexture(\u0026#34;cool\u0026#34;, gameWrapper-\u0026gt;GetDataFolder() / \u0026#34;cool.png\u0026#34;); cvarManager-\u0026gt;registerNotifier(\u0026#34;cool_toast\u0026#34;, [this](std::vector\u0026lt;std::string\u0026gt; args) { gameWrapper-\u0026gt;Toast(\u0026#34;Whoa you\u0026#39;re cool\u0026#34;, \u0026#34;Super cool\u0026#34;, \u0026#34;cool\u0026#34;, 5.0, ToastType_Warning); }, \u0026#34;\u0026#34;, PERMISSION_ALL); The result when I call cool_toast from the f6 console\nFor perspective, it\u0026rsquo;s quite small but still legible\nFull code here https://github.com/ubelhj/BakkesModStarterPlugin/tree/toasts\n"},{"id":263,"href":"/useful_info/troubleshooting_bakkesmod/","title":"Troubleshooting Bakkesmod","parent":"Useful Info","content":"Made it here because your BakkesMod isn\u0026rsquo;t working? No worries, check this other wiki here\nhttps://bakkesmod.fandom.com/wiki/Troubleshooting\n"},{"id":264,"href":"/useful_info/useful_links/","title":"Useful Links","parent":"Useful Info","content":"Here\u0026rsquo;s some links that we couldn\u0026rsquo;t find a good place for\nCreating a .set file https://bakkesmod.fandom.com/wiki/Plugin_settings_files\nImGui demo https://pthom.github.io/imgui_manual_online/manual/imgui_manual.html\nImGui builder program https://github.com/Code-Building/ImGuiBuilder\nUseful game values (map size, boost locations, etc.) https://github.com/RLBot/RLBot/wiki/Useful-Game-Values\nUDK site for canvas. The BM CanvasWrapper has some of these features https://docs.unrealengine.com/udk/Three/CanvasTechnicalGuide.html\nCanvasWrapper library for improved tools https://github.com/CinderBlocc/RenderingTools\nUnreal Command https://bakkesmod.fandom.com/wiki/Unreal_command\n"},{"id":265,"href":"/code_snippets/using_http_wrapper/","title":"Using HttpWrapper","parent":"Code Snippets","content":" HttpWrapper Sending a simple http request with a string body 1 2 3 4 5 6 7 8 9 CurlRequest req; req.url = \u0026#34;https://httpbin.org/anything\u0026#34;; req.body = \u0026#34;testing with body\u0026#34;; LOG(\u0026#34;sending body request\u0026#34;); HttpWrapper::SendCurlRequest(req, [this](int code, std::string result) { LOG(\u0026#34;Body result{}\u0026#34;, result); }); Perform an HTTP/S JSON request 1 2 3 4 5 6 7 8 9 10 11 12 13 CurlRequest req; req.url = \u0026#34;https://httpbin.org/anything\u0026#34;; req.body = R\u0026#34;T({ \u0026#34;userId\u0026#34;: 1, \u0026#34;id\u0026#34;: 1, \u0026#34;title\u0026#34;: \u0026#34;delectus aut autem\u0026#34;, \u0026#34;completed\u0026#34;: false })T\u0026#34;; HttpWrapper::SendCurlJsonRequest(req, [this](int code, std::string result) { LOG(\u0026#34;Json result{}\u0026#34;, result); }); Sending a file over HTTP/S 1 2 3 4 5 6 7 8 9 10 { CurlRequest req; req.url = \u0026#34;https://httpbin.org/anything\u0026#34;; req.body = \u0026#34;testing body with file output\u0026#34;; LOG(\u0026#34;sending file output body request\u0026#34;); HttpWrapper::SendCurlRequest(req, L\u0026#34;file_output_test.txt\u0026#34;, [this](int code, std::wstring result) { LOG(\u0026#34;sending file output body request: returned\u0026#34;); }); Downloading a file with download progress callbacks and reading the raw downloaded data 1 2 3 4 5 6 7 8 9 10 11 12 13 14 CurlRequest req; req.url = \u0026#34;url\u0026#34;; req.progress_function = [](double file_size, double downloaded, ...) { if (file_size != 0) LOG(\u0026#34;Download progress {:.2f}%\u0026#34;, downloaded / file_size * 100); }; HttpWrapper::SendCurlRequest(req, [this](int code, char* data, size_t size) { std::ofstream out_file {\u0026#34;test_image_raw.jpeg\u0026#34;, std::ios_base::binary}; if (out_file) out_file.write(data, size); }); Downloading a file to the filesystem 1 2 3 4 5 6 7 8 CurlRequest req; req.url = \u0026#34;url\u0026#34;; LOG(\u0026#34;sending raw output image download request\u0026#34;); HttpWrapper::SendCurlRequest(req, L\u0026#34;test_image.jpeg\u0026#34;, [this](int code, std::wstring out_path) { LOG(\u0026#34;file image download code: {}\u0026#34;, code); }); Sending a request with FormData 1 2 3 4 5 6 7 8 9 10 CurlRequest req; req.url = \u0026#34;url\u0026#34;; req.form_data.push_back(FormField{FormField::Type::kString, \u0026#34;some data\u0026#34;, \u0026#34;test_field\u0026#34;}); req.form_data.push_back(FormField{FormField::Type::kFile, \u0026#34;test_file.txt\u0026#34;, \u0026#34;test_file\u0026#34;}); LOG(\u0026#34;sending post request with fields (both file and string)\u0026#34;); HttpWrapper::SendCurlRequest(req, [this](int code, std::string res) { LOG(\u0026#34;Post result: {}\u0026#34;, res); }); "},{"id":266,"href":"/","title":"Welcome to the BakkesMod Programming Wiki!","parent":"","content":" Get Started with Plugins Important Links: Download BakkesMod\nFind and Submit Plugins\nBM Programming Discord\nJoin our Discord! "},{"id":267,"href":"/useful_info/writing_files/","title":"Writing Files","parent":"Useful Info","content":"Use gameWrapper-\u0026gt;GetBakkesModPath() and use that as the base path to write to (this will be %appdata%/bakkesmod/bakkesmod). This works for both Epic and Steam installs\nMake sure you\u0026rsquo;ve included fstream 1 #include \u0026lt;fstream\u0026gt; C++17 1 2 3 4 std::ofstream stream( gameWrapper-\u0026gt;GetBakkesModPath() / \u0026#34;data\u0026#34; / \u0026#34;abc.txt\u0026#34; ); std::ofstream stream( gameWrapper-\u0026gt;GetDataFolder() / \u0026#34;abc.txt\u0026#34; ); //Note the removal of \u0026#34;data\u0026#34; stream \u0026lt;\u0026lt; \u0026#34;def\u0026#34;; // %appdata%/bakkesmod/bakkesmod/data/abc.txt now includes \u0026#34;def\u0026#34; Older C++ 1 2 3 //Note that windows paths require wide strings, so need to use the L to indicate a wide string std::ofstream stream( gameWrapper-\u0026gt;GetBakkesModPathW() + L\u0026#34;data/abc.txt\u0026#34; ); std::ofstream stream( gameWrapper-\u0026gt;GetDataFolderW() + L\u0026#34;abc.txt\u0026#34; ); We highly recommend using C++17. This is the default in the template. If not using the template, in Visual Studio go to your project\u0026rsquo;s properties -\u0026gt; C/C++ -\u0026gt; Language -\u0026gt; C++ Language Standard -\u0026gt; ISO C++17 Standard (/std:c++17). This will allow you to use std::filesystem::path which prevents a lot of pathing errors (like weird characters in folder names and missing/mixed folder separators) and in general is just much easier to work with.\n"}]