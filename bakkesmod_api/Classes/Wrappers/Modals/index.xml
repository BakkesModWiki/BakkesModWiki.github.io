<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BakkesMod Programming Wiki</title>
    <link>https://bakkesmodwiki.github.io/bakkesmod_api/Classes/Wrappers/Modals/</link>
    <description>Recent content on BakkesMod Programming Wiki</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <atom:link href="https://bakkesmodwiki.github.io/bakkesmod_api/Classes/Wrappers/Modals/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ModalWrapper</title>
      <link>https://bakkesmodwiki.github.io/bakkesmod_api/Classes/Wrappers/Modals/ModalWrapper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://bakkesmodwiki.github.io/bakkesmod_api/Classes/Wrappers/Modals/ModalWrapper/</guid>
      <description> View Implementation void ShowModal() const void CloseModal() void SetColor(float r, float g, float b) Parameter Type Description r float &amp;mdash; g float &amp;mdash; b float &amp;mdash; void SetIcon(const std::string &amp;amp;iconName) Parameter Type Description iconName const std::string &amp;amp; &amp;mdash; void SetBody(const std::string &amp;amp;bodyHtml) Parameter Type Description bodyHtml const std::string &amp;amp; &amp;mdash; void AddButton(const std::string &amp;amp;button_text, bool is_cancel_button, std::function&amp;lt; void()&amp;gt; click_callback=nullptr) Parameter Type Description button_text const std::string &amp;amp; &amp;mdash; is_cancel_button bool &amp;mdash; click_callback std::function&amp;lt; void()&amp;gt; &amp;mdash; </description>
    </item>
    <item>
      <title>TextInputModalWrapper</title>
      <link>https://bakkesmodwiki.github.io/bakkesmod_api/Classes/Wrappers/Modals/TextInputModalWrapper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://bakkesmodwiki.github.io/bakkesmod_api/Classes/Wrappers/Modals/TextInputModalWrapper/</guid>
      <description> View Implementation void SetTextInput(const std::string &amp;amp;defaultText, int32_t max_text_length, bool password, std::function&amp;lt; void(std::string, bool)&amp;gt; input_callback) Parameter Type Description defaultText const std::string &amp;amp; &amp;mdash; max_text_length int32_t &amp;mdash; password bool &amp;mdash; input_callback std::function&amp;lt; void(std::string, bool)&amp;gt; &amp;mdash; </description>
    </item>
  </channel>
</rss>
